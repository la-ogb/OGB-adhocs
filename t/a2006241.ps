./* ====================================================================
+ NAME:
+   a2006241.ps
+
+ DESCRIPTION:
+   Fixes erronous data sent threw section111 file
+
+ CREATED BY:
+   apdrh - 2020-06-24
+
+ LAST MODIFIED BY:
+   apjwh - 2020-06-30
. * ================================================================= */

./* =================
. * Variable Includes
. * ================= */
    INC UTIL_COMMON.CB  ... OGB Common variables for UTIL routine
    INC UTIL_MEMMEM.CB
    INC CMS_MSP_INPUT.CB
    INC VALID.RL

./* ===================================
. * Scheduler Params
. * =================================== */
PARAM_LIST              LIST WITH NAMES
PARAM_TEST              CHAR    4
                        LISTEND

.# =================================================================== #
.# Debugging Configuration
.# =================================================================== #

ENABLE_TEST             NUM     1
TEST_CONFIG             LIST
TEST_EMAIL              INIT    "donald.hutchinson@la.gov"
                        LISTEND

.# =================================================================== #
.# Run Configuration
.# =================================================================== #

EMAIL_GROUP             INIT     "${ITAPPS}"

./* ===================================
. * File & Global Variable Declarations
. * =================================== */

...Input File
OLD_MSP_FILE            FILE    VAR=500,TEXT
OLD_MSP_NAME            INIT    "/w/badmsp_20150415.txt"
OLD_MSP_LIST            LIST
OLD_MSP_REC             CHAR    500
                        LISTEND

...Output File
FIX_TERM_FILE           FILE    VAR=500,TEXT
FIX_TERM_NAME           INIT    "/w/badmsp_fix_output.txt"
FIX_TERM_LIST           LIST
FIX_TERM_REC            CHAR    500
                        LISTEND

MSP_LOG_FILE            FILE    VAR=200,TEXT
MSP_LOG_NAME            INIT    "/w/msp_update.log"

HEALTH_MAX              EQU     100
MY_ARRAY                CHAR    X_MEME_SIZE[HEALTH_MAX]   ...HEALTH_RECS
HEALTH_COUNT            NUM     3

ACTIVE_MAX              EQU     100
ACTIVE_SPANS            CHAR    16[ACTIVE_MAX]
ACTIVE_SPAN_COUNT       NUM     3

ACTIVE_SPAN_LIST        LIST
SPAN_EFF                CHAR    8
SPAN_TRM                CHAR    8
                        LISTEND

LOG_INFO                CHAR    125
RUNDATE                 CHAR    8
START_DATETIME          CHAR    24
END_DATETIME            CHAR    24

./* =============
. * Begin Program
. * ============= */

...Non-Impact scheduler run - Start here
    CALL RUN_NOW
    CHAIN C_NEXT

...Scheduler begins here
    INC SCHED_NP.SR // for use without the printer

.#######################################################################
RUN_NOW LROUTINE
./* Set runtime variables
. */
    MOVE "a2006211" TO C_PROG
    MOVE "MSP Error Fix" TO C_OPER  ...Change
    MOVE "menu" TO C_NEXT
    MOVE BLANKS TO C_LABEL
    MOVE BLANKS TO C_FILE
    MOVE BLANKS TO C_KEYS

.Check if the program was called from the command line
    IF (C_CMDPAR)
        CALL CMD_START USING C_PROG
    ELSE
        CALL X_BLANK_SCREEN
    ENDIF

.Configure test options based on file mode. Default is Production
    CALL UTIL_SET_TESTMODE USING PARAM_TEST:  ...scheduler param
                                 ENABLE_TEST:  ...test toggle
                                 TEST_CONFIG  ...test settings list

...Set applicable traps
    TRAPSAVE TRAP_DATA
    TRAPCLR ALL
    TRAP QUIT NORESET IF F9

...Get scheduler information
    CALL SCHED_PICK

    IF (RUN_MODE = "B" | RUN_MODE = "N")
        CALL MAIN_PROCESS
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
MAIN_PROCESS LROUTINE
    debug
    CALL INITIALIZE
    CALL PROCESS_MSP
    CALL CLEAN_UP

    RETURN
    ENDROUTINE


.#######################################################################
INITIALIZE LROUTINE
    CLOCK CALENDAR TO START_DATETIME
    CLOCK TIMESTAMP TO RUNDATE

.Setup counters
    PACK X_CNTDESC1 WITH "Records Read            ",BLANKS
    PACK X_CNTDESC2 WITH "Term Date Changed       ",BLANKS
    PACK X_CNTDESC3 WITH "Record to Void          ",BLANKS
    PACK X_CNTDESC4 WITH "Total Records Changed   ",BLANKS

    CALL X_ZERO_COUNTS
    IF NOT (C_CMDPAR)
        CALL X_DISPLAY_COUNTS
    ENDIF

    CALL OPEN_OGBFILE USING OLD_MSP_FILE,OLD_MSP_NAME
    CALL PREP_OGBFILE USING FIX_TERM_FILE,FIX_TERM_NAME
    CALL PREP_OGBFILE USING MSP_LOG_FILE,MSP_LOG_NAME

    RETURN
    ENDROUTINE


.#######################################################################
PROCESS_MSP LROUTINE
+ Process the old MSP file from 4/2015 and generate the correct term
+ date for all members that lost status as an Active Covered Individual
+ since then.
+
+ NOTE: This process will only fix those record we sent erroneously.
+ It will not handle cases such as rehired retirees & members returning
+ to BCBS afeter dropping it for the span that was reported on this old
+ file
REC         NUM     7
...

    MOVE OGB_SEQ1 TO OGB_SEQ
    LOOP
        CALL READ_OGBFILE_SEQ USING OLD_MSP_FILE,OLD_MSP_NAME,MSPX_LIST
        WHILE (RESULT = 1)

        CALL UTIL_XCOUNTER USING X_CNT1,100
        debug
        CALL UTIL_MEM_FIND USING MSPX_MEM
        WHILE EQUAL

        CALL GET_ALL_HEALTH_PLANS   .gets the raw data we care about
        CALL BUILD_ACTIVE_SPANS     .builds the model we need for this program

.Our data model
.                          eff       trm
.        ACTIVE_SPAN[1] - 2015010120170331
.            MY_ARRAY[1] - BLUEMAGNOPLUSEE2015010120160131    .on MSP
.            MY_ARRAY[2] - BLUEMAGNOPLUSES2016020120170331    .on MSP - upgrade of cov level
.            MY_ARRAY[3] - PPLSH        ES2017040120171231    .not on MSP - break in active span
.        ACTIVE_SPAN[2] - 2018010199999999
.            MY_ARRAY[4] - BLUE         ES2018010199999999    .

        FOR REC FROM 1 TO ACTIVE_SPAN_COUNT
            UNPACK ACTIVE_SPANS[REC] INTO ACTIVE_SPAN_LIST

.TODO: logic to determie which term to send


        REPEAT
    REPEAT

    RETURN
    ENDROUTINE


.#######################################################################
GET_ALL_HEALTH_PLANS LROUTINE
+ Get all health plans and sort into ascending date order
FIRST_MEME      NUM   1
...
    SET FIRST_MEME

    LOOP
        debug
        IF (FIRST_MEME)
            CLEAR FIRST_MEME
            CALL UTIL_MEME_FIND USING MEM_ID1
        ELSE
            CALL UTIL_MEME_NEXT
        ENDIF
        WHILE EQUAL

.Examples
.   BLUE - 1/1/15 - 4/30/15.
.   BLUE - 6/1/15 - current
        CONTINUE IF (CHOP MEME_TRM < MSPX_EFF)
        CONTINUE IF (MEME_EFF > MEME_TRM)
        CONTINUE IF (SQUEEZE MEME_LEV2 = "95" & SQUEEZE MEME_MODE = "")
        CONTINUE IF (SQUEEZE MEME_LEV2 = "90" & SQUEEZE MEME_MODE != "")
        CONTINUE IF (CHOP MEME_LEV1 = "5000")

.Skip extra billing records and other records we don't care about
        CALL IS_HEALTH_CLIP USING MEME_NET,MEME_PRD,MEME_PLAN
        CONTINUE IF (OVER)
        debug
        CALL UTIL_SAFE_PACK_ARRAY_LIST USING MEME_LIST,MY_ARRAY,HEALTH_COUNT,HEALTH_MAX
    REPEAT

    IF (HEALTH_COUNT > 1)

.Sort by eff ascedning, then sort by term descending
        CALL SORT_ENROLLMENTS USING MY_ARRAY,HEALTH_COUNT
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
BUILD_ACTIVE_SPANS LROUTINE
+ Build continuous health records as an Active Covered Individual into
+ spans of coverage
REC         NUM     1
...
    CLEAR ACTIVE_SPAN_LIST
    FOR REC FROM 1 TO HEALTH_COUNT
        debug
        UNPACK MY_ARRAY[REC] INTO MEME_LIST

.The only MEME_LEV2 > 90 that are active are 92s - rehired retirees
        CMATCH "9" IN MEME_LEV2
        IF EQUAL
            CONTINUE IF (CHOP MEME_LEV2 != "92")
        ENDIF

.Skip retirement plans
        CMATCH "R" IN MEME_LEV1
        CONTINUE IF (EQUAL)

.We are only reporting on BCBS plans for the moment
        CONTINUE IF (CHOP MEME_NET != "BLUE")
        debug

.TODO: add logic to see if this health record is continuous with the previous
.health record. __Only__ add a record to the ACTIVE_SPANS once you have a break
.in active coverage
        IF (CHOP SPAN_EFF = "")
            PACK SPAN_EFF WITH MEME_EFF
            PACK SPAN_TRM WITH MEME_TRM
        ELSE
            CONTINUE IF (MEME_TRM <= SPAN_TRM)
            CALL DATE_CALC USING SPAN_TRM,"ADD","DAYS",1,SPAN_EFF
            IF (SPAN_EFF = MEME_EFF)
                PACK SPAN_TRM WITH MEME_TRM
            ELSE
                CALL UTIL_SAFE_PACK_ARRAY_LIST USING ACTIVE_SPAN_LIST,ACTIVE_SPANS,ACTIVE_SPAN_COUNT,ACTIVE_MAX
                PACK SPAN_EFF WITH MEME_EFF
                PACK SPAN_TRM WITH MEME_TRM
            ENDIF
        ENDIF
        BREAK IF (SPAN_TRM = LAST_DATE)
.ie, either:
.   a break in coverage
.       2 spans
.           eff 1/1/2015 - 3/31/2016 (span 1)
.           [a break in coverage]
.           eff 1/1/2019 - current (span 2)
.
.   or a break in ACTIVE coverage (the code above filters non active enrollment lines)
.       2 spans
.           eff 1/1/2015 - 3/31/2016 (8815-00 = active) (span 1)
.           eff 4/1/2016 - 12/31/2018 (R98-8815 = retired = not active = break in ACTIVE coverage)
.           eff 1/1/2019 - current (8815-92  rehired retiree = active) (span 2)
.
.If there is a new record, but it is contuous and still active, it's considered a single span
.   a single span
.       eff 1/1/2015 - 3/31/2016 (8815-00 = active) - start of span 1
.       eff 4/1/2016 - 12/31/2019 (0300-00 = active but diff agency) - still part of span 1
.       eff 1//1/2020 - 4/30/2020 (0300-00 = active) - still a part of span 1
.       [end of coverage]
    REPEAT
    IF (CHOP SPAN_EFF > "")
        CALL UTIL_SAFE_PACK_ARRAY_LIST USING ACTIVE_SPAN_LIST,ACTIVE_SPANS,ACTIVE_SPAN_COUNT,ACTIVE_MAX
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
VOID_DATE LROUTINE
+ Sets Term date to 1 day before effective date

    MOVE "1" TO MSPX_TRXT
    CALL DATE_CALC USING MSPX_EFF, "SUB", "DAYS", 1, MSPX_TRM
    CALL UTIL_XCOUNTER USING X_CNT2,100

    RETURN
    ENDROUTINE


.#######################################################################
RECORD_WRITE LROUTINE

    IF (MSPX_TRM < MSPX_EFF)
        PACK MSPX_TRXT WITH "1" .delete
    ELSE
        PACK MSPX_TRXT WITH "2" .update
    ENDIF

    CALL WRITE_OGBREC USING FIX_TERM_FILE,FIX_TERM_NAME,MSPX_LIST
    CALL UTIL_XCOUNTER USING X_CNT4,100

    RETURN
    ENDROUTINE


.#######################################################################
SORT_ENROLLMENTS LROUTINE ARRAY@,ARRAY_COUNT@
.Sort a MEME array by its effective dates

ARRAY@              CHAR    @[]
ARRAY_COUNT@        NUM     @

    IF (ARRAY_COUNT@ > 1)
        LOADMOD "UTIL_ASORT"
        ASORT ATYPE="REC":
               ARRAY=ARRAY@:
               AMAX=ARRAY_COUNT@:
               SRTFLD1="96-103",SRTORD1="A":
               SRTFLD2="104-111",SRTORD1="A"
        UNLOAD "UTIL_ASORT"
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
CLEAN_UP
+ Cleanup after this process
UPDATE_DIR      CHAR    150
MSP_LOG         CHAR    150
...
    CLOCK CALENDAR TO END_DATETIME

    CALL CLOSE_OGBFILE USING OLD_MSP_FILE,OLD_MSP_NAME
    CALL CLOSE_OGBFILE USING FIX_TERM_FILE,FIX_TERM_NAME
    CALL CLOSE_OGBFILE USING MSP_LOG_FILE,MSP_LOG_NAME
.Anyting else?

.Archives update file
    CALL UTIL_GET_FILES_DIR USIN UPDATE_DIR
    CALL UTIL_PENDING_BACKUP USING UPDATE_DIR,FIX_TERM_NAME,""

.Archives input file
    CALL UTIL_PENDING_BACKUP USING "/w/",OLD_MSP_NAME,"_",RUNDATE

    debug
.Cleanups log file
    CALL UTIL_TRIM_TRAILING_SPACE USING MSP_LOG_NAME,MSP_LOG_NAME
    PACK MSP_LOG WITH "/w/msp_update_log_",RUNDATE,".csv"
    CALL UTIL_RENAME_FILE USING "/w/",MSP_LOG_NAME,MSP_LOG

    CALL EMAIL_LOG USING MSP_LOG
    CALL UTIL_PENDING_BACKUP USING "/w/",MSP_LOG,""
    CALL UTIL_DELETE_FILE USING MSP_LOG

.Removes work file
    CALL UTIL_DELETE_FILE USING OLD_MSP_NAME

    RETURN
    ENDROUTINE


.######################################################################
EMAIL_LOG LROUTINE LOG@
+ Emails log file
LOG@         CHAR    @
SUBJECT     CHAR    100
BODY        CHAR    5000
RECIPIENTS  CHAR    100
...
    debug
    CALL UTIL_SET_SUBJECT USING "A2006241 Complete - MSP File Update",ENABLE_TEST,SUBJECT
    CALL UTIL_SET_RECIPIENTS USING RECIPIENTS,EMAIL_GROUP,TEST_EMAIL
    CALL UTIL_PACK_BODY_AND_COUNTERS USING BODY,"Process to term the erroneously sent 2015 MSP file records."
    CALL UTIL_EMAIL_NEOJ USING C_PROG:
                               RECIPIENTS:
                               SUBJECT:
                               BODY:
                               START_DATETIME:
                               END_DATETIME:
                               LOG@
    RETURN
    ENDROUTINE


./* ==============================
. * Subroutines and Other Includes
. * ============================== */
... MCSI includes found in /nfsgb2/mcsprd/i
... B includes found in /mcsapl/i
    INC UTIL_COMMON.SR
    INC VALID.IO
    INC UTIL_MEMMEM.SR
    INC UTIL_SYSTEM.SR
    INC UTIL_TEST.SR
    INC UTIL_DATA.SR
    INC UTIL_EMAIL.SR
    INC UTIL_VALID.SR
    INC FILTER_NON_HEALTH.SR

./* ==============
. * End of program
. * ============== */
