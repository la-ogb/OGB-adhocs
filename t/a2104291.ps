++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ NAME:
+   a2104291.ps
+
+ DESCRIPTION:
+   Update term letter dates from CSV report from Tony to force members
+   to be re-sent on the QB file to DBI
+
+ CREATED BY:
+   apjwh - 2021-04-29
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.# =================================================================== #
.# Variable Includes
.# =================================================================== #
    INC VALID.RL
    INC UTIL_COMMON.CB
    INC MEM.RL
    INC MEME.RL

.# =================================================================== #
.# Scheduler Parameters
.# =================================================================== #

PARAM_LIST          LIST WITH NAMES
PARAM_TEST          CHAR    4
                    LISTEND

.# =================================================================== #
.# Equates for code clarity
.# =================================================================== #

V_FLAG              EQU     1   ...0 or 1
V_DATE              EQU     8   ...YYYYMMDD
MSG_HEIGHT          EQU     24
REFRESH_RATE        EQU     1000

.# =================================================================== #
.# Configuration
.# =================================================================== #

PROG_NAME           INIT    "A21429"
EMAIL_GROUP         INIT    "$ITAPPS"

.# =================================================================== #
.# Debugging Configuration
.# =================================================================== #

ENABLE_TEST         NUM     V_FLAG
TEST_CONFIG         LIST
T_SKIP_UPDATE       NUM     "1"
T_EMAIL             INIT    "$CURRENT_USER_EMAIL"
                    LISTEND

.# =================================================================== #
.# File Declarations
.# =================================================================== #

INPUT_FD            FILE    VAR=200,TEXT
INPUT_FILE          INIT    "/w/tmp/update_tlet.csv"

LOG_FD              FILE    VAR=200,TEXT
LOG_FILE            INIT    "/w/a2104291.csv"

.# =================================================================== #
.# File lists
.# =================================================================== #

INPUT_REC           CHAR    200
INPUT_LIST          VARLIST INPUT_REC

LOG_REC             CHAR    200
LOG_LIST            VARLIST LOG_REC

LOG_HDR             VARLIST "LOG_TYPE",COMMA:
                            "INPUT_ID",COMMA:
                            "INPUT_TRUN",COMMA:
                            "LOG_DETAIL",COMMA:
                            "MEME_ID1",COMMA:
                            "MEME_ID2"

.# =================================================================== #
.# Program Variables
.# =================================================================== #

CURRDATE            CHAR    V_DATE
START_DATETIME      CHAR    24
END_DATETIME        CHAR    24

WRK_LIST            LIST
WRK_ID              CHAR    8
WRK_TRUN            CHAR    V_DATE
                    LISTEND

MEME_WITH_TRUN      CHAR    X_MEME_SIZE
LATEST_HEALTH_MEME  CHAR    X_MEME_SIZE

NEW_TRUN            CHAR    V_DATE

.# =================================================================== #
.# Begin Program
.# =================================================================== #
.Manual and Autosys
    CALL RUN_NOW
    CHAIN C_NEXT    ...go to next program (usually the Menu)

.Impact Scheduler Hook
    INC SCHED_NP.SR     ...for jobs that don't use the print system

.#######################################################################
RUN_NOW ROUTINE
+ Configure runtime settings

.Save stack size at program start
    RETCOUNT ORIG_RETURN

.Set applicable traps
    TRAPSAVE TRAP_DATA
    TRAPCLR ALL
    TRAP QUIT NORESET IF F9

.Get run date
    CLOCK TIMESTAMP INTO CURRDATE

    MOVE "A2104291" TO C_PROG        ...Program name
    MOVE "UPDATE TLET FOR QB" TO C_OPER  ...Program description
    MOVE "MENU" TO C_NEXT
    MOVE "RUN_NOW" TO C_LABEL
    MOVE BLANKS TO C_FILE
    MOVE BLANKS TO C_KEYS

.Check if the program was called from the command line
    IF (C_CMDPAR)
        CALL CMD_START USING C_PROG
    ELSE
        CALL X_BLANK_SCREEN
    ENDIF

.Configure test options based on file mode. Default is Production
    CALL UTIL_SET_TESTMODE USING PARAM_TEST:  ...scheduler param
                                 ENABLE_TEST:  ...test toggle
                                 TEST_CONFIG  ...test settings list

.Set up run mode or build SCH record
    CALL SCHED_PICK

    SWITCH RUN_MODE
        CASE "N" | "B"
            CALL MAIN_PROCESS
        DEFAULT
    ENDSWITCH

    CALL NORMAL_EOJ

    RETURN
    ENDROUTINE


.#######################################################################
MAIN_PROCESS LROUTINE
+ Core logic
    debug
    CALL INITIALIZE
    CALL PROCESS_INPUT
.Read file
.   for each
.       get the most recent health plan
.       if it is termed on or after rundate, update TRUN with tomorrow
.   email log
.   archive file
    CALL CLEAN_UP

    RETURN
    ENDROUTINE


.#######################################################################
INITIALIZE LROUTINE
+ Setup runtime variables
    CLOCK TIMESTAMP TO CURRDATE
    CLOCK CALENDAR TO START_DATETIME

.Get the files and EDI locations from valid 101
    CALL UTIL_GET_SYS_DIRS_COMMON

    CALL UTIL_INIT_COUNTERS USING "Ids Proc'd":
                                  "Updates":
                                  "Errors":
                                  "":
                                  "":
                                  ""

    CALL SET_RUN_CONFIG

    CALL IMPORT_FILE

    RETURN
    ENDROUTINE


.#######################################################################
SET_RUN_CONFIG LROUTINE
+ Configure any runtime settings here

    CALL DATE_CALC USING CURRDATE,"ADD","DAYS",1,NEW_TRUN

    RETURN
    ENDROUTINE


.#######################################################################
IMPORT_FILE LROUTINE
    CALL UTIL_FTP_GET_FILE USING "${OGBWRK}/tmp":
                                 "/i/groups/it/apps/staging":
                                 "update_tlet.csv":
                                 "ascii"

    CALL UTIL_EXISTS USING INPUT_FILE,"FILE"
    IF NOT EQUAL
        debug
        CALL UTIL_ERRORMSG USING ("Input File not found: "+INPUT_FILE),"IMPORT_FILE"
    ENDIF
    RETURN
    ENDROUTINE


.#######################################################################
PROCESS_INPUT LROUTINE

    CALL UTIL_XMESSAGE USING "Processing file...",MSG_HEIGHT

    CALL OPEN_OGBFILE USING INPUT_FD,INPUT_FILE
    CALL PREP_OGBFILE USING LOG_FD,LOG_FILE
    CALL WRITE_OGBREC_SEQ USING LOG_FD,LOG_FILE,LOG_HDR

    LOOP
        CLEAR WRK_LIST,MEM_LIST,MEME_LIST

        CALL READ_OGBFILE_SEQ USING INPUT_FD,INPUT_FILE,INPUT_LIST
        WHILE (RESULT = 1)

        MATCH "mem_id1" TO INPUT_REC
        CONTINUE IF EQUAL

        debug
        CALL DELIMIT_STRING USING INPUT_REC,0,WRK_ID,COMMA
        CALL DELIMIT_STRING USING INPUT_REC,1,WRK_TRUN,COMMA
        RESET INPUT_REC

        IF (CHOP WRK_ID = "" | CHOP WRK_TRUN = "")
            debug
            CALL WRITE_LOG USING "ERROR","Invalid input record"
            CONTINUE
        ENDIF

        CALL UTIL_XCOUNTER USING X_CNT1,REFRESH_RATE

        CALL UTIL_MEM_FIND_REAL USING WRK_ID
        IF (NOT EQUAL)
            CALL WRITE_LOG USING "ERROR","Unable to find valid MEM"
            CONTINUE
        ENDIF

        CALL PROCESS_MEMBER
    REPEAT

    CALL CLOSE_OGBFILE USING INPUT_FD,INPUT_FILE
    CALL CLOSE_OGBFILE USING LOG_FD,LOG_FILE

    MESSAGEERASE

    RETURN
    ENDROUTINE


.#######################################################################
PROCESS_MEMBER LROUTINE
+ Find the MEME record with the input TRUN and update if there are no
+ future plans
HOLD_TRM        CHAR    V_DATE

    CLEAR LATEST_HEALTH_MEME,MEME_WITH_TRUN,HOLD_TRM
    CLEAR MEME_LIST
    LOOP
        IF (CHOP MEME_ID1 = "")
            CALL UTIL_MEME_FIND USING MEM_ID1,""
        ELSE
            CALL UTIL_MEME_NEXT
        ENDIF
        WHILE EQUAL

        IF (CHOP MEME_TRM = "")
            PACK MEME_TRM WITH LAST_DATE
        ENDIF

        CONTINUE IF (MEME_TRM < MEME_EFF)
        CONTINUE IF ((CHOP MEME_ID2 = "95" | CHOP MEME_ID2 = "90") & CHOP MEME_MODE > "")
        CMATCH "5" TO MEME_LEV1
        CONTINUE IF EQUAL

        CALL IS_HEALTH_CLIP_MEME
        CONTINUE IF OVER

        IF (CHOP HOLD_TRM = "" | CHOP MEME_TRM > HOLD_TRM)
            PACK HOLD_TRM WITH MEME_TRM
            PACK LATEST_HEALTH_MEME WITH MEME_LIST
        ENDIF

        IF (CHOP MEME_TRUN = CHOP WRK_TRUN)
            PACK MEME_WITH_TRUN WITH MEME_LIST
        ENDIF

        IF (CHOP MEME_TRM >= CURRDATE)
            debug
            CALL WRITE_LOG USING "ERROR","Ongoing health coverage found"
            RETURN
        ENDIF
    REPEAT

    IF (LATEST_HEALTH_MEME != MEME_WITH_TRUN)
        debug
        CALL WRITE_LOG USING "NOTE","Latest health plan does not match the provide TRUN value"
    ENDIF

    UNPACK LATEST_HEALTH_MEME INTO MEME_LIST

    CALL UPDATE_MEME

    RETURN
    ENDROUTINE


.#######################################################################
UPDATE_MEME LROUTINE
ID1     CHAR    8
ID2     CHAR    4
...
    PACK ID1 WITH MEME_ID1
    PACK ID2 WITH MEME_ID2
    CALL UTIL_MEME_FIND USING ID1,ID2
    IF NOT EQUAL
        debug
        CALL UTIL_ERRORMSG USING "MEME read error","UPDATE_MEME"
    ENDIF

    PACK MEME_TRUN WITH NEW_TRUN,BLANKS
    PACK MEME_CHGBY WITH PROG_NAME,BLANKS
    PACK MEME_CHGDT WITH CURRDATE,BLANKS

    IF NOT (T_SKIP_UPDATE)
        debug
        CALL FILE_WRITE
    ENDIF

    CALL WRITE_LOG USING "UPDATE","Term letter date updated"

    RETURN
    ENDROUTINE


.#######################################################################
WRITE_LOG LROUTINE TYPE@,MSG@
TYPE@       CHAR    @
MSG@        CHAR    @
...
    SWITCH TYPE@
        CASE "UPDATE"
            CALL UTIL_XCOUNTER USING X_CNT2,REFRESH_RATE
        CASE "ERROR"
            CALL UTIL_XCOUNTER USING X_CNT3,REFRESH_RATE
            CLEAR MEME_LIST
        DEFAULT
    ENDSWITCH

    PACK LOG_REC WITH TYPE@,COMMA:
                      (CHOP WRK_ID),COMMA:
                      (CHOP WRK_TRUN),COMMA:
                      MSG@,COMMA:
                      (CHOP MEME_ID1),COMMA:
                      (CHOP MEME_ID2)

    CALL WRITE_OGBREC_SEQ USING LOG_FD,LOG_FILE,LOG_LIST

    RETURN
    ENDROUTINE



.#######################################################################
CLEAN_UP LROUTINE
+ Cleanup work files and handle output files
    CLOCK CALENDAR INTO END_DATETIME

    CALL UTIL_PENDING_BACKUP USING "/w/tmp",INPUT_FILE,""
    CALL UTIL_DELETE_FILE USING INPUT_FILE

    CALL EMAIL_LOG USING LOG_FILE

    RETURN
    ENDROUTINE


.#######################################################################
EMAIL_LOG LROUTINE LOG@
+ Email the log
LOG@         CHAR    @
SUBJECT     CHAR    100
BODY        CHAR    5000
RECIPIENTS  CHAR    100
...
    CALL UTIL_SET_SUBJECT USING (C_PROG+" Complete - QB Term Letter Date Update"),ENABLE_TEST,SUBJECT
    CALL UTIL_SET_RECIPIENTS USING RECIPIENTS,EMAIL_GROUP,T_EMAIL

    PACK SCRATCH WITH "Updating the Term Letter Date (MEME_TRUN) to ":
        NEW_TRUN," to force being resent on the QB file to DBI."
    CALL UTIL_PACK_BODY_AND_COUNTERS USING BODY,SCRATCH

    CALL UTIL_EMAIL_NEOJ USING C_PROG:
                               RECIPIENTS:
                               SUBJECT:
                               BODY:
                               START_DATETIME:
                               END_DATETIME:
                               LOG@
    RETURN
    ENDROUTINE

.# =================================================================== #
.# Subroutines Includes
.# =================================================================== #
    INC VALID.IO
    INC UTIL_COMMON.SR
    INC UTIL_VALID.SR
    INC UTIL_TEST.SR
    INC UTIL_SYSTEM.SR
    INC UTIL_DATA.SR
    INC UTIL_EMAIL.SR
    INC UTIL_MEMBERS.SR
    INC UTIL_BILLING.SR
    INC UTIL_FTP.SR
    INC FILTER_NON_HEALTH.SR

.# =================================================================== #
.# End of Program
.# =================================================================== #
