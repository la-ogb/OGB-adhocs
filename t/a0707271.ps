.     *********************************************************************
.     *             STATE EMPLOYEES GROUP BENEFITS PROGRAM                *
.     *********************************************************************
.     *                                                                   *
.     * PROGRAM NAME: A0707271                                            *
.     *                                                                   *
.     * DESCRIPTION: STATE RETIREMENT UPDATE                           *
.     *                                                                   *
.     * PROGRAM NOTES AND REVISIONS:                                      *
.     *                                                                   *
.     * APSJM 12/03/2004 A0412031 DEV - INITIAL VERSION.                  *
.     *********************************************************************
. ----------------------------
. Required Program Includes
. ----------------------------

              INC       COMMON.CB            ...Common work area
              INC       X_COMMON.CB          ...OGB Common Work Area
              INC       VALID.RL             ...Valid codes
              INC       X_OGBFILE.CB         ...OGB Custom File Handler
              
. ----------------------------
. Program Specific Includes
. ----------------------------
              INC       CLI.RL           ...Client Demographics 
              INC       MEM.RL           ...Member Demographics 
              INC       D_MEMMEM.CB      ...Eligibility load
              INC       MEME.RL          ...Member Enrolllment
              INC       STA_UPD.RL           ...Retiree Input File
. ----------------------------
. File Declarations
. ----------------------------
.
START_FD    FILE    VAR=76,TEXT   
START_NAME  INIT    "/w/retsal.txt"
.
U_START_FD    FILE     VAR=3100,TEXT
U_START_NAME  INIT     "u_stasal.txt"
.
.
. ----------------------------
. ----------------------------
. ----------------------------
. Program Specific Variables & Working Storage
. ------------------------
ACTIVE_SP       DIM  1
CLI_RESULT      FORM 1
NEW_DATE        DIM  8
WARN_SW         DIM  1
W_DS            DIM  8
WRK_RET_DATE    DIM  8
CMP_DATE        DIM  8
W_SAL           DIM  8
FORM_72         FORM 7.2
CMP_US04        FORM 7.2
DIM_5           DIM  5
DIM_2           DIM  2
W_MM_T        DIM  2
W_DD_T        DIM  2
W_CCYY_T      DIM  4
FIRST_READ    DIM  1
CLEAR_LIST    LIST
W_ID1         DIM  8
W_ENR_ID1     DIM  8
W_SP_ID1      DIM  8
MEME_SAV3     DIM  600
              LISTEND
FORM_MM       FORM 2
FORM_CCYY     FORM 4
WRK_EFF_DATE  DIM  8
DATE_RESULT   DIM  2
ERR_SW        DIM  1
DIM_4         DIM  4
DIM_1         DIM  1
DIM_3         DIM  3
DIM_10        DIM  10
MEDA_SW       DIM  1
MEDB_SW       DIM  1
MEDA_SW_SP    DIM  1
MEDB_SW_SP    DIM  1
WRK_DATE_TRM  DIM  8
W_CCYY        DIM  4
CNT1_4        DIM  4
CNT1_3        DIM  3
CNT3_4        DIM  4
CNT3_3        DIM  3
CNT_4         DIM  4
CNT_3         DIM  3
FIRST_TIME    DIM       1
WORK_COUNT    DIM       8
FRONT         DIM       5
BACK          DIM       3
TIMESTAMP     DIM       14
CURRDATE      DIM       8
TRAP_DATA     DIM       500
CAL_CLOCK     DIM       21
ORIG_RETURN   FORM      5
CURR_RETURN   FORM      5
TODAY         DIM       8
PARAM_LIST    LIST
PARAM_XXX     DIM      10
PARAM_YYY     DIM       5
PARAM_DATE    DIM       8
              LISTEND

. ----------------------------
. Begin Program
. ----------------------------

. ----------------------------
. Start here if selected from menu   
. ----------------------------


         CALL      RUN_NOW

         CHAIN     C_NEXT

. ----------------------------
. Start here if called by the Scheduler    
. ----------------------------

         INC       SCHED_NP.SR              Scheduler routines (with printer)

RUN_NOW
. ...Check return stack
    RETCOUNT  ORIG_RETURN
. ----------------------------
. Fill top of screen
. ----------------------------

. ...Screen Display
         DISPLAY   *ES
         MOVE      "MENU"           TO  C_NEXT
         MOVE      "RETIREE SAL"        TO  C_OPER
         MOVE      "A0707271"        TO  C_PROG
         MOVE      BLANKS              TO  C_LABEL
         MOVE      BLANKS              TO  C_FILE
         MOVE      BLANKS              TO  C_KEYS
         CLOCK     CALENDAR            INTO  CAL_CLOCK
         
         CALL X_BLANK_SCREEN

. ----------------------------
. Set Applicable Traps
. ----------------------------
         
. ...Set Applicable Traps
         TRAPSAVE  TRAP_DATA
         TRAPCLR   ALL
         TRAP      QUIT   NORESET  IF F9
	
. ----------------------------
. Get scheduler information
. ----------------------------

         CALL     SCHED_PICK

         IF (RUN_MODE = "B" OR RUN_MODE = "N")
            CALL      MAIN_PROCESS
         ENDIF
         RETURN

. ----------------------------
. Main Process
. ----------------------------

MAIN_PROCESS
   DEBUG
   CALL INITIALIZE
   CALL OPEN_FILES
   CALL PROCESS_WRK
....Close Files
   CALL      CLOSE_FILES 
   CALL      X_DISPLAY_COUNTS
   TRAPREST  TRAP_DATA
   MOVE      SCH_RTSUCC  TO  SCH@RTCODE
   RETURN                                                   
. ----------------------------
. End of Main Process
. ----------------------------
PROCESS_WRK
    MOVE OGB_SEQ1 TO OGB_SEQ
  LOOP
    CALL READ_OGBFILE USING START_FD,START_NAME,RET_LIST
    IF (RESULT <> 1)
        BREAK
    ENDIF
    ADD 1 TO X_CNT1
    UNPACK X_CNT1 INTO CNT1_4,CNT1_3
    IF (CNT1_3 = "000")
        CALL X_DISPLAY_COUNTS
    ENDIF
.------------------------         
...Get info from MEM-FILE
.------------------------

    CLEAR     MEM_AIM
    PACK      MEM_AIM1 WITH "01X",RET_ESSN,BLANKS
    PACK      MEM_AIM3 WITH "03X","01",BLANKS
    CALL      FILE_READ USING MEM_FD:    ...FILE DECLARATION LIST
                            MEM_FN:          ...FILE NAME LIST
                            MEM_FC:          ...(I)NDEX OR (A)IMDEX
                            MEM_FV:          ...FILE KEY VARLISTS
                            MEM_AIM:          ...FILE KEY SIZES
                            MEM_LIST:        ...FILE RECORD (FIELD LIST)
                            MEM_REC:         ...FILE RECORD (PACKED)
                            MEM_OLD:         ...FILE SAVED WHEN READ
                            MEM_QTY:         ...NUMBER OF FILES
                            2                 ...FILE NUMBER FOR THIS READ
    IF (RESULT = 1)
    ELSE
       CALL GET_ACT_SP
       IF (ACTIVE_SP = "N")
          CONTINUE
       ENDIF
    ENDIF
    IF (SQUEEZE RET_SAL <> "")
        UNPACK RET_SAL INTO DIM_5,DIM_2
        PACK W_SAL WITH DIM_5,".",DIM_2
        MOVE W_SAL TO FORM_72
        MOVE MEM_US04 TO CMP_US04
        IF (FORM_72 <> CMP_US04)
             MOVE FORM_72 TO MEM_US04
        ELSE
             CONTINUE
        ENDIF
    ENDIF
    PACKLEN MEM_REC WITH MEM_LIST
    PACKLEN INM_REC WITH MEM_REC
    UNPACK INM_REC INTO INM_LIST
    CLEAR INM_CHGBY
    MOVE OGB_SEQ1 TO OGB_SEQ
    CALL WRITE_OGBREC USING U_START_FD,U_START_NAME,INM_LIST
    CLEAR INM_LIST
 REPEAT
 RETURN

GET_ACT_SP
 MOVE "N" TO ACTIVE_SP
 CLEAR     MEM_AIM
 PACK      MEM_AIM2 WITH "02X",RET_ESSN,BLANKS
 PACK      MEM_AIM3 WITH "03X","02",BLANKS
 CALL      FILE_READ USING MEM_FD:    ...FILE DECLARATION LIST
                            MEM_FN:          ...FILE NAME LIST
                            MEM_FC:          ...(I)NDEX OR (A)IMDEX
                            MEM_FV:          ...FILE KEY VARLISTS
                            MEM_AIM:          ...FILE KEY SIZES
                            MEM_LIST:        ...FILE RECORD (FIELD LIST)
                            MEM_REC:         ...FILE RECORD (PACKED)
                            MEM_OLD:         ...FILE SAVED WHEN READ
                            MEM_QTY:         ...NUMBER OF FILES
                            2                 ...FILE NUMBER FOR THIS READ
    IF (RESULT <> 1)
      GOTO GET_ACT_SP_RT 
    ENDIF
    PACK MEME_FK11 WITH MEM_ID1,BLANKS
    CALL  FILE_READ USING MEME_FD:  ...FILE DECLARATION LIST
        	           MEME_FN:  ...FILE NAME LIST  
		           MEME_FC:  ...TYPE OF INDEX   
.	  		             ...(I)NDEX OR (A)IMDEX
		           MEME_FV:  ...FILE KEY VARLISTS
		           MEME_FK:  ...FILE KEY SIZES  
		           MEME_LIST:...FILE RECORD (FIELD LIST)
		           MEME_REC: ...FILE RECORD (PACKED)
		           MEME_OLD: ...FILE SAVED WHEN READ
		           MEME_QTY: ...NUMBER OF FILES 
			   1	     ...FILE NUMBER FOR THIS READ
         LOOP
             CALL  FILE_NEXT USING MEME_FD:  ...FILE DECLARATION LIST
  	          	           MEME_FN:  ...FILE NAME LIST  
		                   MEME_FC:  ...TYPE OF INDEX   
.	  		                     ...(I)NDEX OR (A)IMDEX
		                   MEME_FV:  ...FILE KEY VARLISTS
		                   MEME_FK:  ...FILE KEY SIZES  
		                   MEME_LIST:...FILE RECORD (FIELD LIST)
		                   MEME_REC: ...FILE RECORD (PACKED)
		                   MEME_OLD: ...FILE SAVED WHEN READ
		                   MEME_QTY: ...NUMBER OF FILES 
			           1	     ...FILE NUMBER FOR THIS READ
              IF ((MEM_ID1 <> MEME_ID1) OR (RESULT <> 1))
                BREAK       
              ENDIF
              IF ((SQUEEZE MEME_TRM <> "") AND (MEME_TRM < MEME_EFF))
                 CONTINUE
              ENDIF
              IF ((SQUEEZE MEME_TRM = "") OR:
                  (SQUEEZE MEME_TRM <> "") AND (MEME_TRM > RET_DS))
                    MOVE "Y" TO ACTIVE_SP
              ENDIF
         REPEAT

GET_ACT_SP_RT
 RETURN
. ----------------------------
. Operator pressed F9
. ----------------------------

QUIT
         IF (C_RMODE = "I")
            error     horz="23",vert="19":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" Process Aborted by Operator ":
                      text="-----------------------------"
            messageerase
         ENDIF

         CLEAR     C_NOHIST

         TRAPREST  TRAP_DATA

         IF (RUN_MODE = "B")
            LOOP
               RETCOUNT  CURR_RETURN
               WHILE     (CURR_RETURN > ORIG_RETURN)
               NORETURN
            REPEAT
            MOVE      SCH_RTABRT  TO  SCH@RTCODE
            RETURN
         ENDIF
         CHAIN     "MENU"

INITIALIZE
         DISPLAY *P1:9,*ES
         CALL X_BLANK_SCREEN
         CLOCK     TIMESTAMP   INTO  TIMESTAMP
         CLOCK     TIMESTAMP   INTO  CURRDATE
         CLOCK     TIMESTAMP     TO  TODAY
. ...Display Counters
	 MOVE      "Input Recs Read:    " TO X_CNTDESC1
	 MOVE      "Recs Written  :    " TO X_CNTDESC2
	 CALL      X_DISPLAY_COUNTS
         RETURN
.
OPEN_FILES
         CALL      OPEN_OGBFILE USING START_FD,START_NAME
         CALL      PREP_OGBFILE USING U_START_FD,U_START_NAME
         RETURN

CLOSE_FILES
         CALL      CLOSE_OGBFILE USING START_FD,START_NAME
         CALL      CLOSE_OGBFILE USING U_START_FD,U_START_NAME
         RETURN

. ----------------------------
. Program Specific Includes
. ----------------------------

    INC       UTIL.SR      
    INC       VALID.IO
    INC       X_STANDARD.SR
    INC       FILE.IO
    INC       X_OGBFILE.IO

. +++++++++++++++++++++++++++++++++++++
. /End of A0707271.PS
. +++++++++++++++++++++++++++++++++++++
