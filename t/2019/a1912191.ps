++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ NAME:
+   A1912191.PS
+
+ DESCRIPTION:
+   Identify and un-term all NOCOV-WAIVE-WAIV CLIP records
+
+ CREATED BY:
+   apjwh - 2019-12-19
+
+ LAST CREATED BY:
+   apjwh - 2019-12-19
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.# =================================================================== #
.# Variables
.# =================================================================== #

.# ---------------------------------------------------------------------
.# Variables
.# ---------------------------------------------------------------------
    INC VALID.RL
    INC UTIL_COMMON.CB
    INC CLI.RL
    INC CLIP.RL

.# ---------------------------------------------------------------------
.# Scheduler Parameters
.# ---------------------------------------------------------------------
PARAM_LIST          LIST WITH NAMES
PARAM_TEST          CHAR    4
                    LISTEND

.# ---------------------------------------------------------------------
.# Equates for code clarity
.# ---------------------------------------------------------------------
V_FLAG              EQU     1   ...0 or 1
V_DATE              EQU     8   ...YYYYMMDD
MSG_HEIGHT          EQU     24
REFRESH_RATE        EQU     1

.# ---------------------------------------------------------------------
.# Debugging Configuration
.# ---------------------------------------------------------------------
ENABLE_TEST             NUM     V_FLAG
TEST_CONFIG             LIST
TEST_KEEP_WORK          NUM     "1"
TEST_SKIP_WORK_BUILD    NUM     "1"
TEST_EMAIL_GROUP        INIT    "jakob.hendrix@la.gov"
TEST_TERM_MAX           NUM     "100"
                        LISTEND

.# ---------------------------------------------------------------------
.# File Declarations
.# ---------------------------------------------------------------------
WORK_FD             FILE    VAR=X_CLIP_SIZE,TEXT
WORK_FILE           INIT    "/w/a1912191.wrk.txt"
TEMP_FILE           INIT    "/w/a1912191.tmp.txt"
LOG_FILE            INIT    "/w/a1912191.log.csv"

.# ---------------------------------------------------------------------
.# File List
.# ---------------------------------------------------------------------
WORK_LIST           LIST
WORK_ID             CHAR    8
                    LISTEND

.# ---------------------------------------------------------------------
.# Program Variables
.# ---------------------------------------------------------------------
SYS_MOD             INIT    "OPNCOV"
EMAIL_GROUP         INIT    "${ITAPPS},":
                            "Melissa.mayers@la.gov"

CURRDATE            CHAR    8
START_DATETIME      CHAR    24
END_DATETIME        CHAR    24

.# ---------------------------------------------------------------------
.# External Routines
.# ---------------------------------------------------------------------
RUN_CLI_BOOL     EXTERNAL

.# =================================================================== #
.# Begin Program
.# =================================================================== #
.Manual and Autosys
    CALL RUN_NOW
    CHAIN C_NEXT    ...go to next program (usually the Menu)

.Impact Scheduler Hook
    INC SCHED_NP.SR     ...for jobs that don't use the print system


.#######################################################################
RUN_NOW ROUTINE
+ Set program specific variables and establish the next chain link if
+ applicable. Then run the program's main logic.

.Save stack size at program start
    RETCOUNT ORIG_RETURN

.Set applicable traps
    TRAPSAVE TRAP_DATA
    TRAPCLR ALL
    TRAP QUIT NORESET IF F9

.Get run date
    CLOCK TIMESTAMP INTO CURRDATE
    MOVE "a1912191" TO C_PROG    ...Program name
    MOVE "Run OPNCOV" TO C_OPER  ...Program description
    MOVE "MENU" TO C_NEXT
    MOVE "RUN_NOW" TO C_LABEL
    MOVE BLANKS TO C_FILE
    MOVE BLANKS TO C_KEYS

.Check if the program was called from the command line
    IF (C_CMDPAR)
        CALL CMD_START USING C_PROG
    ELSE
        CALL X_BLANK_SCREEN
    ENDIF

.Configure test options based on file mode. Default is Production
    CALL UTIL_SET_TESTMODE USING PARAM_TEST:  ...scheduler param
                                 ENABLE_TEST:  ...test toggle
                                 TEST_CONFIG  ...test settings list

.Set up run mode or build SCH record
    CALL SCHED_PICK

    SWITCH RUN_MODE
        CASE "N" | "B"
            CALL MAIN_PROCESS
        DEFAULT
    ENDSWITCH

    CALL NORMAL_EOJ
    RETURN
    ENDROUTINE


.#######################################################################
MAIN_PROCESS LROUTINE
+ Core process logic
    debug
    CALL INITIALIZE
    CALL BUILD_CLIP_LIST
    CALL PROCESS_WORK_FILE
    CALL CLEAN_UP

    RETURN
    ENDROUTINE


.#######################################################################
INITIALIZE LROUTINE
+ Setup runtime variables
    CLOCK TIMESTAMP TO CURRDATE
    CLOCK CALENDAR TO START_DATETIME

    MOVE "Work CLIPS Read       " TO X_CNTDESC1
    MOVE "Clients Processed     " TO X_CNTDESC2
    MOVE "CLIPs Considered      " TO X_CNTDESC3
    MOVE "CLIPs Updated         " TO X_CNTDESC4
    MOVE "                      " TO X_CNTDESC5
    MOVE "                      " TO X_CNTDESC6

    CALL X_ZERO_COUNTS
    IF (NOT C_CMDPAR)
        CALL X_DISPLAY_COUNTS
    ENDIF

    CALL SAFE_ERASE_OGBFILE USING LOG_FILE
    PACK SCRATCH WITH "echo #"cli_id1,clip_id2,net,prd,plan,eff,trm#" > ",LOG_FILE
    ROLLOUT SCRATCH

    RETURN
    ENDROUTINE


.#######################################################################
BUILD_CLIP_LIST LROUTINE
+ Build a list of CLIPs to review
    CALL UTIL_XMESSAGE USING "Building CLIP work list",MSG_HEIGHT

    IF (TEST_SKIP_WORK_BUILD)
        CALL UTIL_EXISTS USING WORK_FILE,"FILE"
        RETURN IF (EQUAL)
        CLEAR TEST_SKIP_WORK_BUILD
    ENDIF

.Identify the CLIP records to process
    PACK CLIP_NET WITH "NOCOV",BLANKS
    PACK CLIP_PRD WITH "WAIVE",BLANKS
    PACK CLIP_PLAN WITH "WAIV",BLANKS
    FILL " " IN CLIP_TRM

    PACK SCRATCH WITH CLIP_FNS," ",WORK_FILE," -t ":
                      " -p41-48ne#"",CLIP_TRM,"#"":
                      " -p13-17eq#"",CLIP_NET,"#"":
                      " -p18-22eq#"",CLIP_PRD,"#"":
                      " -p27-30eq#"",CLIP_PLAN,"#""
    REFORMAT SCRATCH
    IF (OVER)
        debug
        CALL UTIL_ERRORMSG USING "Reformat failed (NOCOV CLIPs)","BUILD_CLIP_LIST"
    ENDIF

.Build a unique list of CLI Ids
    PACK SCRATCH WITH WORK_FILE," ",WORK_FILE," 1-12 -t"
    SORT SCRATCH
    IF (OVER)
        debug
        CALL UTIL_ERRORMSG USING "Sort failed","BUILD_CLIP_LIST"
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
PROCESS_WORK_FILE LROUTINE
+ Run the bool mod TRMTDO against each CLIP found
CURRENT_CLI     CHAR    8
...
    debug
    MOVE OGB_SEQ1 TO OGB_SEQ
    CALL OPEN_OGBFILE USING WORK_FD,WORK_FILE
    CLEAR CURRENT_CLI

    CALL UTIL_XMESSAGE USING "Processing CLIP work file...",MSG_HEIGHT

    LOOP
        CALL READ_OGBFILE USING WORK_FD,WORK_FILE,CLIP_LIST
        WHILE (RESULT = 1)

        CALL UTIL_XCOUNTER USING X_CNT1,REFRESH_RATE

        CLEAR CLI_LIST,CLI_REC
        PACK CLIP_REC WITH CLIP_LIST

        IF (CHOP CURRENT_CLI = "" | CHOP CLIP_ID1 != CURRENT_CLI)
            PACK CURRENT_CLI WITH CLIP_ID1

            CALL UTIL_XCOUNTER USING X_CNT2,REFRESH_RATE
            CALL UTIL_CLI_FIND USING CLIP_ID1
            CONTINUE IF (NOT EQUAL)

            PACK CLI_REC WITH CLI_LIST,BLANKS
        ENDIF

        CALL RUN_BOOL
    REPEAT
    CALL CLOSE_OGBFILE USING WORK_FD,WORK_FILE

    RETURN
    ENDROUTINE


.#######################################################################
RUN_BOOL LROUTINE
+ Run TRMOLD against the current CLIP
BOOL_RESULT     NUM     2
ID1             CHAR    8
ID2             CHAR    4
...
    debug
    CLEAR BOOL_RESULT

    CALL UTIL_XCOUNTER USING X_CNT3,REFRESH_RATE

    LOADMOD "runbool"
    CALL RUN_CLI_BOOL USING CLI_REC,CLIP_REC,SYS_MOD,BOOL_RESULT
    UNLOAD "runbool"

.Restore current records
    UNPACK CLI_REC INTO CLI_LIST
    UNPACK CLIP_REC INTO CLIP_LIST

.Results
.   1 - success?
.   3 - invalid
.   6 - no WRITE hit
    SWITCH BOOL_RESULT
        CASE 1
            CALL UTIL_XCOUNTER USING X_CNT4,REFRESH_RATE

            PACK ID1 WITH CLIP_ID1
            PACK ID2 WITH CLIP_ID2
            CALL UTIL_FIND_THIS_CLIP USING ID1,ID2
            IF (NOT EQUAL)
                debug
                CALL UTIL_ERRORMSG USING ("Unable to find CLIP: " + ID2),"RUN_BOOL"
            ENDIF
            CALL LOG_TERM
        CASE 2
            CALL UTIL_ERRORMSG USING ("Invalid BOOL Module -" + SYS_MOD),"RUN_BOOL"
        CASE 3
            CALL UTIL_ERRORMSG USING ("Invalid BOOL command in CLIB-" + SYS_MOD),"RUN_BOOL"
        CASE 5
            CALL UTIL_ERRORMSG USING ("Invalid custom program -" + SYS_MOD),"RUN_BOOL"
        CASE 4
.???
        CASE 6
.No write done
        DEFAULT
            debug  ?
    ENDSWITCH

    RETURN
    ENDROUTINE


.#######################################################################
LOG_TERM LROUTINE
+ Log that the current CLIP was termed
    PACK SCRATCH WITH "echo #"":
                        CLI_ID1,",":
                        CLIP_ID2,",":
                        CLIP_NET,",":
                        CLIP_PRD,",":
                        CLIP_PLAN,",":
                        CLIP_EFF,",":
                        CLIP_TRM,"#" >> ",LOG_FILE
    ROLLOUT SCRATCH

    RETURN
    ENDROUTINE


.#######################################################################
CLEAN_UP LROUTINE
+ Cleanup work files and handle output files
    CLOCK CALENDAR INTO END_DATETIME

    CALL UTIL_PENDING_BACKUP USING "/w/",WORK_FILE,""
    CALL UTIL_PENDING_BACKUP USING "/w/",LOG_FILE,""

    IF NOT (TEST_KEEP_WORK)
        CALL SAFE_ERASE_OGBFILE USING WORK_FILE
    ENDIF

    CALL SEND_EMAIL
    RETURN
    ENDROUTINE


.#######################################################################
SEND_EMAIL LROUTINE
+ Send notice with attached log
RECIPIENTS  CHAR    100
SUBJECT     CHAR    100
DESCRIPTION CHAR    1000
...
    PACK SUBJECT WITH "CLIBOOL Process Complete [Module: ",SYS_MOD,"]"
    IF (ENABLE_TEST)
        PACK SUBJECT WITH SUBJECT," [TEST]"
    ENDIF

    CALL ADD_COUNTERS_TO_BODY USING DESCRIPTION

    PACK RECIPIENTS WITH EMAIL_GROUP
    IF (CHOP TEST_EMAIL_GROUP > "")
        PACK RECIPIENTS WITH TEST_EMAIL_GROUP
    ENDIF

    CALL UTIL_EMAIL_NEOJ USING C_PROG:
                               RECIPIENTS:
                               SUBJECT:
                               DESCRIPTION:
                               START_DATETIME:
                               END_DATETIME:
                               LOG_FILE
    RETURN
    ENDROUTINE


.# =================================================================== #
.# Subroutines Includes
.# =================================================================== #
    INC VALID.IO
    INC UTIL_COMMON.SR
    INC UTIL_TEST.SR
    INC UTIL_SYSTEM.SR
    INC UTIL_CLI.SR
    INC UTIL_CLIP.SR
    INC UTIL_EMAIL.SR

.# =================================================================== #
.# End of Program
.# =================================================================== #
