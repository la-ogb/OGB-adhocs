+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+    Program name   :  A1005171      
+    Description    :  DEV - Deletes duplicate meme records
+    APDLM A1005171 05/19/2010 - INITIAL VERSION                                
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

. ----------------------------
. Required Program Includes
. ----------------------------

              INC       COMMON.CB            ...Common work area
              INC       X_COMMON.CB          ...OGB Common Work Area
              INC       VALID.RL             ...Valid codes
              INC       X_OGBFILE.CB         ...OGB Custom File Handler
              INC       PRT.RL               ...Printer Definition File
              
. ----------------------------
. Program Specific Includes
. ----------------------------
              INC       MEM.RL           ...Member Demographics
              INC       MEME.RL          ...Member Enrollment  
              INC       D_MEMMEM.CB      ...IMPACT UPDATE

. ----------------------------
. File Declarations
. ----------------------------
.Input Files
INP_FD         FILE       VAR=8,TEXT
INP_NAME       INIT       "/w/dup_meme.txt"
INP_LIST       LIST
INP_ID1        DIM        8
                    LISTEND
 
.Error File 
ERR_FILE       FILE       FIX=12,TEXT
ERR_NAME       INIT       "/w/a1005171err.txt"

ERR_LIST       LIST
ERR_ID1        DIM        8
ERR_ID2        DIM        4
               LISTEND
 
.
.Output Files
DEL_FD     FILE     VAR=3100,TEXT
DEL_NAME   INIT     "a1005171.txt"     
.
. ----------------------------
. Program Specific Variables & Working Storage
. ----------------------------
CNT_4         DIM  4
CNT_3         DIM  3
TIMESTAMP     DIM       14
TRAP_DATA     DIM       500
CAL_CLOCK     DIM       21
ORIG_RETURN   FORM      5
CURR_RETURN   FORM      5
TODAY         DIM       8

FISCAL        INIT      "20100701"

VAR_LIST      LIST
FIRST_REC     DIM       1
ID1           DIM       8
ID2           DIM       4
REST          DIM       588
SAV_MEME      DIM       600
SAV_ID1       DIM       8
SAV_ID2       DIM       4
SAV_REST      DIM       588
              LISTEND

PARAM_LIST    LIST
PARAM_XXX     DIM      10
PARAM_YYY     DIM       5
PARAM_DATE    DIM       8
              LISTEND

. ----------------------------
. Begin Program
. ----------------------------

. ----------------------------
. Start here if selected from menu   
. ----------------------------

         CALL      RUN_NOW

         CHAIN     C_NEXT

. ----------------------------
. Start here if called by the Scheduler    
. ----------------------------

         INC       SCHED_NP.SR              Scheduler routines (w/o printer)

RUN_NOW
. ...Check return stack
    RETCOUNT  ORIG_RETURN
. ----------------------------
. Fill top of screen
. ----------------------------

. ...Screen Display
         DISPLAY   *ES
         MOVE      "MENU"              TO  C_NEXT
         MOVE      "DEL DUP MEME " TO  C_OPER
         MOVE      "A1005171"           TO  C_PROG
         MOVE      BLANKS              TO  C_LABEL
         MOVE      BLANKS              TO  C_FILE
         MOVE      BLANKS              TO  C_KEYS
         CLOCK     CALENDAR            INTO  CAL_CLOCK
         
         CALL X_BLANK_SCREEN

. ----------------------------
. Set Applicable Traps
. ----------------------------
         
. ...Set Applicable Traps
         TRAPSAVE  TRAP_DATA
         TRAPCLR   ALL
         TRAP      QUIT   NORESET  IF F9
	
. ----------------------------
. Get scheduler information
. ----------------------------

         CALL     SCHED_PICK

         IF (RUN_MODE = "B" OR RUN_MODE = "N")
            CALL      MAIN_PROCESS
         ENDIF
         RETURN

. ----------------------------
. Main Process
. ----------------------------

MAIN_PROCESS
    DEBUG
    CALL INITIALIZE
    CALL OPEN_FILES
    CALL READ_INPUT
....Close Files
    CALL      CLOSE_FILES 
    CALL      X_DISPLAY_COUNTS
    TRAPREST  TRAP_DATA
    MOVE      SCH_RTSUCC  TO  SCH@RTCODE
    RETURN                                                   

. ----------------------------
. End of Main Process
. ----------------------------

READ_INPUT

    LOOP

        CLEAR VAR_LIST

        MOVE OGB_SEQ1 TO OGB_SEQ
        CALL READ_OGBFILE USING INP_FD,INP_NAME,INP_LIST        
        IF (RESULT <> 1)
            BREAK 
        ENDIF

        ADD 1 TO X_CNT1
        UNPACK X_CNT1 INTO CNT_4,CNT_3
        IF (CNT_3 = "000")
            CALL X_DISPLAY_COUNTS
        ENDIF
    
        PACK MEM_FK11 WITH INP_ID1,BLANKS
        CALL  FILE_READ USING MEM_FD:  ...FILE DECLARATION LIST
                              MEM_FN:  ...FILE NAME LIST
                              MEM_FC:  ...TYPE OF INDEX
.                                      ...(I)NDEX OR (A)IMDEX
                              MEM_FV:  ...FILE KEY VARLISTS
                              MEM_FK:  ...FILE KEY SIZES
                              MEM_LIST:...FILE RECORD (FIELD LIST)
                              MEM_REC: ...FILE RECORD (PACKED)
                              MEM_OLD: ...FILE SAVED WHEN READ
                              MEM_QTY: ...NUMBER OF FILES
                              1        ...FILE NUMBER FOR THIS READ

        IF (RESULT <> 1)
            CONTINUE
        ENDIF

       CALL READ_MEME

    REPEAT
    RETURN

. ----------------------------
. Looping through meme recs to find all eff 7/1/10
. ----------------------------
READ_MEME

    PACKLEN MEME_FK11 WITH INP_ID1,BLANKS
    CALL  FILE_READ USING MEME_FD:  ...FILE DECLARATION LIST
        	           MEME_FN:  ...FILE NAME LIST  
		           MEME_FC:  ...TYPE OF INDEX   
.	  		             ...(I)NDEX OR (A)IMDEX
		           MEME_FV:  ...FILE KEY VARLISTS
		           MEME_FK:  ...FILE KEY SIZES  
		           MEME_LIST:...FILE RECORD (FIELD LIST)
		           MEME_REC: ...FILE RECORD (PACKED)
		           MEME_OLD: ...FILE SAVED WHEN READ
		           MEME_QTY: ...NUMBER OF FILES 
			   1	     ...FILE NUMBER FOR THIS READ

        LOOP
            CALL  FILE_NEXT USING MEME_FD:  ...FILE DECLARATION LIST
                                  MEME_FN:  ...FILE NAME LIST
                                  MEME_FC:  ...TYPE OF INDEX
.                                           ...(I)NDEX OR (A)IMDEX
                                  MEME_FV:  ...FILE KEY VARLISTS
                                  MEME_FK:  ...FILE KEY SIZES
                                  MEME_LIST:...FILE RECORD (FIELD LIST)
                                  MEME_REC: ...FILE RECORD (PACKED)
                                  MEME_OLD: ...FILE SAVED WHEN READ
                                  MEME_QTY: ...NUMBER OF FILES
                                  1         ...FILE NUMBER FOR THIS READ
            IF ((MEME_ID1 <> INP_ID1) OR (RESULT <> 1))
                BREAK
            ENDIF

            IF (SQUEEZE MEME_NET = "LIFE")
                CONTINUE
            ENDIF

            IF ((MEME_EFF <> FISCAL) OR (SQUEEZE MEME_TRM <> ""))
                CONTINUE
            ENDIF

            IF (SQUEEZE ID1 = "")
                UNPACK MEME_REC INTO ID1,ID2,REST
            ENDIF

            IF ((SAV_REST = REST) AND (SAV_ID1 = ID1))
                CALL WRITE_MEMMEM
            ENDIF

            IF ((SAV_REST <> REST) AND (SAV_ID1 = ID1))
                CALL WRITE_ERROR 
            ENDIF

            MOVE MEME_REC TO SAV_MEME
            UNPACK SAV_MEME INTO SAV_ID1,SAV_ID2,SAV_REST

        REPEAT

    RETURN

. ----------------------------
. Writing records to be deleted 
. ----------------------------
WRITE_MEMMEM

        CLEAR INM_REC
        PACKLEN INM_REC WITH MEM_REC,MEME_REC
        UNPACK INM_REC INTO INM_LIST
        MOVE "DELETE" TO INME_NEWBY
        CLEAR INM_CHGBY
        MOVE OGB_SEQ1 TO OGB_SEQ
        CALL WRITE_OGBREC USING DEL_FD,DEL_NAME,INM_LIST
        CLEAR INM_LIST
    RETURN

. ----------------------------
. Writing records where eff date matches but rest of record is different
. ----------------------------
WRITE_ERROR
        
        MOVE MEME_ID1 TO ERR_ID1
        MOVE MEME_ID2 TO ERR_ID2

        MOVE OGB_SEQ1 TO OGB_SEQ
        CALL WRITE_OGBREC USING ERR_FILE,ERR_NAME,ERR_LIST

    RETURN

. ----------------------------
. Operator pressed F9
. ----------------------------

QUIT
         IF (C_RMODE = "I")
            error     horz="23",vert="19":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" Process Aborted by Operator ":
                      text="-----------------------------"
            messageerase
         ENDIF

         CLEAR     C_NOHIST

         TRAPREST  TRAP_DATA

         IF (RUN_MODE = "B")
            LOOP
               RETCOUNT  CURR_RETURN
               WHILE     (CURR_RETURN > ORIG_RETURN)
               NORETURN
            REPEAT
            MOVE      SCH_RTABRT  TO  SCH@RTCODE
            RETURN
         ENDIF
         CHAIN     "MENU"

INITIALIZE
         DISPLAY *P1:9,*ES
         CALL X_BLANK_SCREEN
         CLOCK     TIMESTAMP   INTO  TIMESTAMP

. ...Display Counters
	 MOVE      "Recs Read:     " TO X_CNTDESC1
	 MOVE      "Recs Written:     " TO X_CNTDESC2

	 CALL      X_DISPLAY_COUNTS

         RETURN
.
OPEN_FILES
         CALL      OPEN_OGBFILE USING INP_FD,INP_NAME
         CALL      PREP_OGBFILE USING DEL_FD,DEL_NAME   
         CALL      PREP_OGBFILE USING ERR_FILE,ERR_NAME 
         RETURN

CLOSE_FILES

        CALL       CLOSE_OGBFILE USING INP_FD,INP_NAME
        CALL       CLOSE_OGBFILE USING DEL_FD,DEL_NAME
        CALL       CLOSE_OGBFILE USING ERR_FILE,ERR_NAME

    RETURN
.........................................................................
    INC       PRINT.SR
    INC       UTIL.SR      
    INC       VALID.IO
    INC       X_STANDARD.SR
    INC       FILE.IO

. ----------------------------
. Program Specific Includes
. ----------------------------

              INC       X_OGBFILE.IO

. +++++++++++++++++++++++++++++++++++++
. /End of A1005171.ps
. +++++++++++++++++++++++++++++++++++++
