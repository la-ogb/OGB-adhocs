+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+    Program name   :  A0311031.PS
+    Description    :  Actuarial Request            
+
+    apeks 11/03/2003 a0311031 DEV - Initial Version.
+..............................REVISIONS.......................................
+    apiii mm/dd/ccyy ayymmdd# TYP - Description of change
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

              INC       COMMON.CB            ...Common work area
              INC       PRT.RL
              INC       X_OGBFILE.CB         ...OGB Standard io
              INC       CLM.RL            
              INC       CLMS.RL            

. --------------------------------------------------------------------------
.
POP_REC       LIST      @
POP_KEY       DIM       @
POP_OLD       DIM       @
POP_SW        FORM      @
POP_DECL      IFILE     @
POP_NAME      DIM       @
POP_ID        DIM       @
POP_LINE      DIM       @

ORIG_RETURN   FORM      5
CURR_RETURN   FORM      5

TRAP_DATA     DIM       500
CAL_CLOCK     DIM       21

WORK_COUNT    DIM       8
FRONT         DIM       5
BACK          DIM       3

TIMESTAMP     DIM       14

DIM2          DIM       2
DIM3          DIM       3
DIM4          DIM       4
DIM5          DIM       5

READ_COUNT    FORM      8
KEEP_COUNT    FORM      8
WRITE_COUNT   FORM      8
ERROR_COUNT   FORM      8
SERV_COUNT    FORM      8

TMP1_FILE     FILE      VAR=100,TEXT
TMP1_NAME     INIT      "/w/a0311031.tmp1"

TMP2_FILE     FILE      VAR=100,TEXT
TMP2_NAME     INIT      "/w/a0311031.tmp2"


PAT_FILE      IFILE     VAR=100,KEYLEN=8,TEXT
PAT_NAME      INIT      "/w/a0311031.ix1"
PAT_LIST      LIST
PAT_MEM       DIM       8    
PAT_CLM       DIM       8    
PAT_TYP       DIM       1
PAT_PRV       DIM       8    
              LISTEND

PAT_TEXT      INIT      "/w/a0311031.txt"
PAT_KEY       DIM       8

CLMI_FILE     FILE      VAR=100,TEXT
CLMI_NAME     INIT      "/w/a0311031.inp"
CLMI_LIST     LIST
CLMI_NUM      DIM       8
CLMI_PAT      DIM       8
              LISTEND

CLMO_FILE     FILE      VAR=4000,TEXT
CLMO_NAME     INIT      "/w/a0311031.clm"

CLMSO_FILE    FILE      VAR=2000,TEXT
CLMSO_NAME    INIT      "/w/a0311031.clms"

FROM_DATE     INIT      "20010701"
THRU_DATE     INIT      "20030630"


. -------------------------------------------------------------
.   Scheduler Fields
. -------------------------------------------------------------

PARAM_LIST    LIST
PARAM_IN      DIM       12
PARAM_HCFA    DIM       12
PARAM_UBHD    DIM       12
PARAM_UBSV    DIM       12
              LISTEND

. -------------------------------------------------------------
.   Control Variables
. -------------------------------------------------------------

PRINT@DETAIL  DIM       @

MCS@DECL      FILE      @
MCS@IDECL     IFILE     @
MCS@FILE      DIM       @
MCS@FILE2     DIM       @
MCS@LIST      LIST      @
MCS@OPTS      DIM       @

MCS@DIM1      DIM       @
MCS@DIM2      DIM       @

MCS@FORM1     FORM      @
MCS@FORM2     FORM      @

. -----------------
.   Begin Program
. -----------------

. ------------------------------------
.   Start here if selected from menu
. ------------------------------------
         CALL      RUN_NOW

         CHAIN     C_NEXT

. -----------------------------------------
.   Start here if called by the Scheduler
. -----------------------------------------

         INC       SCHED_WP.SR              Scheduler routines (with printer)

RUN_NOW

         RETCOUNT  ORIG_RETURN

. ----------------------
.   Fill top of screen
. ----------------------

         MOVE      "menu"                TO  C_NEXT
         MOVE      "Claims for Actuary"  TO  C_OPER
         MOVE      "A0311031"            TO  C_PROG

         MOVE      BLANKS             TO  C_LABEL
         MOVE      BLANKS             TO  C_FILE
         MOVE      BLANKS             TO  C_KEYS

         CLOCK     CALENDAR         INTO  CAL_CLOCK

. ----------
.   9-Quit
. ----------

         DISPLAY   *RESETSW,*BGCOLOR=C_MANB,*FGCOLOR=C_MANF,*ES:
                   *BGCOLOR=C_DATB,*COLOR=C_DATF:
                   *P1:2,*RPTCHAR *HLN:80,*+:
                   *P3:2,"<",CAL_CLOCK,">":
                   *P29:2,"<",C_OPER,">":
                   *P54:2,"<",C_PROG,">":
                   *P66:2,"<REPORT>":
                   *P01:1,*BGCOLOR=C_F01B,*COLOR=C_F01F,"        ":
                   *P09:1,*BGCOLOR=C_F02B,*COLOR=C_F02F,"        ":
                   *P17:1,*BGCOLOR=C_F03B,*COLOR=C_F03F,"        ":
                   *P25:1,*BGCOLOR=C_F04B,*COLOR=C_F04F,"        ":
                   *P33:1,*BGCOLOR=C_F05B,*COLOR=C_F05F,"        ":
                   *P41:1,*BGCOLOR=C_F06B,*COLOR=C_F06F,"        ":
                   *P49:1,*BGCOLOR=C_F07B,*COLOR=C_F07F,"        ":
                   *P57:1,*BGCOLOR=C_F08B,*COLOR=C_F08F,"        ":
                   *P65:1,*BGCOLOR=C_F09B,*COLOR=C_F09F," 9-Quit ":
                   *P73:1,*BGCOLOR=C_F10B,*COLOR=C_F10F,"        ":
                   *BGCOLOR=C_DLGB,*COLOR=C_DLGF

. ------------------------
.   Set applicable traps
. ------------------------

         TRAPSAVE  TRAP_DATA

         TRAPCLR   ALL

         TRAP      QUIT   NORESET  IF F9

. -----------------------------
.   Get scheduler information
. -----------------------------

         CALL      SCHED_PICK

         IF (RUN_MODE = "B" OR RUN_MODE = "N")
            CALL      MAIN_PROCESS
         ENDIF

         RETURN

. -----------------------------------
.   Main Process
. -----------------------------------

MAIN_PROCESS

         CLOCK     TIMESTAMP   INTO  TIMESTAMP

         DEBUG
         CALL      PREPARE_FILES 
         CALL      EXTR_CLAIMS

         TRAPREST  TRAP_DATA
         MOVE      SCH_RTSUCC  TO  SCH@RTCODE

         RETURN

. -----------------------------------
.  Extract Claims for Certain Providers
. -----------------------------------
PREPARE_FILES

         IF (C_RMODE = "I")
            messageerase
            message   horz="26",vert="10":
                      bgcol=C_DLGB,fgcol=C_DLGF:
                      lncol=C_DLGL,shade="Y":
                      text=" * Program Action * ":
                      text=" Creating work files "
         ENDIF

         PACK SCRATCH WITH "clm.dbf ",TMP1_NAME," 347-354 1-8 2504-2504 ":
                           "46-53 -p2504=I -p318-325ge",FROM_DATE:
                           " -p318-325le",THRU_DATE," -j -t"

         REFORMAT SCRATCH
         CLEAR SCRATCH

         PACK SCRATCH WITH TMP1_NAME," ",TMP2_NAME:
                           " -p18-25=000070808 or ":
                           "-p18-25=00067452 or -p18-25=00070417 or ":
                           "-p18-25=00064909 or -p18-25=00070431 or ":
                           "-p18-25=00024857 -j -t"

         REFORMAT SCRATCH
         CLEAR SCRATCH
         
         PACK SCRATCH WITH TMP2_NAME," ",PAT_TEXT:
                           " 1-8 -j -t -u"

         SORT SCRATCH  
         CLEAR SCRATCH

         PACK SCRATCH WITH PAT_TEXT," ",PAT_NAME," 1-8"
         INDEX SCRATCH
         CLEAR SCRATCH

         PACK SCRATCH WITH "clm.dbf ",CLMI_NAME," 1-8 347-354 ":
                           "-p318-325ge",FROM_DATE, " -p318-325le":
                           THRU_DATE," -j -t"

         REFORMAT SCRATCH


         CALL OPEN_OGBFILE_IX USING PAT_FILE,PAT_NAME          
         CALL OPEN_OGBFILE USING CLMI_FILE,CLMI_NAME          
         CALL PREP_OGBFILE USING CLMO_FILE,CLMO_NAME          
         CALL PREP_OGBFILE USING CLMSO_FILE,CLMSO_NAME          
         CALL ERASE_OGBFILE USING TMP1_NAME
         CALL ERASE_OGBFILE USING TMP2_NAME
         CALL SETPOP_CLMS

         RETURN

. -----------------------------------
.  Extract claims for patients
. -----------------------------------

EXTR_CLAIMS

         MOVE      0           TO  READ_COUNT
         MOVE      0           TO  WRITE_COUNT
         MOVE      0           TO  SERV_COUNT

         IF (C_RMODE = "I")
            message   horz="26",vert="18":
                      bgcol=C_DLGB,fgcol=C_DLGF:
                      lncol=C_DLGL,shade="Y":
                      text=" -Records Processed- ":
                      text=" Input Records       ":
                      text=" Header Records Out  ":
                      text=" Service Records Out "
         ENDIF
         debug
. Read the Claim file and write to the output file

         LOOP
            MOVE OGB_SEQ1 TO OGB_SEQ
            CALL      READ_OGBFILE USING CLMI_FILE,CLMI_NAME,CLMI_LIST
            IF (RESULT <> 1)
               BREAK          
            ENDIF

            ADD       1 TO READ_COUNT
            IF (C_RMODE = "I")
               MOVE      READ_COUNT TO WORK_COUNT
               UNPACK    WORK_COUNT TO FRONT,BACK
               IF        (BACK = "000")
                  DISPLAY   *P41:20,READ_COUNT
                  DISPLAY   *P41:21,WRITE_COUNT
                  DISPLAY   *P41:22,SERV_COUNT
               ENDIF
            ENDIF

. Read Patient File to include or eliminate.

            CLEAR PAT_KEY
            PACK PAT_KEY WITH CLMI_PAT,BLANKS

            CALL READ_OGBFILE_IX USING PAT_FILE,PAT_NAME,PAT_KEY,PAT_LIST
            CONTINUE IF (RESULT <> 1)

. Get header record for this claim
            PACK      CLM_FK11 WITH CLMI_NUM
            CALL      FILE_READ USING CLM_FD:    ...File declaration list
                      CLM_FN:   ...File name list
                      CLM_FC:   ...(I)ndex or (A)imdex
                      CLM_FV:   ...File key varlists
                      CLM_FK:   ...File key sizes
                      CLM_LIST: ...File record (field list)
                      CLM_REC:  ...File record (packed)
                      CLM_OLD:  ...File saved when read
                      CLM_QTY:  ...Number of files
                      1         ...File number for this read
            CONTINUE IF (RESULT <> 1)
            CONTINUE IF (SQUEEZE CLM_FORM = "B")
            CONTINUE IF (SQUEEZE CLM_60A = "BALFWDMEM")

            MOVE OGB_SEQ1 TO OGB_SEQ
            CALL WRITE_OGBREC USING CLMO_FILE,CLMO_NAME,CLM_LIST
            ADD 1 TO WRITE_COUNT

. Get all service lines for this claim
            PACK      CLMS_BASE WITH CLMI_NUM,BLANKS
            PACK      CLMS_KEY  WITH CLMS_BASE,BLANKS
            CALL      POP_READ
         LOOP
               CALL      POP_NEXT
               WHILE     (RESULT = 1)
               WHILE     (CLMS_ID = CLM_ID1)

               MOVE OGB_SEQ1 TO OGB_SEQ
               CALL WRITE_OGBREC USING CLMSO_FILE,CLMSO_NAME,CLMS_REC 
               ADD 1 TO SERV_COUNT

         REPEAT
         REPEAT

         RETURN

. -----------------------
.   Operator pressed F9
. -----------------------
QUIT
         IF (C_RMODE = "I")
            error     horz="23",vert="19":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" Process Aborted by Operator ":
                      text="-----------------------------"
            messageerase
         ENDIF

         CLEAR     C_NOHIST

         TRAPREST  TRAP_DATA

         IF (RUN_MODE = "B")
            LOOP
               RETCOUNT  CURR_RETURN
               WHILE     (CURR_RETURN > ORIG_RETURN)
               NORETURN
            REPEAT
            MOVE      SCH_RTABRT  TO  SCH@RTCODE
            RETURN
         ENDIF
         CHAIN     C_NEXT

. ---------------------------------
.   Set up POP read for CLMS file
. ---------------------------------
SETPOP_CLMS
         MOVEADR   CLMS_REC   TO POP_REC        ...Set up for POP.IO
         MOVEADR   CLMS_SW    TO POP_SW
         MOVEADR   CLMS_DECL  TO POP_DECL
         MOVEADR   CLMS_NAME  TO POP_NAME
         MOVEADR   CLMS_KEY   TO POP_KEY
         MOVEADR   CLMS_OLD   TO POP_OLD
         MOVEADR   CLMS_BASE  TO POP_ID
         MOVEADR   CLMS_LINE  TO POP_LINE
         RETURN

. ----------------------------------
.   Subroutines and other includes
. ----------------------------------

         INC       X_OGBFILE.IO
         INC       UTIL.SR
         INC       FILE.IO
         INC       POP.IO
