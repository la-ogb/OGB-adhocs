+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+    Program name   :  A1403111.PS
+    Description    :  ADH - Fixes EGWP RS PENDING MEME RECODS WITH NO OPEN     +                      EGWP
+
+    APSJM A1403111 03/11/2014 - INITIAL VERSION                                
+    apazw 06/12/2017 - mod - increase file size                                
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

. ----------------------------
. Required Program Includes
. ----------------------------

              INC       COMMON.CB            ...Common work area
              INC       X_COMMON.CB          ...OGB Common Work Area
              INC       VALID.RL             ...Valid codes
              INC       X_OGBFILE.CB         ...OGB Custom File Handler
              INC       PRT.RL               ...Printer Definition File
              
. ----------------------------
. Program Specific Includes
. ----------------------------
              INC       MEM.RL           ...Member Demographics
              INC       MEME.RL          ...Member Enrollment  
              INC       CLI.RL           ...Client Demographics
              INC       D_MEMMEM.CB      ...IMPACT UPDATE

. ----------------------------
. File Declarations
. ----------------------------
.Input Files
MEME_REF_FD         FILE       VAR=29,TEXT
MEME_REF_NAME       INIT       "/w/a1403111_ref.txt"
MEME_REF_LIST       LIST
MEME_REF_ID1        DIM         8
MEME_REF_ID2        DIM         4
MEME_REF_EFF        DIM         8
MEME_REF_TRM        DIM         8
MEME_REF_TLET       DIM         1
                    LISTEND
.
MEME_RS_ERR_FD     FILE    VAR=100,TEXT
MEME_RS_ERR_NAME   INIT "/w/a1403111_err.txt"
MEME_RS_ERR_LIST   LIST
MEME_RS_ERR_ID1    DIM  8
MEME_RS_ERR_ID2    DIM  4
MEME_RS_ERR_ERR    DIM  40
                   LISTEND 
.Output Files
U_MEME_FD     FILE     VAR=X_INM_SIZE,TEXT
U_MEME_NAME    INIT    "a1403111.txt"      
.
MEME_WRK_FD   FILE      VAR=16,TEXT
MEME_WRK_NME  INIT      "/w/a1403111.meme.wrk"
MEME_WRK_LIST LIST
MEME_WRK_EFF  DIM       8
MEME_WRK_TRM  DIM       8
              LISTEND
MEME_WRK_SRTKEY INIT "1-8 -T"
. ----------------------------
. Program Specific Variables & Working Storage
. ----------------------------
EARLIEST_EFF_DATE DIM  8
SAVE_TRM      DIM      8
NUM_OF_DAYS   FORM     5
MEME_SAV3     DIM  600
MEME_SAV5     DIM  600
P_EFF_DT_06   INIT "20140601"
P_EFF_DT_07   INIT "20140701"
EGWP          INIT "EGWP "
R1            INIT "R1"
R2            INIT "R2"
W             INIT "W"
BLANK8        INIT "        "
TILDE         INIT "~"
W_TRM         DIM  8
FIRST_READ    DIM  1
ACT_SW        DIM  1
CNT_4         DIM  4
CNT_3         DIM  3
FIRST_PAGE    DIM       1
FIRST_TIME    DIM       1
WORK_COUNT    DIM       8
FRONT         DIM       5
BACK          DIM       3
TIMESTAMP     DIM       14
CURRDATE      DIM       8
TRAP_DATA     DIM       500
CAL_CLOCK     DIM       21
ORIG_RETURN   FORM      5
CURR_RETURN   FORM      5
TODAY         DIM       8
. ...Report Fields

PAGE_NO       FORM      5
LINE_NO       FORM      3
LINE_MAX      FORM     "54"

R_PAGE_NO     DIM       5
R_DATE        DIM      10
R_TIME        DIM       8
YES           INIT     "Y"
NO            INIT     "N"

. ...Printing Controls

NORM_10       DIM      29
BOLD_10       DIM      29
NORM_12       DIM      26
BOLD_12       DIM      26
NORM_16       DIM      33
BOLD_16       DIM      33

ESC_CHAR      EQU      27
XCAPE         INIT     ESC_CHAR

PARAM_LIST    LIST
PARAM_XXX     DIM      10
PARAM_YYY     DIM       5
PARAM_DATE    DIM       8
              LISTEND

. ----------------------------
. Begin Program
. ----------------------------

. ----------------------------
. Start here if selected from menu   
. ----------------------------


         CALL      RUN_NOW

         CHAIN     C_NEXT

. ----------------------------
. Start here if called by the Scheduler    
. ----------------------------

         INC       SCHED_NP.SR              Scheduler routines (w/o printer)

RUN_NOW
. ...Check return stack
    RETCOUNT  ORIG_RETURN
. ----------------------------
. Fill top of screen
. ----------------------------

. ...Screen Display
         DISPLAY   *ES
         MOVE      "MENU"              TO  C_NEXT
         MOVE      "FIX RS EGWP " TO  C_OPER
         MOVE      "A1403111"           TO  C_PROG
         MOVE      BLANKS              TO  C_LABEL
         MOVE      BLANKS              TO  C_FILE
         MOVE      BLANKS              TO  C_KEYS
         CLOCK     CALENDAR            INTO  CAL_CLOCK
         
         CALL X_BLANK_SCREEN

. ----------------------------
. Set Applicable Traps
. ----------------------------
         
. ...Set Applicable Traps
         TRAPSAVE  TRAP_DATA
         TRAPCLR   ALL
         TRAP      QUIT   NORESET  IF F9
	
. ----------------------------
. Get scheduler information
. ----------------------------

         CALL     SCHED_PICK

         IF (RUN_MODE = "B" OR RUN_MODE = "N")
            CALL      MAIN_PROCESS
         ENDIF
         RETURN

. ----------------------------
. Main Process
. ----------------------------

MAIN_PROCESS
    DEBUG
    CALL INITIALIZE
    CALL REFORMAT_MEME
    CALL OPEN_FILES
    CALL PROCESS_REF_FILE
....Close Files
    CALL      CLOSE_FILES 
    CALL      X_DISPLAY_COUNTS
    TRAPREST  TRAP_DATA
    MOVE      SCH_RTSUCC  TO  SCH@RTCODE
    RETURN                                                   
. ----------------------------
. End of Main Process
. ----------------------------

PROCESS_REF_FILE
 LOOP
    MOVE OGB_SEQ1 TO OGB_SEQ
    CALL READ_OGBFILE USING MEME_REF_FD,MEME_REF_NAME,MEME_REF_LIST        
      IF (RESULT <> 1)
         BREAK 
      ENDIF
    ADD 1 TO X_CNT1
    UNPACK X_CNT1 INTO CNT_4,CNT_3
    IF (CNT_3 = "000")
       CALL X_DISPLAY_COUNTS
    ENDIF
    PACK MEM_FK11 WITH MEME_REF_ID1,BLANKS
    CALL  FILE_READ USING MEM_FD:  ...FILE DECLARATION LIST
                           MEM_FN:  ...FILE NAME LIST
                           MEM_FC:  ...TYPE OF INDEX
.                                    ...(I)NDEX OR (A)IMDEX
                           MEM_FV:  ...FILE KEY VARLISTS
                           MEM_FK:  ...FILE KEY SIZES
                           MEM_LIST:...FILE RECORD (FIELD LIST)
                           MEM_REC: ...FILE RECORD (PACKED)
                           MEM_OLD: ...FILE SAVED WHEN READ
                           MEM_QTY: ...NUMBER OF FILES
                           1         ...FILE NUMBER FOR THIS READ

    IF (RESULT <> 1)
       CONTINUE
    ENDIF
    PACK MEM_SAV WITH MEM_LIST
    PACK MEME_FK11 WITH MEME_REF_ID1,MEME_REF_ID2,BLANKS
    CALL  FILE_READ USING MEME_FD:  ...FILE DECLARATION LIST
                           MEME_FN:  ...FILE NAME LIST
                           MEME_FC:  ...TYPE OF INDEX
.                                    ...(I)NDEX OR (A)IMDEX
                           MEME_FV:  ...FILE KEY VARLISTS
                           MEME_FK:  ...FILE KEY SIZES
                           MEME_LIST:...FILE RECORD (FIELD LIST)
                           MEME_REC: ...FILE RECORD (PACKED)
                           MEME_OLD: ...FILE SAVED WHEN READ
                           MEME_QTY: ...NUMBER OF FILES
                           1         ...FILE NUMBER FOR THIS READ
    PACK MEME_SAV WITH MEME_LIST
    CALL READ_MEME_OTH_RT_W
    IF (SQUEEZE MEME_SAV2 <> "")
        CLEAR INM_REC
        UNPACK MEME_SAV2 INTO MEME_LIST
        PACKLEN MEME_REC WITH MEME_LIST
        PACKLEN INM_REC WITH MEM_SAV,MEME_REC
        UNPACK INM_REC INTO INM_LIST
        MOVE "V" TO INME_TLET
        CLEAR INME_CHGBY
        CLEAR INME_NEWBY
        CLEAR INM_CHGBY
        MOVE OGB_SEQ1 TO OGB_SEQ
        CALL WRITE_OGBREC USING U_MEME_FD,U_MEME_NAME,INM_LIST
        CLEAR INM_LIST
        CONTINUE
    ELSE
        CONTINUE
    ENDIF
    IF (SQUEEZE MEME_SAV2 <> "")
      MOVE MEME_REF_ID1 TO MEME_RS_ERR_ID1
      MOVE MEME_REF_ID2 TO MEME_RS_ERR_ID2
      MOVE "ENROLLEE HAS MULTIPLE RT" TO MEME_RS_ERR_ERR
      MOVE OGB_SEQ1 TO OGB_SEQ
      CALL WRITE_OGBREC USING MEME_RS_ERR_FD,MEME_RS_ERR_NAME,MEME_RS_ERR_LIST
      CLEAR MEME_RS_ERR_LIST
      CONTINUE
    ENDIF
    CALL GET_ACT_SPOUSE
    IF (SQUEEZE MEM_SAV2 = "")
      MOVE MEME_REF_ID1 TO MEME_RS_ERR_ID1
      MOVE MEME_REF_ID2 TO MEME_RS_ERR_ID2
      MOVE "NO ACTIVE SPOUSE" TO MEME_RS_ERR_ERR
      MOVE OGB_SEQ1 TO OGB_SEQ
      CALL WRITE_OGBREC USING MEME_RS_ERR_FD,MEME_RS_ERR_NAME,MEME_RS_ERR_LIST
      CLEAR MEME_RS_ERR_LIST
      CONTINUE
    ENDIF
    UNPACK MEM_SAV2 INTO MEM_LIST
    CALL READ_SP_MEME
    IF (SQUEEZE MEME_SAV2 = "")
     IF (SQUEEZE MEME_SAV5 = "")
        MOVE MEME_REF_ID1 TO MEME_RS_ERR_ID1
        MOVE MEME_REF_ID2 TO MEME_RS_ERR_ID2
        MOVE "SPOUSE DOES NOT HAVE OPEN EGWP" TO MEME_RS_ERR_ERR
        MOVE OGB_SEQ1 TO OGB_SEQ
        CALL WRITE_OGBREC USING MEME_RS_ERR_FD,MEME_RS_ERR_NAME,MEME_RS_ERR_LIST
        CLEAR MEME_RS_ERR_LIST
        CONTINUE
     ELSE
        UNPACK MEME_SAV5 INTO MEME_LIST
        IF (MEME_EFF = MEME_REF_EFF)
            CONTINUE
        ELSE      
            CLEAR INM_REC
            PACKLEN INM_REC WITH MEM_SAV,MEME_SAV
            UNPACK INM_REC INTO INM_LIST
            MOVE MEME_EFF TO INME_EFF
            CALL DATE_CALC USING INME_EFF,"SUB","DAYS",1,INME_TRM
            CLEAR INME_CHGBY
            CLEAR INME_NEWBY
            CLEAR INM_CHGBY
            MOVE OGB_SEQ1 TO OGB_SEQ
            CALL WRITE_OGBREC USING U_MEME_FD,U_MEME_NAME,INM_LIST
            CLEAR INM_LIST
            CONTINUE
        ENDIF 
     ENDIF
    ENDIF
    
     CLEAR INM_REC
     PACKLEN INM_REC WITH MEM_SAV,MEME_SAV
     UNPACK INM_REC INTO INM_LIST
     UNPACK MEME_SAV2 INTO MEME_LIST
     MOVE EARLIEST_EFF_DATE TO MEME_EFF
     IF (INME_EFF <> MEME_EFF) 
        MOVE MEME_EFF TO INME_EFF
     ENDIF
     FILL TILDE IN INME_TRM
     FILL TILDE IN INME_TLET
     CLEAR INME_CHGBY
     CLEAR INME_NEWBY
     CLEAR INM_CHGBY
     MOVE OGB_SEQ1 TO OGB_SEQ
     CALL WRITE_OGBREC USING U_MEME_FD,U_MEME_NAME,INM_LIST
     CLEAR INM_LIST
 REPEAT
 RETURN

GET_ACT_SPOUSE       
  CLEAR MEM_SAV2
  MOVE "Y" TO FIRST_READ
  CLEAR MEM_AIM
  PACK  MEM_AIM1 WITH "01X",MEM_ESSN,BLANKS
  PACK  MEM_AIM3 WITH "03X","02",BLANKS
  LOOP 
    IF (FIRST_READ = "Y")
         CALL  FILE_READ USING MEM_FD:        ...FILE DECLARATION LIST
                            MEM_FN:        ...FILE NAME LIST
                            MEM_FC:        ...(I)NDEX OR (A)IMDEX
                            MEM_FV:        ...FILE KEY VARLISTS
                            MEM_AIM:       ...FILE KEY SIZES
                            MEM_LIST:      ...FILE RECORD (FIELD LIST)
                            MEM_REC:       ...FILE RECORD (PACKED)
                            MEM_OLD:       ...FILE SAVED WHEN READ
                            MEM_QTY:       ...NUMBER OF FILES
                            2              ...FILE NUMBER FOR THIS READ
         MOVE "N" TO FIRST_READ
    ELSE
         CALL  FILE_NEXT USING MEM_FD:        ...FILE DECLARATION LIST
                            MEM_FN:        ...FILE NAME LIST
                            MEM_FC:        ...(I)NDEX OR (A)IMDEX
                            MEM_FV:        ...FILE KEY VARLISTS
                            MEM_AIM:       ...FILE KEY SIZES
                            MEM_LIST:      ...FILE RECORD (FIELD LIST)
                            MEM_REC:       ...FILE RECORD (PACKED)
                            MEM_OLD:       ...FILE SAVED WHEN READ
                            MEM_QTY:       ...NUMBER OF FILES
                            2              ...FILE NUMBER FOR THIS READ
    ENDIF
    IF (RESULT <> 1)
           BREAK 
    ENDIF

    IF (SQUEEZE MEM_TRM = "") 
           MOVE "99999999" TO MEM_TRM
    ENDIF

    IF ((SQUEEZE MEM_TRM <> "") AND (MEM_TRM < TODAY))
           CONTINUE
    ENDIF
    IF ((SQUEEZE MEM_TRM <> "") AND (MEM_TRM < TODAY))
           CONTINUE
    ENDIF
    PACK MEM_SAV2 WITH MEM_LIST
    CALL GET_EARLIEST_EGWP_EFF
  REPEAT
  RETURN

GET_EARLIEST_EGWP_EFF
.EARLIEST DATE OF UNINTERRUPTED COVERAGE WITHIN EGWP                           
      DEBUG
      CLEAR EARLIEST_EFF_DATE
      CALL PREP_OGBFILE USING MEME_WRK_FD,MEME_WRK_NME
      PACK MEME_FK11 WITH MEM_ID1,BLANKS     
      CALL  FILE_READ USING MEME_FD:  ...FILE DECLARATION LIST
                            MEME_FN:  ...FILE NAME LIST  
		            MEME_FC:  ...TYPE OF INDEX   
.	  		              ...(I)NDEX OR (A)IMDEX
		            MEME_FV:  ...FILE KEY VARLISTS
		            MEME_FK:  ...FILE KEY SIZES  
		            MEME_LIST:...FILE RECORD (FIELD LIST)
		            MEME_REC: ...FILE RECORD (PACKED)
		            MEME_OLD: ...FILE SAVED WHEN READ
		            MEME_QTY: ...NUMBER OF FILES 
			    1	      ...FILE NUMBER FOR THIS READ
      LOOP
          CALL  FILE_NEXT USING MEME_FD:  ...FILE DECLARATION LIST
                                MEME_FN:  ...FILE NAME LIST  
		                MEME_FC:  ...TYPE OF INDEX   
.	  	                          ...(I)NDEX OR (A)IMDEX
		                MEME_FV:  ...FILE KEY VARLISTS
		                MEME_FK:  ...FILE KEY SIZES  
		                MEME_LIST:...FILE RECORD (FIELD LIST)
		                MEME_REC: ...FILE RECORD (PACKED)
		                MEME_OLD: ...FILE SAVED WHEN READ
		                MEME_QTY: ...NUMBER OF FILES 
		                1	  ...FILE NUMBER FOR THIS READ
          IF  ((MEM_ID1 <> MEME_ID1) OR (RESULT <> 1))
               BREAK       
          ENDIF
          IF (SQUEEZE MEME_NET <> "EGWP")
              CONTINUE
          ENDIF
          IF (SQUEEZE MEME_TRM <> "")
              IF (MEME_TRM < MEME_EFF)
                IF (MEME_TLET = "W")
                   CONTINUE
                ENDIF
              ENDIF
          ENDIF 
          MOVE MEME_EFF TO MEME_WRK_EFF
          MOVE MEME_TRM TO MEME_WRK_TRM
          CALL WRITE_OGBREC USING MEME_WRK_FD,MEME_WRK_NME,MEME_WRK_LIST
          CLEAR MEME_WRK_LIST
      REPEAT 
      CALL CLOSE_OGBFILE USING MEME_WRK_FD,MEME_WRK_NME 
      CALL SORT_OGBFILE USING MEME_WRK_NME,MEME_WRK_NME,MEME_WRK_SRTKEY
        IF OVER
            ERROR   HORZ="15",VERT="19":
                    BGCOL=C_ERRB,FGCOL=C_ERRF:
                    LNCOL=C_ERRL,SHADE="Y":
                    TEXT="SORT WORK FILE FAILED"
            CHAIN "MENU"
        ENDIF

      CALL OPEN_OGBFILE USING MEME_WRK_FD,MEME_WRK_NME 
      MOVE "99999999" TO EARLIEST_EFF_DATE
      CLEAR SAVE_TRM
      MOVE OGB_SEQ1 TO OGB_SEQ
      LOOP
         CALL READ_OGBFILE USING MEME_WRK_FD,MEME_WRK_NME,MEME_WRK_LIST
         IF  (RESULT <> 1)
               BREAK       
          ENDIF
          CLEAR NUM_OF_DAYS
          IF (EARLIEST_EFF_DATE <> "99999999")
              CALL DELTA_DAYS USING MEME_WRK_EFF,SAVE_TRM,NUM_OF_DAYS
              IF (NUM_OF_DAYS > 1)
                   MOVE MEME_WRK_EFF TO EARLIEST_EFF_DATE
              ENDIF
          ENDIF
          MOVE MEME_WRK_TRM TO SAVE_TRM
          IF (EARLIEST_EFF_DATE = "99999999")
              MOVE MEME_WRK_EFF TO EARLIEST_EFF_DATE
          ENDIF
      REPEAT 
      RETURN
     
  
READ_MEME_OTH_RT_W
    CLEAR W_TRM
    CLEAR MEME_SAV2
    CLEAR MEME_SAV3
    PACK MEME_FK11 WITH MEM_ID1,BLANKS
    CALL  FILE_READ USING MEME_FD:  ...FILE DECLARATION LIST
        	           MEME_FN:  ...FILE NAME LIST  
		           MEME_FC:  ...TYPE OF INDEX   
.	  		             ...(I)NDEX OR (A)IMDEX
		           MEME_FV:  ...FILE KEY VARLISTS
		           MEME_FK:  ...FILE KEY SIZES  
		           MEME_LIST:...FILE RECORD (FIELD LIST)
		           MEME_REC: ...FILE RECORD (PACKED)
		           MEME_OLD: ...FILE SAVED WHEN READ
		           MEME_QTY: ...NUMBER OF FILES 
			   1	     ...FILE NUMBER FOR THIS READ
    LOOP 
          CALL  FILE_NEXT USING MEME_FD:  ...FILE DECLARATION LIST
                                   MEME_FN:  ...FILE NAME LIST
                                   MEME_FC:  ...TYPE OF INDEX
.                                            ...(I)NDEX OR (A)IMDEX
                                   MEME_FV:  ...FILE KEY VARLISTS
                                   MEME_FK:  ...FILE KEY SIZES
                                   MEME_LIST:...FILE RECORD (FIELD LIST)
                                   MEME_REC: ...FILE RECORD (PACKED)
                                   MEME_OLD: ...FILE SAVED WHEN READ
                                   MEME_QTY: ...NUMBER OF FILES
                                   1         ...FILE NUMBER FOR THIS READ
            IF ((MEME_ID1 <> MEM_ID1) OR (RESULT <> 1))
                  BREAK
            ENDIF
            IF (SQUEEZE MEME_TRM = "")
               FILL "9" IN W_TRM
            ELSE
               MOVE MEME_TRM TO W_TRM
            ENDIF
            SWITCH MEME_NET
               CASE "BLUE "
                 IF ((SQUEEZE MEME_PRD = "ASO") OR (SQUEEZE MEME_PRD = "PPO"))
                    IF ((TODAY >= MEME_EFF) AND (TODAY <= W_TRM))
                       PACKLEN MEME_SAV3 WITH MEME_LIST
                    ENDIF
                 ENDIF
            ENDSWITCH

            IF (SQUEEZE MEME_NET <> "EGWP")
                  CONTINUE
            ENDIF
            IF ((MEME_REF_ID1 = MEME_ID1) AND (MEME_REF_ID2 = MEME_ID2))
                  CONTINUE
            ENDIF
            IF (SQUEEZE MEME_TLET <> "W")
                  CONTINUE
            ENDIF
            IF (MEME_RT = "RS")
               CONTINUE
            ENDIF
            PACK MEME_SAV2 WITH MEME_LIST
    REPEAT
    RETURN
.
READ_SP_MEME
    CLEAR MEME_SAV5
    CLEAR W_TRM
    CLEAR MEME_SAV2
    PACK MEME_FK11 WITH MEM_ID1,BLANKS
    CALL  FILE_READ USING MEME_FD:  ...FILE DECLARATION LIST
        	           MEME_FN:  ...FILE NAME LIST  
		           MEME_FC:  ...TYPE OF INDEX   
.	  		             ...(I)NDEX OR (A)IMDEX
		           MEME_FV:  ...FILE KEY VARLISTS
		           MEME_FK:  ...FILE KEY SIZES  
		           MEME_LIST:...FILE RECORD (FIELD LIST)
		           MEME_REC: ...FILE RECORD (PACKED)
		           MEME_OLD: ...FILE SAVED WHEN READ
		           MEME_QTY: ...NUMBER OF FILES 
			   1	     ...FILE NUMBER FOR THIS READ
    LOOP 
          CALL  FILE_NEXT USING MEME_FD:  ...FILE DECLARATION LIST
                                   MEME_FN:  ...FILE NAME LIST
                                   MEME_FC:  ...TYPE OF INDEX
.                                            ...(I)NDEX OR (A)IMDEX
                                   MEME_FV:  ...FILE KEY VARLISTS
                                   MEME_FK:  ...FILE KEY SIZES
                                   MEME_LIST:...FILE RECORD (FIELD LIST)
                                   MEME_REC: ...FILE RECORD (PACKED)
                                   MEME_OLD: ...FILE SAVED WHEN READ
                                   MEME_QTY: ...NUMBER OF FILES
                                   1         ...FILE NUMBER FOR THIS READ
            IF ((MEME_ID1 <> MEM_ID1) OR (RESULT <> 1))
                  BREAK
            ENDIF
            IF (SQUEEZE MEME_NET <> "EGWP")
                  CONTINUE
            ENDIF
            IF (SQUEEZE MEME_TRM = "")
                  FILL "9" IN W_TRM
            ELSE
                 MOVE MEME_TRM TO W_TRM
            ENDIF
            IF ((TODAY >= MEME_EFF) AND (TODAY <= W_TRM))                  
              PACK MEME_SAV2 WITH MEME_LIST
            ENDIF 
            IF ((MEME_EFF > TODAY) AND (SQUEEZE MEME_TLET = ""))
              PACK  MEME_SAV5 WITH MEME_LIST
            ENDIF
    REPEAT
    RETURN
.

REFORMAT_MEME
.-----------------------------------
...Get only EGWP records
.-----------------------------------
    MOVE BLANKS TO SCRATCH
    PACK SCRATCH WITH "meme.dbf /ogb/work/a1403111_ref.txt":
                      " -p112-116eq#"",EGWP,"#"":
                      " -p130-131eq#"",R1,"#"":
                      " -p96-103eq#"",P_EFF_DT_06,"#"":
                      " -p104-111ne#"",BLANK8,"#"":
                      " -p404-404eq#"",W,"#" 1-12 96-111 404-404 -t -j"
    REFORMAT SCRATCH
    IF OVER
        ERROR HORZ="15",VERT="19":
              BGCOL=C_ERRB,FGCOL=C_ERRF:
              LNCOL=C_ERRL,SHADE="Y":
              TEXT="REFORMAT FAILED(meme.dbf)"
        CHAIN "MENU"
    ENDIF
    MOVE BLANKS TO SCRATCH
    PACK SCRATCH WITH "meme.dbf /ogb/work/a1403111_ref.txt":
                      " -p112-116eq#"",EGWP,"#"":
                      " -p130-131eq#"",R1,"#"":
                      " -p96-103eq#"",P_EFF_DT_07,"#"":
                      " -p104-111ne#"",BLANK8,"#"":
                      " -p404-404eq#"",W,"#" 1-12 96-111 404-404 -t -a -j"
    REFORMAT SCRATCH
    IF OVER
        ERROR HORZ="15",VERT="19":
              BGCOL=C_ERRB,FGCOL=C_ERRF:
              LNCOL=C_ERRL,SHADE="Y":
              TEXT="REFORMAT FAILED(meme.dbf)"
        CHAIN "MENU"
    ENDIF
    MOVE BLANKS TO SCRATCH
    PACK SCRATCH WITH "meme.dbf /ogb/work/a1403111_ref.txt":
                      " -p112-116eq#"",EGWP,"#"":
                      " -p130-131eq#"",R2,"#"":
                      " -p96-103eq#"",P_EFF_DT_06,"#"":
                      " -p104-111ne#"",BLANK8,"#"":
                      " -p404-404eq#"",W,"#" 1-12 96-111 404-404 -t -a -j"
    REFORMAT SCRATCH
    IF OVER
        ERROR HORZ="15",VERT="19":
              BGCOL=C_ERRB,FGCOL=C_ERRF:
              LNCOL=C_ERRL,SHADE="Y":
              TEXT="REFORMAT FAILED(meme.dbf)"
        CHAIN "MENU"
    ENDIF
    MOVE BLANKS TO SCRATCH
    PACK SCRATCH WITH "meme.dbf /ogb/work/a1403111_ref.txt":
                      " -p112-116eq#"",EGWP,"#"":
                      " -p130-131eq#"",R2,"#"":
                      " -p96-103eq#"",P_EFF_DT_07,"#"":
                      " -p104-111ne#"",BLANK8,"#"":
                      " -p404-404eq#"",W,"#" 1-12 96-111 404-404 -t -a -j"
    REFORMAT SCRATCH
    IF OVER
        ERROR HORZ="15",VERT="19":
              BGCOL=C_ERRB,FGCOL=C_ERRF:
              LNCOL=C_ERRL,SHADE="Y":
              TEXT="REFORMAT FAILED(meme.dbf)"
        CHAIN "MENU"
    ENDIF


    RETURN
    SORT "/w/a1403111_ref.txt /w/a1403111_ref.txt 1-8 -u -t"
        IF OVER
              ERROR     HORZ="15",VERT="19":
                        BGCOL=C_ERRB,FGCOL=C_ERRF:
                        LNCOL=C_ERRL,SHADE="Y":
                        TEXT="SORT FAILED(a1403111_ref.txt)"
              CHAIN     "MENU"
        ENDIF


.
. ----------------------------
. Operator pressed F9
. ----------------------------

QUIT
         IF (C_RMODE = "I")
            error     horz="23",vert="19":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" Process Aborted by Operator ":
                      text="-----------------------------"
            messageerase
         ENDIF

         CLEAR     C_NOHIST

         TRAPREST  TRAP_DATA

         IF (RUN_MODE = "B")
            LOOP
               RETCOUNT  CURR_RETURN
               WHILE     (CURR_RETURN > ORIG_RETURN)
               NORETURN
            REPEAT
            MOVE      SCH_RTABRT  TO  SCH@RTCODE
            RETURN
         ENDIF
         CHAIN     "MENU"

INITIALIZE
         DISPLAY *P1:9,*ES
         CALL X_BLANK_SCREEN
         CLOCK     TIMESTAMP   INTO  TIMESTAMP
         CLOCK     TIMESTAMP   INTO  CURRDATE
         CLOCK     TIMESTAMP     TO  TODAY

. ...Display Counters
	 MOVE      "Recs Read:     " TO X_CNTDESC1
	 MOVE      "Recs Written:     " TO X_CNTDESC2

	 CALL      X_DISPLAY_COUNTS
         RETURN
.
OPEN_FILES
         CALL      PREP_OGBFILE USING MEME_RS_ERR_FD,MEME_RS_ERR_NAME
         CALL      OPEN_OGBFILE USING MEME_REF_FD,MEME_REF_NAME
         CALL      PREP_OGBFILE USING U_MEME_FD,U_MEME_NAME   
         RETURN

CLOSE_FILES
         RETURN

    INC       PRINT.SR
    INC       UTIL.SR      
    INC       VALID.IO
    INC       X_STANDARD.SR
    INC       FILE.IO

. ----------------------------
. Program Specific Includes
. ----------------------------

              INC       X_OGBFILE.IO

. +++++++++++++++++++++++++++++++++++++
. /End of A1403111.PS
. +++++++++++++++++++++++++++++++++++++
