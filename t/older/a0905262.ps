+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+    Program name   :  a0905262.ps
+    Description    :  It has been discovered that there were term reason "L"
+                      with no letter date.  the COBRA election notices do not
+                      get sent without the letter date.  The letter date needs
+                      to be updated with the current date for people who have
+                      been termed since 2/17/09 with a term reason "L" and who
+                      are not in a group starting with "50" (cobra & DSS).
+    Author         :  Deborah Mohammad
+    Date created   :  05/26/2009
+    Project #      :  A0905262
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+                              REVISIONS                                      +
+                                                                             + 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.--------------------------
. Required Program Includes
.--------------------------
    INC       COMMON.CB            ...Common work area
    INC       X_COMMON.CB          ...OGB Common work area
    INC       VALID.RL             ...Valid codes
    INC       X_OGBFILE.CB         ...OGB Custom File Handler


.--------------------------
. Program Specific Includes
.--------------------------
    INC       MEM.RL               ...Member demographic Record
    INC       MEME.RL           
    INC       D_MEMMEM.CB          ...Member Import Layout
    INC       CLI.RL                                              


.------------------
. File Declarations
.------------------

.~~~~~~~~~~INPUT FILES
REF_FILE       FILE      VAR=39,TEXT
REF_NAME       DIM       30
REF_NAME1      INIT      "a0905262.ref"

REF_LIST        LIST
...<Begin>...................................................................
REF_ID1         DIM     8       001-008 Enrollee ID#
REF_ID2         DIM     4       009-012 Record line #
REF_TLET        DIM     1       013-013 Term reason code 
REF_TRUN        DIM     8       014-021 Term letter date
REF_TRM         DIM     8       022-029 Term date
REF_LEV1        DIM     5       030-034 MEME_LEV1
REF_LEV2        DIM     5       035-039 MEME_LEV2
...<End>.....................................................................
                   LISTEND

.~~~~~~~~~~OUTPUT FILES
OUTPUT_FILE       FILE      VAR=3100,TEXT
OUTPUT_NAME1      INIT      "a0905262.txt"
OUTPUT_NAME       DIM       30

.--------------------------------------------
.Program Specific Variables & Working Storage
.--------------------------------------------
.production
.MY_MEME           INIT  "/mcsprd/f/meme.dbf"
.testing
MY_MEME           INIT  "/mcsapl/f/meme.dbf"
BLANKDT           INIT  "        "

TIMESTAMP		DIM	14
CURRDATE      		DIM     08
PARAM_LIST    		LIST
PARAM_XXX     		DIM     10
PARAM_YYY     		DIM     05
PARAM_DATE    		DIM     08
              		LISTEND

VAL_RESULT              FORM     1
TRAP_DATA       	DIM      500
RUNDATE                 DIM      4
TODAY           	DIM      8
TODAY_CCYY           	DIM      4
TODAY_CCYY1           	DIM      4
TODAY_MM           	DIM      2
TODAY_DD           	DIM      2
CAL_CLOCK       	DIM      21
DISP4                   DIM      04
DISP3                   DIM      03
PROC_KEY                DIM      08
BLANK8                  INIT     "        "
HLD_MEME_DEPC           DIM      02  
HLD_MEME_NET            DIM      05  
HLD_MEME_TRM            DIM      08  
HLD_MEME_TRM_YRMO       DIM      06  
HLD_MEME_TRM_DAY        DIM      02  
HLD_MEM_ESSN            DIM      09  
FIRST_MEME_READ         DIM       1 
INP_RESULT              FORM      1 
IDX_RESULT              FORM      1 
MEM_RESULT              FORM      1 
WS_ZIP3                 DIM      03
WS_ZIP10                DIM      10
ORIG_RETURN     	FORM     5
CURR_RETURN     	FORM     5
EFF_CCYYMMDD            DIM      8
EFF_MMDD                INIT     "0101"
TRM_CCYYMMDD            INIT     "20081231"
TRM_MMDD                INIT     "1231"
SAVE_MEME_ID1           DIM      08

ERRMSG                  INIT    "YOU HAVE ENTERED AN INVALID RESPONSE !"



.....> START HERE
         CALL      RUN_NOW
         CHAIN     C_NEXT 			    chains to back to the menu



.----------------------------------------
.   Start here if called by the Scheduler    
.----------------------------------------
         INC       SCHED_NP.SR              Scheduler routines (no printer)
RUN_NOW
         RETCOUNT  ORIG_RETURN



.---------------------
.   Fill top of screen
.---------------------
      MOVE      "menu"                     TO    C_NEXT
      MOVE      "Update letter date on L " TO    C_OPER
      MOVE      "a0905262"                  TO    C_PROG
      MOVE      BLANKS                     TO    C_LABEL
      MOVE      BLANKS                     TO    C_FILE
      MOVE      BLANKS                     TO    C_KEYS
      CLOCK     CALENDAR                   INTO  CAL_CLOCK
      CALL X_BLANK_SCREEN

. ----------------------
.   Set applicable traps
. ----------------------
      TRAPSAVE  TRAP_DATA
      TRAPCLR   ALL
      TRAP      QUIT   NORESET  IF F9

. ---------------------------
.   Get scheduler information
. ---------------------------
      CALL     SCHED_PICK
      IF (RUN_MODE = "B" OR RUN_MODE = "N")
         CALL MAIN_PROCESS
      ENDIF
      RETURN

.##############################################################################
MAIN_PROCESS
.##############################################################################

  CALL      INITIALIZE
  debug
  CALL      REFORMAT_FILE
  CALL      OPEN_FILES
  DEBUG
  CALL      EXTRACT_OUTPUT_FILE    
  CALL      CLOSE_FILES
  CALL      NORMAL_EOJ
  TRAPREST  TRAP_DATA
  MOVE      SCH_RTSUCC  TO  SCH@RTCODE
  RETURN

.--------------------
. Operator pressed F9
. -------------------
QUIT
  IF (C_RMODE = "I")
      error horz="23",vert="19":
            bgcol=C_ERRB,fgcol=C_ERRF:
            lncol=C_ERRL,shade="Y":
            text=" Process Aborted by Operator ":
            text="-----------------------------"
      messageerase
  ENDIF
  CLEAR     C_NOHIST
  TRAPREST  TRAP_DATA
  IF (RUN_MODE = "B")
      LOOP
        RETCOUNT  CURR_RETURN
      WHILE     (CURR_RETURN > ORIG_RETURN)
      NORETURN
      REPEAT
      MOVE      SCH_RTABRT  TO  SCH@RTCODE
      RETURN
  ENDIF
  CHAIN     "MENU"
    

.##############################################################################
INITIALIZE
.##############################################################################
  CLOCK TIMESTAMP INTO TIMESTAMP
  CLOCK TIMESTAMP INTO CURRDATE
  CLOCK TIMESTAMP TO TODAY	

.---------------------
.   Fill top of screen
.---------------------
  MOVE      "menu"                     TO    C_NEXT
  MOVE      "Term Unverified Deps    " TO    C_OPER
  MOVE      "a0905262"                 TO    C_PROG
  MOVE      BLANKS                     TO    C_LABEL
  MOVE      BLANKS                     TO    C_FILE
  MOVE      BLANKS                     TO    C_KEYS
  CLOCK     CALENDAR                   INTO  CAL_CLOCK
. CALL X_BLANK_SCREEN

  MOVE "Records Read: " TO X_CNTDESC1
  MOVE "Enrollee Recs Found: " TO X_CNTDESC2
  MOVE "Dependent Recs Found: " TO X_CNTDESC3
  MOVE "Error Records Found: " TO X_CNTDESC4
  MOVE "Records Processed: " TO X_CNTDESC5
  DISPLAY *ES

    PACK REF_NAME WITH OGB_PATH, REF_NAME1
    PACK OUTPUT_NAME WITH OUTPUT_NAME1
 
.------------------
...Display Counters
.------------------
  CALL X_DISPLAY_COUNTS

  CALL DATE_CALC USING TODAY,"ADD","YEARS",1,RUNDATE
         UNPACK RUNDATE INTO TODAY_CCYY1

  PACK EFF_CCYYMMDD WITH TODAY_CCYY1,EFF_MMDD

.  UNPACK TODAY INTO TODAY_CCYY,TODAY_MM,TODAY_DD
.  PACK TRM_CCYYMMDD WITH TODAY_CCYY,TRM_MMDD

    RETURN

.##############################################################################
OPEN_FILES
.##############################################################################
    CALL OPEN_OGBFILE USING REF_FILE,REF_NAME
 
    CALL PREP_OGBFILE USING OUTPUT_FILE,OUTPUT_NAME

    RETURN

.
.##############################################################################
REFORMAT_FILE           
.##############################################################################
...Reformatting for term reason equal "L" and no term letter date where emp
...was termed after 2/16/09.  Extracting meme_id1 and id2, term letter, letter
...date, term date and lev1 and lev2.
     MOVE BLANKS TO SCRATCH
     PACK SCRATCH WITH "meme.dbf"," ",REF_NAME:
                       " -p404-404eqL":
                       " -p405-412eq#"",BLANKDT,"#"":
                       " -p104-111gt20090216":
                       " -p112-115neLIFE":
                       " -p21-21ne5":
                       " 1-12 404-412 104-111 21-30 -t"
     REFORMAT SCRATCH

     IF OVER
        ERROR HORZ="15",VERT="19":
              BGCOL=C_ERRB,FGCOL=C_ERRF:
              LNCOL=C_ERRL,SHADE="Y":
              TEXT="REFORMAT FAILED(MEME.DBF)"      
        CHAIN "MENU"
     ENDIF

    RETURN

.##############################################################################
EXTRACT_OUTPUT_FILE     
.##############################################################################
... Read the Input file (elg6440.txt)

    LOOP
        MOVE OGB_SEQ1 TO OGB_SEQ
        CALL READ_OGBFILE USING REF_FILE,REF_NAME,REF_LIST
        MOVE RESULT TO INP_RESULT
        IF (INP_RESULT <> 1)
            BREAK   
        ENDIF

        ADD 1 TO X_CNT1
        UNPACK X_CNT1 INTO DISP4,DISP3
        IF (DISP3 = "000")
            CALL X_DISPLAY_COUNTS
        ENDIF

... Read the MEM file for dependent 

        CLEAR     INM_REC
        CLEAR     MEM_SAV
        PACK      MEM_FK11 WITH REF_ID1,BLANKS
        CALL      FILE_READ USING MEM_FD:    ...FILE DECLARATION LIST
                            MEM_FN:          ...FILE NAME LIST
                            MEM_FC:          ...(I)NDEX OR (A)IMDEX
                            MEM_FV:          ...FILE KEY VARLISTS
                            MEM_FK:          ...FILE KEY SIZES
                            MEM_LIST:        ...FILE RECORD (FIELD LIST)
                            MEM_REC:         ...FILE RECORD (PACKED)
                            MEM_OLD:         ...FILE SAVED WHEN READ
                            MEM_QTY:         ...NUMBER OF FILES
                            1                 ...FILE NUMBER FOR THIS READ

        MOVE RESULT TO MEM_RESULT
...not found
        IF (MEM_RESULT <> 1)
            CONTINUE         
        ENDIF

        PACK MEM_SAV WITH MEM_REC

... Clearing the FIRST_MEME_READ Switch and Read the MEME record with the
... Dependent's Record ID

        MOVE " " TO FIRST_MEME_READ
        CLEAR HLD_MEME_NET   
        CLEAR MEME_SAV
        PACK MEME_FK11 WITH REF_ID1,REF_ID2,BLANKS
 
        CALL FILE_READ USING MEME_FD:             ...FILE DECLARATION LIST
                             MEME_FN:             ...FILE NAME LIST
                             MEME_FC:             ...TYPE OF INDEX
.                                                 ...(I)NDEX or (A)IMDEX
                             MEME_FV:             ...FILE KEY VARLIST
                             MEME_FK:             ...FILE KEY SIZES
                             MEME_LIST:           ...FILE RECORD (FIELD LIST)
                             MEME_REC:            ...FILE RECORD (PACKED)
                             MEME_OLD:            ...FILE SAVED WHEN READ
                             MEME_QTY:            ...NUMBER OF FILES
                             1                    ...FILE NUMBER FOR THIS READ

... If NO MEME record is found then reads the next record from file

            IF (RESULT <> 1) 
                BREAK             
            ENDIF 

...
            IF ((REF_ID1 <> MEME_ID1) OR (REF_ID2 <> MEME_ID2))
                IF (FIRST_MEME_READ = " ")
                    GOTO GET_MEM_RET
                ENDIF
            ENDIF

...Ignoring null records
            IF ((SQUEEZE MEME_TRM <> "") AND (MEME_TRM < MEME_EFF))
                CONTINUE 
            ENDIF

                PACK MEME_SAV WITH MEME_REC
                UNPACK MEME_SAV INTO MEME_LIST
                CALL WRITE_OUTPUT_RECS  

GET_MEM_RET
        REPEAT  
    RETURN

.##############################################################################
WRITE_OUTPUT_RECS
.##############################################################################
.---------------
...Write records
.---------------

    PACK INM_REC WITH MEM_SAV,MEME_SAV
    UNPACK INM_REC INTO INM_LIST

...
        MOVE CURRDATE TO INME_TRUN 
        MOVE BLANKS TO INM_CHGBY 
        MOVE BLANKS TO INME_CHGBY
        CALL WRITE_OGBREC USING OUTPUT_FILE:
                                OUTPUT_NAME:
                                INM_LIST     

  RETURN
 
.##############################################################################
CLOSE_FILES
.############################################################################## 

  CALL CLOSE_OGBFILE USING OUTPUT_FILE,OUTPUT_NAME

  RETURN
. -----------------------------------------------------

. ----------------------------
. Normal End-Of-Job Routine
. ----------------------------

NORMAL_EOJ

         MOVE      "        NEOJ        " TO X_FINISH_STATUS
         MOVE      "    a0905262  Completed   " TO X_PROG_FINISH
         CALL      X_END_OF_JOB

     RETURN

.------------------
. Required Includes
.------------------
  INC         UTIL.SR
  INC         VALID.IO
. INC         PRINT.SR
  INC         X_STANDARD.SR
  INC         FILE.IO

.--------------------------
. Program Specific Includes
.--------------------------
  INC        X_OGBFILE.IO
