+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+    Program name   :  A1610251   
+    APSJM A1610251 10/25/2016 - INITIAL VERSION                                
+    DESC: TERMS MEMBERS EGWP WHO HAVE MOVED FROM A BCBSLA PLAN AND HAVE EGWP
+           TO A VANTAGE, PEOPLE'S HEALTH OR ONE EXCHANGE MEDICARE ADVANTAGE
+           PLAN FOR NEW PLAN YEAR
+    apazw 06/12/2017 - mod - increase file size                                
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

. ----------------------------
. Required Program Includes
. ----------------------------

              INC       COMMON.CB            ...Common work area
              INC       X_COMMON.CB          ...OGB Common Work Area
              INC       VALID.RL             ...Valid codes
              INC       X_OGBFILE.CB         ...OGB Custom File Handler
              INC       PRT.RL               ...Printer Definition File
              
. ----------------------------
. Program Specific Includes
. ----------------------------
              INC       MEM.RL           ...Member Demographics
              INC       MEME.RL          ...Member Enrollment  
              INC       D_MEMMEM.CB      ...IMPACT UPDATE
              INC       CMDPARAM.CB

. ----------------------------
. File Declarations
. ----------------------------
.Input Files
MEME_REF_FD         FILE       VAR=8,TEXT
MEME_REF_NAME       INIT       "/w/a1610251_ref.txt"    
MEME_REF_LIST       LIST
MEME_REF_ID1        DIM        8
                    LISTEND
 
.Output Files
MEME_O_FD     FILE     VAR=X_INM_SIZE,TEXT
MEME_O_NAME   INIT    "a1610251.txt"      
.
. ----------------------------
. Program Specific Variables & Working Storage
. ----------------------------
VANTA          INIT      "VANTA"
ONEXC          INIT      "ONEXC"
PPLSH          INIT      "PPLSH"
NEW_CCYY       FORM      4
CURR_CCYY      FORM      4
CURR_MM        FORM      2
CURR_DD        FORM      2
PLANYR_BEG     DIM       8     ...first day of new plan year
PLANMO_END     DIM       8     ...last day of first month of new plan year
PLANYR_END     DIM       8     ...last day of new plan year
W_TRM         DIM  08
CMP_TRM       DIM  9
CNT_4         DIM  4
CNT_3         DIM  3
FIRST_PAGE    DIM       1
FIRST_TIME    DIM       1
WORK_COUNT    DIM       8
FRONT         DIM       5
BACK          DIM       3
TIMESTAMP     DIM       14
CURRDATE      DIM       8
TRAP_DATA     DIM       500
CAL_CLOCK     DIM       21
ORIG_RETURN   FORM      5
CURR_RETURN   FORM      5
TODAY         DIM       8
. ...Report Fields

PAGE_NO       FORM      5
LINE_NO       FORM      3
LINE_MAX      FORM     "54"

R_PAGE_NO     DIM       5
R_DATE        DIM      10
R_TIME        DIM       8
YES           INIT     "Y"
NO            INIT     "N"

. ...Printing Controls

NORM_10       DIM      29
BOLD_10       DIM      29
NORM_12       DIM      26
BOLD_12       DIM      26
NORM_16       DIM      33
BOLD_16       DIM      33

ESC_CHAR      EQU      27
XCAPE         INIT     ESC_CHAR

PARAM_LIST    LIST
PARAM_XXX     DIM      10
PARAM_YYY     DIM       5
PARAM_DATE    DIM       8
              LISTEND

. ----------------------------
. Begin Program
. ----------------------------

. ----------------------------
. Start here if selected from menu   
. ----------------------------


         CALL      RUN_NOW

         CHAIN     C_NEXT

. ----------------------------
. Start here if called by the Scheduler    
. ----------------------------

         INC       SCHED_NP.SR              Scheduler routines (w/o printer)

RUN_NOW
. ...Check return stack
    RETCOUNT  ORIG_RETURN
. ----------------------------
. Fill top of screen
. ----------------------------

. ...Screen Display
         DISPLAY   *ES
         MOVE      "MENU"              TO  C_NEXT
         MOVE      "TERM EGWP FOR NEW PY" TO  C_OPER
         MOVE      "A1610251"           TO  C_PROG
         MOVE      BLANKS              TO  C_LABEL
         MOVE      BLANKS              TO  C_FILE
         MOVE      BLANKS              TO  C_KEYS
         CLOCK     CALENDAR            INTO  CAL_CLOCK
         
         CALL X_BLANK_SCREEN

. ----------------------------
. Set Applicable Traps
. ----------------------------
         
. ...Set Applicable Traps
         TRAPSAVE  TRAP_DATA
         TRAPCLR   ALL
         TRAP      QUIT   NORESET  IF F9
	
. ----------------------------
. Get scheduler information
. ----------------------------

         CALL     SCHED_PICK

         IF (RUN_MODE = "B" OR RUN_MODE = "N")
            CALL      MAIN_PROCESS
         ENDIF
         RETURN

. ----------------------------
. Main Process
. ----------------------------

MAIN_PROCESS
    DEBUG
    CALL INITIALIZE
    CALL GET_PLANYR
    CALL REFORMAT_MEME
    CALL OPEN_FILES
    CALL PROCESS_FILE
....Close Files
    CALL      CLOSE_FILES 
    CALL      X_DISPLAY_COUNTS
    TRAPREST  TRAP_DATA
    MOVE      SCH_RTSUCC  TO  SCH@RTCODE
    RETURN                                                   

.
.Needed so we can see if coverage is eff in new plan year
. ----------------------------
GET_PLANYR
        UNPACK TODAY INTO CURR_CCYY,CURR_MM,CURR_DD
...Adding 1 to year if program is run in the second half of the year (next AE) 
        ADD 1 TO CURR_CCYY GIVING NEW_CCYY   

        PACK PLANYR_BEG WITH NEW_CCYY,"0101"    
        PACK PLANYR_END WITH NEW_CCYY,"1231"

    RETURN
. ----------------------------
. End of Main Process
. ----------------------------

PROCESS_FILE
 LOOP
    MOVE OGB_SEQ1 TO OGB_SEQ
    CALL READ_OGBFILE USING MEME_REF_FD,MEME_REF_NAME,MEME_REF_LIST        
      IF (RESULT <> 1)
         BREAK 
      ENDIF
    ADD 1 TO X_CNT1
    UNPACK X_CNT1 INTO CNT_4,CNT_3
    IF (CNT_3 = "000")
       CALL X_DISPLAY_COUNTS
    ENDIF
    PACK MEM_FK11 WITH MEME_REF_ID1,BLANKS
    CALL  FILE_READ USING MEM_FD:  ...FILE DECLARATION LIST
        	           MEM_FN:  ...FILE NAME LIST  
		           MEM_FC:  ...TYPE OF INDEX   
.	  		             ...(I)NDEX OR (A)IMDEX
		           MEM_FV:  ...FILE KEY VARLISTS
		           MEM_FK:  ...FILE KEY SIZES  
		           MEM_LIST:...FILE RECORD (FIELD LIST)
		           MEM_REC: ...FILE RECORD (PACKED)
		           MEM_OLD: ...FILE SAVED WHEN READ
		           MEM_QTY: ...NUMBER OF FILES 
			   1	     ...FILE NUMBER FOR THIS READ

    IF (RESULT <> 1)
       CONTINUE
    ENDIF
    CALL READ_MEME
    IF (SQUEEZE MEME_SAV <> "")                             
         CALL WRITE_MEMMEM
    ENDIF
 REPEAT
 RETURN

WRITE_MEMMEM
  DEBUG
  CLEAR INM_REC
  PACKLEN INM_REC WITH MEM_REC,MEME_SAV
  UNPACK INM_REC INTO INM_LIST
  CALL DATE_CALC USING PLANYR_BEG,"SUB","DAYS",1,INME_TRM
  CLEAR INM_CHGBY
  CLEAR INME_NEWBY
  CLEAR INME_CHGBY
  CALL WRITE_OGBREC USING MEME_O_FD,MEME_O_NAME,INM_LIST
  CLEAR INM_LIST
  RETURN
.
READ_MEME
    CLEAR W_TRM
    CLEAR MEME_SAV
    PACK MEME_FK11 WITH MEM_ID1,BLANKS
    CALL  FILE_READ USING MEME_FD:  ...FILE DECLARATION LIST
        	           MEME_FN:  ...FILE NAME LIST  
		           MEME_FC:  ...TYPE OF INDEX   
.	  		             ...(I)NDEX OR (A)IMDEX
		           MEME_FV:  ...FILE KEY VARLISTS
		           MEME_FK:  ...FILE KEY SIZES  
		           MEME_LIST:...FILE RECORD (FIELD LIST)
		           MEME_REC: ...FILE RECORD (PACKED)
		           MEME_OLD: ...FILE SAVED WHEN READ
		           MEME_QTY: ...NUMBER OF FILES 
			   1	     ...FILE NUMBER FOR THIS READ
    LOOP 
          CALL  FILE_NEXT USING MEME_FD:  ...FILE DECLARATION LIST
                                   MEME_FN:  ...FILE NAME LIST
                                   MEME_FC:  ...TYPE OF INDEX
.                                            ...(I)NDEX OR (A)IMDEX
                                   MEME_FV:  ...FILE KEY VARLISTS
                                   MEME_FK:  ...FILE KEY SIZES
                                   MEME_LIST:...FILE RECORD (FIELD LIST)
                                   MEME_REC: ...FILE RECORD (PACKED)
                                   MEME_OLD: ...FILE SAVED WHEN READ
                                   MEME_QTY: ...NUMBER OF FILES
                                   1         ...FILE NUMBER FOR THIS READ
            IF ((MEME_ID1 <> MEM_ID1) OR (RESULT <> 1))
                  BREAK
            ENDIF
            IF (SQUEEZE MEME_NET <> "EGWP"))
               CONTINUE
            ENDIF
            IF (SQUEEZE MEME_TRM <> "")
               IF (MEME_TRM < MEME_EFF)
                 CONTINUE
               ENDIF
            ENDIF         
            IF (SQUEEZE MEME_TRM = "")
               FILL "9" IN W_TRM
            ELSE
               MOVE MEME_TRM TO W_TRM
            ENDIF
            IF (W_TRM < PLANYR_BEG)
              CONTINUE
            ENDIF
            PACKLEN MEME_SAV WITH MEME_LIST
    REPEAT
    RETURN
.

.
. ----------------------------
. Operator pressed F9
. ----------------------------
REFORMAT_MEME
    MOVE BLANKS TO SCRATCH
    PACK SCRATCH WITH "meme.dbf /w/a1610251_ref.txt":
                      " -p112-116eq#"",VANTA,"#"":
                      " -p96-103eq#"",PLANYR_BEG,"#"":
                      " or ":
                      " -p112-116eq#"",PPLSH,"#"":
                      " -p96-103eq#"",PLANYR_BEG,"#"":
                      " or ":
                      " -p112-116eq#"",ONEXC,"#"":
                      " -p96-103eq#"",PLANYR_BEG,"#"":
                      " 1-8 -t -j"
    REFORMAT SCRATCH
    IF OVER
      IF (NOT C_CMDPAR)
        ERROR HORZ="15",VERT="19":
              BGCOL=C_ERRB,FGCOL=C_ERRF:
              LNCOL=C_ERRL,SHADE="Y":
              TEXT="REFORMAT FAILED(a1610251_ref.txt)"
        CHAIN "MENU"
      ELSE
        IF (C_CMDPAR)
            CALL CMD_ERROR USING "a1610251_ref.txt"
            STOP
        ENDIF
      ENDIF
    ENDIF
    SORT "/w/a1610251_ref.txt /w/a1610251_ref.txt 1-8 -u -t"
         IF OVER
               ERROR     HORZ="15",VERT="19":
                         BGCOL=C_ERRB,FGCOL=C_ERRF:
                         LNCOL=C_ERRL,SHADE="Y":
                         TEXT="SORT FAILED(a1610251_ref)"
               CHAIN     "MENU"
         ENDIF

    RETURN

QUIT
         IF (C_RMODE = "I")
            error     horz="23",vert="19":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" Process Aborted by Operator ":
                      text="-----------------------------"
            messageerase
         ENDIF

         CLEAR     C_NOHIST

         TRAPREST  TRAP_DATA

         IF (RUN_MODE = "B")
            LOOP
               RETCOUNT  CURR_RETURN
               WHILE     (CURR_RETURN > ORIG_RETURN)
               NORETURN
            REPEAT
            MOVE      SCH_RTABRT  TO  SCH@RTCODE
            RETURN
         ENDIF
         CHAIN     "MENU"

INITIALIZE
         DISPLAY *P1:9,*ES
         CALL X_BLANK_SCREEN
         CLOCK     TIMESTAMP   INTO  TIMESTAMP
         CLOCK     TIMESTAMP   INTO  CURRDATE
         CLOCK     TIMESTAMP     TO  TODAY

. ...Display Counters
	 MOVE      "Recs Read:     " TO X_CNTDESC1
	 MOVE      "Recs Written:     " TO X_CNTDESC2

	 CALL      X_DISPLAY_COUNTS
         RETURN
.
OPEN_FILES
         CALL      OPEN_OGBFILE USING MEME_REF_FD,MEME_REF_NAME
         CALL      PREP_OGBFILE USING MEME_O_FD,MEME_O_NAME 
         RETURN

CLOSE_FILES
         RETURN

    INC       PRINT.SR
    INC       UTIL.SR      
    INC       VALID.IO
    INC       X_STANDARD.SR
    INC       FILE.IO

. ----------------------------
. Program Specific Includes
. ----------------------------

              INC       X_OGBFILE.IO
              INC       CMDPARAM.SR
. +++++++++++++++++++++++++++++++++++++
. /End of A1610251.PS
. +++++++++++++++++++++++++++++++++++++
