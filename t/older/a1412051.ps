+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+    Program name   :  a1412051.ps
+    Description    :  Current COBRA members
+
+    apeks 12/05/2014 a1412051 DEV - Initial Version. 
+..............................REVISIONS.......................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

              INC       COMMON.CB            ...Common work area
              INC       X_OGBFILE.CB
              INC       PRT.RL               ...Printer Definition File
              INC       MEM.RL               ...Member Demographics
              INC       MEME.RL              ...Member Eligibility
              INC       VALID.RL             ...Valid codes
              INC       ZIPCODE.RL           ...Zipcodes   
              INC       CMDPARAM.CB          ...Command line variables

. --------------------------------------------------------------------------
.
ORIG_RETURN   FORM      5
CURR_RETURN   FORM      5

TRAP_DATA     DIM       500
CAL_CLOCK     DIM       21
TIMESTAMP     DIM       14
FROM_DATE     DIM       8
THRU_DATE     DIM       8
WORK_COUNT    DIM       8
FRONT         DIM       5
BACK          DIM       3

DIM2          DIM       2
DIM3          DIM       3
DIM_3         DIM       3
DIM4          DIM       4
DIM5          DIM       5
DIM6          DIM       6
DIM7          DIM       7
DIM8          DIM       8
DIM9          DIM       9
DIM_9         DIM       9
DIM10         DIM       10
DIM12         DIM       12
DIM13         DIM       13
DIMTWO        DIM       2

FORM1         FORM      1
FORM2         FORM      2
FORM3         FORM      3
FORM4         FORM      4
FORM_2        FORM      2
FORMTWO       FORM      2

READ_COUNT    FORM      8
WRITE_COUNT   FORM      8
ERROR_COUNT   FORM      8

. Program specific working fields

CURRDATE      DIM       8
SLASH         INIT      "/"

HLD_ENR       DIM       8   
HLD_TRM       DIM       8   
GRT_EFF       DIM       8   
HLD_EFF       DIM       8   
HLD_REL       DIM       2
HLD_REAS      DIM       1
HLD_DEPC      DIM       2
HLD_NET       DIM       5
HLD_PRD       DIM       5
HLD_PLN       DIM       4
HLD_COV       DIM       2
HLD_ACCU      DIM       8
HLD_RT        DIM       2
HLD_ESSN      DIM       9
HLD_LNAME     DIM       20
HLD_FNAME     DIM       15

DATE_RSLT     DIM       2

WS_ERR        DIM       1

WS_CCYY       DIM       4   .> ccyy
WS_CC         DIM       2   .> cc  
WS_YY         DIM       2   .> yy  
WS_MM         DIM       2   .> mm  
WS_DD         DIM       2   .> dd

CONT_EFF      DIM       8

..INPUT FILES
WRK_FILE      FILE      VAR=8,TEXT
WRK_NAME      INIT      "/w/a1412051.wrk"
WRK_LIST      LIST
WRK_MEM       DIM       8  
              LISTEND

..OUTPUT FILES
OUT_FILE      FILE      VAR=650,TEXT
OUT_NAME      INIT      "/w/cobra_continuants_enr.csv"
OUT_LIST      LIST
OUT_SSN       DIM       9
OUT_CM1       INIT      ","
OUT_OGB       INIT      "Office of Group Benefits State of Louisiana"
OUT_CM2       INIT      ","
OUT_DIV       DIM       5 
OUT_CM3       INIT      ","
OUT_FNM       DIM       15
OUT_CM4       INIT      ","
OUT_MID       DIM       1 
OUT_CM5       INIT      ","
OUT_LNM       DIM       20
OUT_CM6       INIT      ","
OUT_MEM       DIM       8 
OUT_CM7       INIT      ","
OUT_EML       DIM       30
OUT_CM8       INIT      ","
OUT_HPH       DIM       10
OUT_CM9       INIT      ","
OUT_AD1       DIM       35
OUT_C10       INIT      ","
OUT_AD2       DIM       35
OUT_C11       INIT      ","
OUT_CTY       DIM       30
OUT_C12       INIT      ","
OUT_STA       DIM       2
OUT_C13       INIT      ","
OUT_ZIP       DIM       13
OUT_C14       INIT      ","
OUT_SEX       DIM       1 
OUT_C15       INIT      ","
OUT_DOB       DIM       10
OUT_C16       INIT      ","
OUT_FIL       INIT      "N" 
OUT_C17       INIT      ","
OUT_RSN       DIM       15
OUT_C18       INIT      ","
OUT_TRM       DIM       10
OUT_C19       INIT      ","
OUT_ENR       DIM       10
OUT_C20       INIT      ","
OUT_ESN       DIM       9
OUT_C21       INIT      ","
OUT_ENM       DIM       40
OUT_C22       INIT      ","
OUT_PLN       DIM       50
OUT_C23       INIT      ","
OUT_BND       DIM       5
OUT_C24       INIT      ","
OUT_EFF       DIM       10
OUT_C25       INIT      ","
OUT_COV       DIM       20
OUT_C26       INIT      ","
OUT_PDD       DIM       10
              LISTEND

DEP_FILE      FILE      VAR=450,TEXT
DEP_NAME      INIT      "/w/cobra_continuants_dep.csv"
DEP_LIST      LIST
DEP_ESSN      DIM       9
DEP_CM1       INIT      ","
DEP_PSSN      DIM       9
DEP_CM2       INIT      ","
DEP_REL       DIM       10
DEP_CM3       INIT      ","
DEP_FST       DIM       15
DEP_CM4       INIT      ","
DEP_MID       DIM       1
DEP_CM5       INIT      ","
DEP_LST       DIM       20
DEP_CM6       INIT      ","
DEP_SAME      INIT      "Y"
DEP_CM7       INIT      ","
DEP_SEX       DIM       1
DEP_CM8       INIT      ","
DEP_DOB       DIM       10
DEP_CM9       INIT      ","
DEP_PLN       DIM       50
              LISTEND

SNT_FILE      IFILE     VAR=8,TEXT,KEYL=8
SNT_NAME      INIT      "/w/a1412051_sent.ix1"
SNT_LIST      LIST
SNT_MEM       DIM       8
              LISTEND


.Header Records

HDR_LIST      LIST
HDR_SSN       INIT      "QBSSN"
HDR_CM1       INIT      ","
HDR_CLI       INIT      "ClientName"
HDR_CM2       INIT      ","
HDR_CDV       INIT      "ClientDivisionName"
HDR_CM3       INIT      ","
HDR_FNM       INIT      "FirstName"
HDR_CM4       INIT      ","
HDR_MID       INIT      "MiddleInitial"
HDR_CM5       INIT      ","
HDR_LNM       INIT      "LastName"
HDR_CM6       INIT      ","
HDR_MEM       INIT      "IndividualID"
HDR_CM7       INIT      ","
HDR_EML       INIT      "Email"
HDR_CM8       INIT      ","
HDR_HPH       INIT      "Phone"
HDR_CM9       INIT      ","
HDR_AD1       INIT      "Address1"
HDR_C10       INIT      ","
HDR_AD2       INIT      "Address2"
HDR_C11       INIT      ","
HDR_CTY       INIT      "City"
HDR_C12       INIT      ","
HDR_STA       INIT      "State"
HDR_C13       INIT      ","
HDR_ZIP       INIT      "Zip"
HDR_C14       INIT      ","
HDR_SEX       INIT      "Sex"
HDR_C15       INIT      ","
HDR_DOB       INIT      "DOB"
HDR_C16       INIT      ","
HDR_HCTC      INIT      "UsesHCTC"
HDR_C17       INIT      ","
HDR_ETYP      INIT      "EventType"
HDR_C18       INIT      ","
HDR_EDTE      INIT      "EventDate"
HDR_C19       INIT      ","
HDR_OENR      INIT      "Original Enrollment Date"
HDR_C20       INIT      ","
HDR_ESSN      INIT      "EmployeeSSN"
HDR_C21       INIT      ","
HDR_ENME      INIT      "EmployeeName"
HDR_C22       INIT      ","
HDR_PLAN      INIT      "PlanName"
HDR_C23       INIT      ","
HDR_BUND      INIT      "Bundle Name"
HDR_C24       INIT      ","
HDR_START     INIT      "StartDate"
HDR_C25       INIT      ","
HDR_COV       INIT      "CoverageLevel"
HDR_C26       INIT      ","
HDR_PDT       INIT      "PaidThroughDate"
              LISTEND

HDD_LIST      LIST
HDD_SSN       INIT      "QBSSN"
HDD_CM1       INIT      ","
HDD_PSSN      INIT      "DepSSN"
HDD_CM2       INIT      ","
HDD_REL       INIT      "Relationship"
HDD_CM3       INIT      ","
HDD_FNM       INIT      "DepFirstName"
HDD_CM4       INIT      ","
HDD_MID       INIT      "MiddleInitial"
HDD_CM5       INIT      ","
HDD_LNM       INIT      "DepLastName"
HDD_CM6       INIT      ","
HDD_SAM       INIT      "DepAddressSameAsQB"
HDD_CM7       INIT      ","
HDD_SEX       INIT      "DepGender"
HDD_CM8       INIT      ","
HDD_DOB       INIT      "DepDOB"
HDD_CM9       INIT      ","
HDD_PLN       INIT      "DepPlan"
              LISTEND


. -------------------------------------------------------------
.   Scheduler Fields
. -------------------------------------------------------------

PARAM_LIST    LIST      WITH NAMES
PARAM_FILE    DIM       12
PARAM_FROM    DIM       8
PARAM_THRU    DIM       8
              LISTEND

. -------------------------------------------------------------
.   Control Variables
. -------------------------------------------------------------

PRINT@DETAIL  DIM       @

MCS@DECL      FILE      @
MCS@IDECL     IFILE     @
MCS@FILE      DIM       @
MCS@FILE2     DIM       @
MCS@LIST      LIST      @
MCS@OPTS      DIM       @

MCS@DIM1      DIM       @
MCS@DIM2      DIM       @

MCS@FORM1     FORM      @
MCS@FORM2     FORM      @

.RUN_CLIPCALC    EXTERNAL

. -----------------
.   Begin Program
         CALL      RUN_NOW

         CHAIN     C_NEXT

         INC       SCHED_NP.SR              Scheduler routines (with printer)

. -----------------------------------------
.   Start here if called by the Scheduler
. -----------------------------------------
RUN_NOW

         RETCOUNT  ORIG_RETURN

. ----------------------
.   Fill top of screen
. ----------------------

         IF (C_CMDPAR)
            CALL CMD_START USING "a1412051"
         ENDIF

         MOVE      "MENU"               TO  C_NEXT
         MOVE      "Continuing COBRA LISTING" TO  C_OPER
         MOVE      "a1412051"           TO  C_PROG

         MOVE      BLANKS             TO  C_LABEL
         MOVE      BLANKS             TO  C_FILE
         MOVE      BLANKS             TO  C_KEYS

         CLOCK     CALENDAR         INTO  CAL_CLOCK
         LOADMOD   "clipcalc"

. --------------------------------------------------------------------------------
.   1-Help  2-Srch  3-Prev  4-Next  5-New   6-Serv  7-Code  8-Note  9-Quit 10-More
. --------------------------------------------------------------------------------

         DISPLAY   *RESETSW,*BGCOLOR=C_MANB,*FGCOLOR=C_MANF,*ES:
                   *BGCOLOR=C_DATB,*COLOR=C_DATF:
                   *P1:2,*RPTCHAR *HLN:80,*+:
                   *P3:2,"<",CAL_CLOCK,">":
                   *P29:2,"<",C_OPER,">":
                   *P54:2,"<",C_PROG,">":
                   *P66:2,"<REPORT>":
                   *P01:1,*BGCOLOR=C_F01B,*COLOR=C_F01F,"        ":
                   *P09:1,*BGCOLOR=C_F02B,*COLOR=C_F02F,"        ":
                   *P17:1,*BGCOLOR=C_F03B,*COLOR=C_F03F,"        ":
                   *P25:1,*BGCOLOR=C_F04B,*COLOR=C_F04F,"        ":
                   *P33:1,*BGCOLOR=C_F05B,*COLOR=C_F05F,"        ":
                   *P41:1,*BGCOLOR=C_F06B,*COLOR=C_F06F,"        ":
                   *P49:1,*BGCOLOR=C_F07B,*COLOR=C_F07F,"        ":
                   *P57:1,*BGCOLOR=C_F08B,*COLOR=C_F08F,"        ":
                   *P65:1,*BGCOLOR=C_F09B,*COLOR=C_F09F," 9-Quit ":
                   *P73:1,*BGCOLOR=C_F10B,*COLOR=C_F10F,"        ":
                   *BGCOLOR=C_DLGB,*COLOR=C_DLGF

. ------------------------
.   Set applicable traps
. ------------------------

         TRAPSAVE  TRAP_DATA

         TRAPCLR   ALL

         TRAP      QUIT   NORESET  IF F9

         CLOCK     TIMESTAMP INTO PARAM_FROM

         RETURN    IF (SQUEEZE PARAM_FROM = "")

. -----------------------------
.   Get scheduler information
. -----------------------------

         CALL      SCHED_PICK

         IF (RUN_MODE = "B" OR RUN_MODE = "N")
            CALL      MAIN_PROCESS
         ENDIF

         RETURN

. -----------------------------------
.   Main Process
. -----------------------------------
MAIN_PROCESS

         CALL      INITIALIZE    
         CALL      PROCESS_FILE
         CALL      NEOJ

         TRAPREST  TRAP_DATA

         IF (NOT C_CMDPAR)
            MOVE      SCH_RTSUCC  TO  SCH@RTCODE
         ENDIF

         RETURN

. -----------------------------------
.  Prepare for extract
. -----------------------------------
INITIALIZE

         CLOCK     TIMESTAMP   INTO  TIMESTAMP
         CLOCK     TIMESTAMP   INTO  CURRDATE

         MOVE      0           TO  READ_COUNT
         MOVE      0           TO  WRITE_COUNT

         IF (C_RMODE = "I" AND NOT C_CMDPAR)
            message   horz="26",vert="18":
                      bgcol=C_DLGB,fgcol=C_DLGF:
                      lncol=C_DLGL,shade="Y":
                      text=" -Records Processed- ":
                      text=" Records In          ":
                      text=" Records Out         " 
         ENDIF

. Reformat MEME
         CLEAR SCRATCH
. Current Records where:
. Member is enrolled in COBRA
         PACK DIM2 WITH BLANKS
         PACK SCRATCH WITH "meme.dbf ",WRK_NAME," 1-8 -j -t":
                           " -p104-111ge20150101":
                           " -p21-24=5000",BLANKS          .CliCode1  

         REFORMAT SCRATCH                   

         PACK SCRATCH WITH WRK_NAME," ",WRK_NAME," 1-8 -j -u -t",BLANKS 
         SORT SCRATCH

         CALL      OPEN_OGBFILE USING WRK_FILE,WRK_NAME
         CALL      PREP_OGBFILE USING OUT_FILE,OUT_NAME
         CALL      PREP_OGBFILE USING DEP_FILE,DEP_NAME
         CALL      PREP_OGBFILE_IX USING SNT_FILE,SNT_NAME

         MOVE      OGB_SEQ1 TO OGB_SEQ
         CALL      WRITE_OGBREC USING OUT_FILE,OUT_NAME,HDR_LIST
         CALL      WRITE_OGBREC USING DEP_FILE,OUT_NAME,HDD_LIST

         RETURN

. -----------------------------------
. Read through MEM File
. -----------------------------------
PROCESS_FILE

             debug
         LOOP
            MOVE      OGB_SEQ1 TO OGB_SEQ
            CALL      READ_OGBFILE USING WRK_FILE,WRK_NAME,WRK_LIST  
            IF        (RESULT <> 1) 
                      BREAK 
            ENDIF

            ADD       1 TO READ_COUNT
            MOVE      READ_COUNT TO WORK_COUNT
            UNPACK    WORK_COUNT INTO FRONT,BACK
            IF (BACK = "000")
               IF (C_RMODE = "I" AND NOT C_CMDPAR)
                  DISPLAY   *P41:20,READ_COUNT
               ENDIF
            ENDIF

            CLEAR WS_ERR

.           debug
            CALL READ_MEM            
            CONTINUE IF (SQUEEZE WS_ERR <> "")

.           debug
            CALL GET_MEME

PROCESS_FILE_CONT
         REPEAT

         RETURN

. ---------------------------------
.   Get Member Record     
. ---------------------------------

READ_MEM 

         PACK      MEM_FK11 WITH WRK_MEM,BLANKS
         CALL      FILE_READ USING MEM_FD:    ...FILE DECLARATION LIST
                       MEM_FN:          ...FILE NAME LIST
                       MEM_FC:          ...(I)NDEX OR (A)IMDEX
                       MEM_FV:          ...FILE KEY VARLISTS
                       MEM_FK:          ...FILE KEY SIZES
                       MEM_LIST:        ...FILE RECORD (FIELD LIST)
                       MEM_REC:         ...FILE RECORD (PACKED)
                       MEM_OLD:         ...FILE SAVED WHEN READ
                       MEM_QTY:         ...NUMBER OF FILES
                       1                ...FILE NUMBER FOR THIS READ
         IF (RESULT <> 1)
            PACK WS_ERR WITH "1"
            RETURN
         ENDIF

         IF (MEM_US02 < "20150101")
            PACK WS_ERR WITH "2"
         ENDIF  

         PACK HLD_REL WITH MEM_REL,BLANKS 
         PACK HLD_ESSN WITH MEM_ESSN,BLANKS 
         PACK HLD_FNAME WITH MEM_FNAME,BLANKS 
         PACK HLD_LNAME WITH MEM_LNAME,BLANKS 

         RETURN

. ------------------------------------------------------------------
.  Get MEME records
. ------------------------------------------------------------------

GET_MEME

         CLEAR HLD_ENR
         CLEAR GRT_EFF
         CLEAR HLD_EFF
         CLEAR HLD_TRM
         CLEAR HLD_REAS
         CLEAR HLD_DEPC
         CLEAR HLD_NET 
         CLEAR HLD_PRD
         CLEAR HLD_PLN

         CLEAR MEME_FK11
         PACK      MEME_FK11 WITH WRK_MEM,BLANKS
         CALL      FILE_READ USING MEME_FD:    ...FILE DECLARATION LIST
                       MEME_FN:          ...FILE NAME LIST
                       MEME_FC:          ...(I)NDEX OR (A)IMDEX
                       MEME_FV:          ...FILE KEY VARLISTS
                       MEME_FK:          ...FILE KEY SIZES
                       MEME_LIST:        ...FILE RECORD (FIELD LIST)
                       MEME_REC:         ...FILE RECORD (PACKED)
                       MEME_OLD:         ...FILE SAVED WHEN READ
                       MEME_QTY:         ...NUMBER OF FILES
                       1                 ...FILE NUMBER FOR THIS READ

         LOOP
            CALL      FILE_NEXT USING MEME_FD:
                                      MEME_FN:  ...FILE NAME LIST
                                      MEME_FC:  ...(I)NDEX OR (A)IMDEX
                                      MEME_FV:     ...FILE KEY VARLISTS
                                      MEME_FK:     ...FILE KEY SIZES
                                      MEME_LIST:   ...FILE RECORD (FIELD LIST)
                                      MEME_REC:    ...FILE RECORD (PACKED)
                                      MEME_OLD:    ...FILE SAVED WHEN READ
                                      MEME_QTY:    ...NUMBER OF FILES
                                      1            ...FILE NUMBER FOR THIS READ

             IF (WRK_MEM <> MEME_ID1)
                GOTO GET_MEME_END
             ENDIF

. Need current and future records
. Skip voided records
             CONTINUE IF (SQUEEZE MEME_TRM <> "" AND MEME_TRM < MEME_EFF)
. Skip non-health records,DHH plans
             CONTINUE IF (SQUEEZE MEME_NET = "LIFE")
             CONTINUE IF (SQUEEZE MEME_NET = "EGWP")
             CONTINUE IF (SQUEEZE MEME_NET = "NOCOV")
             CONTINUE IF (SQUEEZE MEME_NET = "DHH")
             CONTINUE IF (SQUEEZE MEME_PLAN = "HRA1")
             CONTINUE IF (SQUEEZE MEME_PRD = "HSA")

. Capture term reason before COBRA
.            debug
             IF (SQUEEZE MEME_LEV1 <> "5000")
                IF (MEME_TRM > HLD_TRM)
                   PACK HLD_TRM WITH MEME_TRM
                   PACK HLD_REAS WITH MEME_TLET,BLANKS
                   IF (HLD_TRM > HLD_EFF)
                      CLEAR HLD_EFF
                   ENDIF
                ENDIF 
                IF (SQUEEZE HLD_ENR = "")
                   PACK HLD_ENR WITH MEME_EFF
                ELSE
                   IF (MEME_EFF < HLD_ENR)
                      PACK HLD_ENR WITH MEME_EFF
                   ENDIF
                ENDIF 
             ENDIF

.            debug
             IF (SQUEEZE MEME_LEV1 = "5000")         
                IF (MEME_EFF > GRT_EFF)
                   PACK GRT_EFF WITH MEME_EFF,BLANKS  
                   PACK HLD_DEPC WITH MEME_DEPC,BLANKS
                   PACK HLD_NET WITH MEME_NET,BLANKS 
                   PACK HLD_PRD WITH MEME_PRD,BLANKS 
                   PACK HLD_PLN WITH MEME_PLAN,BLANKS
                   PACK HLD_RT  WITH MEME_RT,BLANKS
                ENDIF
                IF (MEME_EFF > HLD_TRM)
                   IF (SQUEEZE HLD_EFF = "")
                      PACK HLD_EFF WITH MEME_EFF
                   ENDIF
                   IF (MEME_EFF < HLD_EFF)
                      PACK HLD_EFF WITH MEME_EFF
                   ENDIF
                ENDIF
             ENDIF

. Skip termed record prior to 12/31/14
             CONTINUE IF (SQUEEZE MEME_TRM <> "" AND MEME_TRM <= "20141231")
. Change to get 3/1/2015 records/empty SNT_FILE
                CONTINUE IF (MEME_EFF >= "20150301")
.               CONTINUE IF (MEME_EFF < "20150301")

............ Commented out the write to the SENT file until after the record
............ is actually written. Program was skipping records.  --APLLS    
............    
             CALL READ_OGBFILE_IX USING SNT_FILE,SNT_NAME,WRK_MEM,SNT_LIST
             IF (RESULT = 1)
                CONTINUE
.            ELSE
.               PACK SNT_MEM WITH WRK_MEM,BLANKS
.               CALL WRITE_OGBREC_IX USING SNT_FILE,SNT_NAME,WRK_MEM,SNT_LIST
             ENDIF

             IF (HLD_REL = "01" AND SQUEEZE HLD_EFF <> "")
                CALL WRITE_ENR
             ELSE
                CALL WRITE_DEP
             ENDIF

         REPEAT
        
GET_MEME_END
         RETURN

. -----------------------
. Output update record
. -----------------------

WRITE_ENR

         PACK OUT_MEM WITH WRK_MEM,BLANKS
         PACK OUT_SSN WITH MEM_ESSN,BLANKS
         PACK OUT_FNM WITH MEM_FNAME,BLANKS
         REPLACE ", " IN OUT_FNM
         PACK OUT_LNM WITH MEM_LNAME,BLANKS
         REPLACE ", " IN OUT_LNM
         PACK OUT_MID WITH MEM_MINIT,BLANKS
         PACK OUT_AD1 WITH MEM_ADDR1,BLANKS 
         REPLACE ", " IN OUT_AD1
         PACK OUT_AD2 WITH MEM_ADDR2,BLANKS 
         REPLACE ", " IN OUT_AD2
         PACK OUT_CTY WITH MEM_CITY,BLANKS
         REPLACE ", " IN OUT_CTY
         PACK OUT_STA WITH MEM_STATE,BLANKS
         REPLACE ", " IN OUT_STA
         PACK OUT_ZIP WITH MEM_ZIP,BLANKS
         REPLACE ", " IN OUT_ZIP
         PACK OUT_HPH WITH MEM_HPHN,BLANKS
         REPLACE ", " IN OUT_HPH
         PACK OUT_DIV WITH BLANKS
         PACK OUT_SEX WITH MEM_SEX,BLANKS
         UNPACK MEM_DOB INTO WS_CCYY,WS_MM,WS_DD
         PACK OUT_DOB WITH WS_MM,SLASH,WS_DD,SLASH,WS_CCYY,BLANKS
.translate reasons
         PACK OUT_RSN WITH HLD_REAS,BLANKS
.        debug
         IF (SQUEEZE HLD_REAS = "" AND SQUEEZE MEM_ACCU <> "")
            PACK HLD_ACCU WITH MEM_ACCU,BLANKS 
            CALL FIND_REASON
         ENDIF

         SWITCH HLD_REAS
                CASE "T"
                     PACK OUT_RSN WITH "Termination",BLANKS
                CASE "E"
                     PACK OUT_RSN WITH "Death",BLANKS
                CASE "D"
                     PACK OUT_RSN WITH "Divorce",BLANKS
                     CALL READ_FOR_EX_INFO
                CASE "O"
                     PACK OUT_RSN WITH "LossofElgibility",BLANKS
                DEFAULT
                     PACK OUT_RSN WITH "Termination",BLANKS
         ENDSWITCH

.        IF (MEME_RT = "CD" AND SQUEEZE OUT_RSN = "Termination")
         IF (HLD_RT = "CD" AND SQUEEZE OUT_RSN = "Termination")
            PACK OUT_RSN WITH "Disability",BLANKS
         ENDIF

         UNPACK HLD_ENR INTO WS_CCYY,WS_MM,WS_DD
         PACK OUT_ENR WITH WS_MM,SLASH,WS_DD,SLASH,WS_CCYY,BLANKS
         
         UNPACK HLD_TRM INTO WS_CCYY,WS_MM,WS_DD
         PACK OUT_TRM WITH WS_MM,SLASH,WS_DD,SLASH,WS_CCYY,BLANKS
         
         PACK OUT_ESN WITH MEM_ESSN
         PACK OUT_ENM WITH (CHOP MEM_FNAME)," ",MEM_LNAME,BLANKS

         PACK OUT_BND WITH BLANKS
         UNPACK HLD_EFF INTO WS_CCYY,WS_MM,WS_DD
         PACK OUT_EFF WITH WS_MM,SLASH,WS_DD,SLASH,WS_CCYY,BLANKS
. translate coverage levels
         PACK OUT_COV WITH BLANKS
         SWITCH HLD_DEPC
                CASE "EE"
                     PACK OUT_COV WITH "EE Only",BLANKS
                CASE "EC"
                     PACK OUT_COV WITH "EE+Children",BLANKS
                CASE "ES"
                     PACK OUT_COV WITH "EE+Spouse",BLANKS
                CASE "FM"
                     PACK OUT_COV WITH "EE+Family",BLANKS
         ENDSWITCH

         CALL DATE_CALC USING MEM_US02,"SUB","DAYS",1,OUT_PDD
.        PACK OUT_PDD WITH "12/31/2014",BLANKS 

         CALL FIND_PLANS USING OUT_PLN,OUT_FILE,OUT_NAME,OUT_LIST

 
         RETURN

. -----------------------------------------
. write dependent record
. -----------------------------------------

WRITE_DEP

         PACK DEP_ESSN WITH MEM_ESSN,BLANKS
         PACK DEP_PSSN WITH MEM_PSSN,BLANKS 
         IF (HLD_REL = "02")
            PACK DEP_REL WITH "Spouse",BLANKS
         ELSE
            PACK DEP_REL WITH "Child",BLANKS
         ENDIF
         PACK DEP_FST WITH MEM_FNAME,BLANKS
         PACK DEP_MID WITH MEM_MINIT,BLANKS 
         PACK DEP_LST WITH MEM_LNAME,BLANKS
         PACK DEP_SEX WITH MEM_SEX,BLANKS
         UNPACK MEM_DOB INTO WS_CCYY,WS_MM,WS_DD
         PACK DEP_DOB WITH WS_MM,SLASH,WS_DD,SLASH,WS_CCYY,BLANKS

         CALL FIND_PLANS USING DEP_PLN,DEP_FILE,DEP_NAME,DEP_LIST

        RETURN

. -----------------------------------------
. Find COBRA reason on shared accum record
. -----------------------------------------

FIND_REASON

         PACK MEME_FK11 WITH MEM_ACCU,BLANKS
         CALL      FILE_READ USING MEME_FD:    ...FILE DECLARATION LIST
                       MEME_FN:          ...FILE NAME LIST
                       MEME_FC:          ...(I)NDEX OR (A)IMDEX
                       MEME_FV:          ...FILE KEY VARLISTS
                       MEME_FK:          ...FILE KEY SIZES
                       MEME_LIST:        ...FILE RECORD (FIELD LIST)
                       MEME_REC:         ...FILE RECORD (PACKED)
                       MEME_OLD:         ...FILE SAVED WHEN READ
                       MEME_QTY:         ...NUMBER OF FILES
                       1                 ...FILE NUMBER FOR THIS READ

.next meme
         LOOP
            CALL      FILE_NEXT USING MEME_FD:
                                      MEME_FN:  ...FILE NAME LIST
                                      MEME_FC:  ...(I)NDEX OR (A)IMDEX
                                      MEME_FV:     ...FILE KEY VARLISTS
                                      MEME_FK:     ...FILE KEY SIZES
                                      MEME_LIST:   ...FILE RECORD (FIELD LIST)
                                      MEME_REC:    ...FILE RECORD (PACKED)
                                      MEME_OLD:    ...FILE SAVED WHEN READ
                                      MEME_QTY:    ...NUMBER OF FILES
                                      1            ...FILE NUMBER FOR THIS READ

             IF (HLD_ACCU <> MEME_ID1)
                GOTO GET_MEME_END
             ENDIF

. Need current and future records
. Skip voided records
             CONTINUE IF (SQUEEZE MEME_TRM <> "" AND MEME_TRM < MEME_EFF)
. Skip non-health records,DHH plans
             CONTINUE IF (SQUEEZE MEME_NET = "LIFE")
             CONTINUE IF (SQUEEZE MEME_NET = "EGWP")
             CONTINUE IF (SQUEEZE MEME_NET = "NOCOV")
             CONTINUE IF (SQUEEZE MEME_NET = "DHH")
             CONTINUE IF (SQUEEZE MEME_PLAN = "HRA1")
             CONTINUE IF (SQUEEZE MEME_PRD = "HSA")

. Capture term reason before COBRA
             IF (SQUEEZE MEME_LEV1 <> "5000")
                IF (MEME_TRM > HLD_TRM)
                   PACK HLD_TRM WITH MEME_TRM
                   PACK HLD_REAS WITH MEME_TLET,BLANKS
                   IF (HLD_TRM > HLD_EFF)
                      CLEAR HLD_EFF
                   ENDIF
                ENDIF 
                IF (SQUEEZE HLD_ENR = "")
                   PACK HLD_ENR WITH MEME_EFF
                ELSE
                   IF (MEME_EFF < HLD_ENR)
                      PACK HLD_ENR WITH MEME_EFF
                   ENDIF
                ENDIF 
             ENDIF

         REPEAT
                 
         RETURN

. -----------------------
. Translate plan codes
. -----------------------

FIND_PLANS ROUTINE MCS@DIM1,MCS@DECL,MCS@FILE,MCS@LIST

. translate medical plan names
         IF (SQUEEZE HLD_NET = "VANTA")
            PACK MCS@DIM1 WITH "Vantage Medical Home Plan",BLANKS
            CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
            RETURN
         ENDIF  

.Blue Cross medical/Medimpact RX
         IF (SQUEEZE HLD_NET = "BLUE")
            IF (SQUEEZE MEME_PRD = "CDHP" OR SQUEEZE MEME_PLAN = "HSA")
               PACK MCS@DIM1 WITH "BCBS Medical Pelican HSA 775",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
.no medimpact
            ENDIF
            IF (SQUEEZE HLD_PRD = "ASO")
               PACK MCS@DIM1 WITH "BCBS Medical Magnolia Local Plus HMO",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
               PACK MCS@DIM1 WITH "MedImpact Rx Commercial HMO",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
            ENDIF
            IF (SQUEEZE HLD_PLN = "PLUS")
               PACK MCS@DIM1 WITH "BCBS Medical Magnolia Local Plus HMO",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
               PACK MCS@DIM1 WITH "MedImpact Rx Magnolia Local Plus",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
            ENDIF
            IF (SQUEEZE HLD_PRD = "PPO")
               PACK MCS@DIM1 WITH "BCBS Medical Magnolia Open Access PPO",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
               PACK MCS@DIM1 WITH "MedImpact Rx Commercial PPO",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
            ENDIF
            IF (SQUEEZE HLD_PLN = "OPEN")
               PACK MCS@DIM1 WITH "BCBS Medical Magnolia Open Access PPO",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
               PACK MCS@DIM1 WITH "MedImpact Rx Magnolia Open Access",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
            ENDIF
            IF (SQUEEZE HLD_PLN = "HRA")
               PACK MCS@DIM1 WITH "BCBS Medical Pelican HRA 1000",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
               PACK MCS@DIM1 WITH "MedImpact Rx Pelican HRA 1000",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
            ENDIF
            IF (SQUEEZE HLD_PLN = "LOCL")
               MOVE     MEM_ZIP TO ZIP_KEY1
               CALL      ZIP_READ1
               IF (RESULT = 1)
                  REPLACE MAKEUPPER IN ZIP_COUNTY
               ENDIF
               IF (SQUEEZE ZIP_COUNTY = "ORLEANS" OR SQUEEZE ZIP_COUNTY = "JEFFERSON")
                  PACK MCS@DIM1 WITH "BCBS Medical Magnolia Local HMO New Orleans",BLANKS
               ELSE
                  PACK MCS@DIM1 WITH "BCBS Medical Magnolia Local HMO Baton Rouge",BLANKS
               ENDIF  
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
               PACK MCS@DIM1 WITH "MedImpact Rx Magnolia Local",BLANKS
               CALL WRITE_OGBREC USING MCS@DECL,MCS@FILE,MCS@LIST
            ENDIF

........... Put in the write to the sent file when the record has written to 
........... the continuant file.  --APLLS
...........
            CALL READ_OGBFILE_IX USING SNT_FILE,SNT_NAME,WRK_MEM,SNT_LIST
            IF (RESULT = 2)
               PACK SNT_MEM WITH WRK_MEM,BLANKS
               CALL WRITE_OGBREC_IX USING SNT_FILE,SNT_NAME,WRK_MEM,SNT_LIST
            ENDIF

         ENDIF

         RETURN       

. -------------------------------------------------------
.   Get Plan Member's Record when Term Reason is Divorce    
. -------------------------------------------------------

READ_FOR_EX_INFO

         PACK      MEM_FK11 WITH HLD_ACCU,BLANKS
         CALL      FILE_READ USING MEM_FD:    ...FILE DECLARATION LIST
                       MEM_FN:          ...FILE NAME LIST
                       MEM_FC:          ...(I)NDEX OR (A)IMDEX
                       MEM_FV:          ...FILE KEY VARLISTS
                       MEM_FK:          ...FILE KEY SIZES
                       MEM_LIST:        ...FILE RECORD (FIELD LIST)
                       MEM_REC:         ...FILE RECORD (PACKED)
                       MEM_OLD:         ...FILE SAVED WHEN READ
                       MEM_QTY:         ...NUMBER OF FILES
                       1                ...FILE NUMBER FOR THIS READ

         IF (RESULT = 1)
            PACK      HLD_ESSN  WITH MEM_ESSN
            PACK      HLD_FNAME WITH MEM_FNAME
            PACK      HLD_LNAME WITH MEM_LNAME
            CLEAR     MEM_AIM
            PACK      MEM_AIM1 WITH "01X",HLD_ESSN,BLANKS
            PACK      MEM_AIM3 WITH "03X","01",BLANKS
            CALL      FILE_READ USING MEM_FD:    ...FILE DECLARATION LIST
                            MEM_FN:          ...FILE NAME LIST
                            MEM_FC:          ...(I)NDEX OR (A)IMDEX
                            MEM_FV:          ...FILE KEY VARLISTS
                            MEM_AIM:         ...FILE KEY SIZES
                            MEM_LIST:        ...FILE RECORD (FIELD LIST)
                            MEM_REC:         ...FILE RECORD (PACKED)
                            MEM_OLD:         ...FILE SAVED WHEN READ
                            MEM_QTY:         ...NUMBER OF FILES
                            2                ...FILE NUMBER FOR THIS READ

            IF (RESULT <> 1)
               MOVE   HLD_ESSN  TO MEM_ESSN
               MOVE   HLD_FNAME TO MEM_FNAME
               MOVE   HLD_LNAME TO MEM_LNAME
            ENDIF

         ENDIF

         RETURN

. -----------------------
.   Normal End of Job  
. -----------------------
NEOJ
         IF (C_RMODE = "I" AND NOT C_CMDPAR)
            DISPLAY   *P41:20,READ_COUNT
            DISPLAY   *P41:21,WRITE_COUNT
            error     horz="22",vert="09":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" a1412051 Complete ":
                      text="-------------------"
         ENDIF

         IF (C_CMDPAR)
            CALL CMD_END
            STOP
         ENDIF

         RETURN

. -----------------------
.   Operator pressed F9
. -----------------------
QUIT
         IF (C_RMODE = "I")
            error     horz="23",vert="19":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" Process Aborted by Operator ":
                      text="-----------------------------"
            messageerase
         ENDIF

         CLEAR     C_NOHIST

         TRAPREST  TRAP_DATA

         IF (RUN_MODE = "B")
            LOOP
               RETCOUNT  CURR_RETURN
               WHILE     (CURR_RETURN > ORIG_RETURN)
               NORETURN
            REPEAT
            MOVE      SCH_RTABRT  TO  SCH@RTCODE
            RETURN
         ENDIF
         CHAIN     C_NEXT

. ----------------------------------
.   Subroutines and other includes
. ----------------------------------

         INC       UTIL.SR
         INC       JULIAN.EX
         INC       FILE.IO
         INC       VALID.IO
         INC       CMDPARAM.SR
         INC       X_OGBFILE.IO
         INC       ZIPCODE.IO

