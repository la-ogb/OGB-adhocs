++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+    File name      :  a0601101.ps    
+    Description    :  Medicare-D Credible Coverage Extract to count the 
+                      Number of Members with Ranked Med-A or Med-B
+                      (extracts label info but all we need are the counts)
+ 
+    Author         :  Amy Poole
+    Project #      :  A0601101 -- Created from ADM0100.PS
+    Date created   :  01/10/2006
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+                             Revisions
+ apajp 01/11/2006 a0601101 - COR - Verified switch still needs to be checked
+                                   for ranked MEDA/MEDB.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.
              INC       COMMON.CB
              INC       X_COMMON.CB
              INC       X_OGBFILE.CB
              INC       VALID.RL

.----------------------------------------------------------------------------
.Program Specific Includes
.----------------------------------------------------------------------------
              INC       MEM.RL                Member Demographics File
              INC       MEME.RL          
              INC       MEMO.RL          

.----------------------------------------------------------------------------
.Output File Declaration   
.----------------------------------------------------------------------------

ACTLAB_FILE     FILE      VAR=29,TEXT      
ACTLAB_NAME     INIT	     "x_meme.actlab"
 	    	 
LABELS_FILE     FILE      VAR=151,TEXT
LABELS_NAME     INIT      "medd_label.txt"
 	    	 
.----------------------------------------------------------------------------
.Output File Lists                                 
.----------------------------------------------------------------------------

ACTLAB_LIST     LIST	   
ACTLAB_KEY1     DIM       8
ACTLAB_EFF      DIM       8
ACTLAB_TRM      DIM       8
ACTLAB_NET      DIM       5
         LISTEND

LABEL_LIST      LIST
LABEL_LNAME     DIM       20        .001-020
LABEL_FNAME     DIM       15        .021-035
LABEL_MINIT     DIM       1         .036-036
LABEL_ADDRESS1  DIM       35        .037-071          
LABEL_ADDRESS2  DIM       35        .072-106           
LABEL_CITY      DIM       30        .107-136                    
LABEL_STATE     DIM       2         .137-138       
LABEL_ZIP       DIM       13        .139-151     
                LISTEND

.----------------------------------------------------------------------------
.Program Specific Variables & Working Storage
.----------------------------------------------------------------------------

EXTDATE         DIM       8
DISP3           DIM       3
DISP4           DIM       4
ACT_RESULT      FORM      1 
MEM_RESULT      FORM      1 
MEME_RESULT     FORM      1 
MEMO_RESULT     FORM      1 
VAL_RESULT      FORM      1 
LABEL_SRTKEY    INIT      "139-143 1-36 -T -U"
LPTR            FORM      2
WRK_DIM1        DIM       1
WRK_DIM4        DIM       4
DATE1           DIM       8
TIMESTAMP       DIM       14
CURRDATE        DIM       8
SPACES          DIM       8
WS_MEME_ID1     DIM       8
WS_MEME_ID2     DIM       4
PREV_MEME_ID1   DIM       8
PREV_MEME_PRD   DIM       5
PREV_MEME_PLAN  DIM       4
VALID_HEALTH_CODE  DIM    1        
TRAP_DATA       DIM       500
CAL_CLOCK       DIM       21
ORIG_RETURN     FORM      5
CURR_RETURN     FORM      5
TODAY           DIM       8
VALID_DATE      DIM       1          
YN_ANS          DIM       1          
BLANK8          INIT      "        "
SPACE1          INIT      " "
SPACE30         DIM       30 
LIFE            INIT      "LIFE "
MEDD_ELG        FORM      1
HOLD_ESSN       DIM       9
HOLD_LNAME      DIM       20        .>enrollee last name
HOLD_FNAME      DIM       15        .>enrollee first name
HOLD_MINIT      DIM       1         .>enrollee middle initial 
HOLD_ADDR1      DIM       35        .>address line 1           
HOLD_ADDR2      DIM       35        .>address line 2           
HOLD_CITY       DIM       30        .>city                     
HOLD_STATE      DIM       2         .>state        
HOLD_ZIP        DIM       13        .>zip code     

CMDLAB          INIT    "cp /ogb/work/label.txt /ogb/work/ftp/label.txt"

. ...Report Fields

. ...Printing Controls

PARAM_LIST    LIST
PARAM_XXX     DIM      10
PARAM_YYY     DIM       5
PARAM_DATE    DIM       8
              LISTEND

. ----------------------------
. Standard report headings
. ----------------------------

. ----------------------------
. Begin Program
. ----------------------------

. ----------------------------
. Start here if selected from menu   
. ----------------------------

         CALL      RUN_NOW

         CHAIN     C_NEXT

. ----------------------------
. Start here if called by the Scheduler    
. ----------------------------

         INC       SCHED_NP.SR              Scheduler routines (W/O printer)

RUN_NOW

. ...Check return stack
         RETCOUNT  ORIG_RETURN

. ----------------------------
. Fill top of screen
. ----------------------------

. ...Screen Display
.        MOVE      "MENU"              TO  C_NEXT
         MOVE      "Medicare-D Label Extract" TO  C_OPER
         MOVE      "a0601101"           TO  C_PROG
         MOVE      BLANKS              TO  C_LABEL
         MOVE      BLANKS              TO  C_FILE
         MOVE      BLANKS              TO  C_KEYS
         CLOCK     CALENDAR            INTO  CAL_CLOCK
         
         CALL X_BLANK_SCREEN

. ----------------------------
. Set Applicable Traps
. ----------------------------
         
. ...Set Applicable Traps
         TRAPSAVE  TRAP_DATA
         TRAPCLR   ALL
         TRAP      QUIT   NORESET  IF F9
	
. ----------------------------
. Get scheduler information
. ----------------------------

         MOVE "N" TO RUN_MODE
         CALL     SCHED_PICK

         IF (RUN_MODE = "B" OR RUN_MODE = "N")
            CALL      MAIN_PROCESS
         ENDIF
         RETURN

+++++++++++++++++<BEGIN MAIN PROCESS>++++++++++++++++++++++++++++++++++++++++

. ----------------------------
. Main Process
. ----------------------------

MAIN_PROCESS
         debug
         CALL      INITIALIZE
         CALL      REFORMAT_MEME
         CALL      OPEN_FILES 
       	 CALL      EXT_LABEL_FILES 
         CALL      SORT_OUTPUT 
         CALL      DISPLAY_LABEL_COUNT      
         CALL      CLOSE_FILES

. ...Normal End-Of-Job
         CALL      NORMAL_EOJ
	 
. ...Return Control Back to Chain - End of Program	 
         TRAPREST  TRAP_DATA
         MOVE      SCH_RTSUCC  TO  SCH@RTCODE
         RETURN                                   
                         
+++++++++++++++++++<END OF MAIN PROCESS>+++++++++++++++++++++++++++++++++++++

. ----------------------------
. Initialize
. ----------------------------
INITIALIZE
         CLOCK     TIMESTAMP   INTO  TIMESTAMP
         CLOCK     TIMESTAMP   INTO  CURRDATE
         CLOCK     TIMESTAMP     TO  TODAY

. ...Display Counters
       	 MOVE      "Records Read:    " TO X_CNTDESC1
       	 MOVE      "Records Found:   " TO X_CNTDESC2
       	 MOVE      "" TO X_CNTDESC3
       	 MOVE      "LABELS GENERATED:" TO X_CNTDESC4
       	 MOVE      "" TO X_CNTDESC5
       	 MOVE      "" TO X_CNTDESC6
	 
       	 CALL      X_DISPLAY_COUNTS

. ...Prompt for Extract Effective Date
         MOVE      TODAY TO EXTDATE
         DIALOG    HORZ="24",VERT="17":
                   BGCOL=C_DLGB,FGCOL=C_DLGF:
                   LNCOL=C_DLGL,SHADE="Y":
                   TEXT="Enter Extract Effecive Date (yyyymmdd):  ":
                   FIELD=EXTDATE

         RETURN


.-------------------------------
. Reformat MEME file for Members
. currently active with non_Definity
. Health
.-------------------------------
REFORMAT_MEME
         MESSAGE HORZ="22",VERT="20":
            BGCOL=C_DLGB,FGCOL=C_DLGF:
            LNCOL=C_DLGL,SHADE="y": 
            TEXT="REFORMATTING FILE ... PLEASE WAIT";
    
. ...Layout
. ...096-103 Effective Date
. ...104-111 Term Date
. ...112-116 Network
         MOVE BLANKS TO SCRATCH
         PACK SCRATCH WITH "meme.dbf /ogb/work/x_meme.actlab": 
                      " -p112-116ne#"LIFE#"":
                      " -p112-116ne#"DEFIN#"":
                      " -p96-103le#"",EXTDATE,"#"": 
                      " -p104-111eq#"",BLANK8,"#"":
                      " or":
                      " -p112-116ne#"LIFE#"":
                      " -p112-116ne#"DEFIN#"":
                      " -p96-103le#"",EXTDATE,"#"": 
                      " -p104-111ge#"",EXTDATE,"#"":
                      " 1-8 96-103 104-116 -t -j"

         REFORMAT SCRATCH
         IF OVER
             ERROR HORZ="15",VERT="19":
             BGCOL=C_ERRB,FGCOL=C_ERRF:
             LNCOL=C_ERRL,SHADE="Y":
             TEXT="REFORMAT FAILED(meme.dbf)"
             CHAIN "MENU"
         ENDIF
 
. ...Unique Sort (Eliminate duplicate enrollment records for 95's)
         SORT "/ogb/work/x_meme.actlab /ogb/work/x_meme.actlab":
              " 1-8 -u -t"
         IF OVER
               ERROR     HORZ="15",VERT="19":
                         BGCOL=C_ERRB,FGCOL=C_ERRF:
                         LNCOL=C_ERRL,SHADE="Y":
                         TEXT="SORT FAILED(x_meme.actlab)"
               CHAIN     "MENU"
         ENDIF

         MESSAGE HORZ="22",VERT="20":
                 BGCOL=C_DLGB,FGCOL=C_DLGF:
                 LNCOL=C_DLGL,SHADE="y": 
                 TEXT="******* REFORMAT COMPLETE *******";
 
         RETURN   


. ----------------------------
. Open Files
. ----------------------------
OPEN_FILES
         PACK      OGB_NAME WITH OGB_PATH,ACTLAB_NAME
       	 MOVE      ACTLAB_NAME TO C_FILE
	        CALL  	   OPEN_OGBFILE USING ACTLAB_FILE,OGB_NAME

         PACK      OGB_NAME WITH OGB_PATH,LABELS_NAME
       	 MOVE      LABELS_NAME TO C_FILE
	        CALL 	    PREP_OGBFILE USING LABELS_FILE,OGB_NAME  

         RETURN


. ----------------------------
. Extract Label Information
. ----------------------------
EXT_LABEL_FILES

         LOOP
            MOVE OGB_SEQ1 TO OGB_SEQ
            CALL READ_OGBFILE USING ACTLAB_FILE,ACTLAB_NAME,ACTLAB_LIST
            MOVE RESULT TO ACT_RESULT
            IF (ACT_RESULT <> 1)
                BREAK   
            ENDIF

            ADD 1 TO X_CNT1
            UNPACK X_CNT1 INTO DISP4,DISP3
            IF (DISP3 = "000")
                CALL X_DISPLAY_COUNTS
            ENDIF

            PACK MEM_FK11 WITH ACTLAB_KEY1
            CALL FILE_READ USING MEM_FD:  ...FILE DECLARATION LIST
	 	                              MEM_FN:  ...FILE NAME LIST  
		                               MEM_FC:  ...TYPE OF INDEX   
.		                                       ...(I)NDEX OR (A)IMDEX
		                               MEM_FV:  ...FILE KEY VARLISTS
		                               MEM_FK:  ...FILE KEY SIZES  
		                               MEM_LIST:...FILE RECORD (FIELD LIST)
        	                        MEM_REC: ...FILE RECORD (PACKED)
		                               MEM_OLD: ...FILE SAVED WHEN READ
		                               MEM_QTY: ...NUMBER OF FILES 
		                               1        ...FILE NUMBER FOR THIS READ

            MOVE RESULT TO MEM_RESULT
            IF ((ACTLAB_KEY1 <> MEM_ID1) OR (MEM_RESULT <> 1))
                 CONTINUE    
            ENDIF

            CALL CHECK_MEMO               --Returns 'MEDD_ELG'

            IF (MEDD_ELG)

. ...Write out the label information
                MOVE MEM_LNAME TO LABEL_LNAME
                SETLPTR LABEL_LNAME TO 20
                MOVE MEM_FNAME TO LABEL_FNAME
                SETLPTR LABEL_FNAME TO 15
                MOVE MEM_MINIT TO LABEL_MINIT
                MOVE MEM_ADDR1 TO LABEL_ADDRESS1
                SETLPTR LABEL_ADDRESS1 TO 35
                MOVE MEM_ADDR2 TO LABEL_ADDRESS2
                SETLPTR LABEL_ADDRESS2 TO 35
                MOVE MEM_CITY TO LABEL_CITY
                SETLPTR LABEL_CITY TO 30
                MOVE MEM_STATE TO LABEL_STATE
                MOVE MEM_ZIP TO LABEL_ZIP
                SETLPTR LABEL_ZIP TO 13
.
                MOVE      OGB_SEQ1 TO OGB_SEQ
                CALL WRITE_OGBREC USING LABELS_FILE,LABELS_NAME,LABEL_LIST 
                ADD   1  TO X_CNT2
            ENDIF  
         REPEAT  

         RETURN

    
. -----------------------------------------------------------------------
. To qualify as a "Retiress" under  Medicare-D, one needs only to be primary
. with either Part A or Part B. 
.
. The ranked Medicare Part-A record or Medicare Part-B record still needs to be
. verified.  For our purposes, a MEMO record is considered verified if the 
. Verified switch is set to "Y" OR if the Verified switch is set to "N" but
. the MEMO Policy-2 field contains a claim number.  The second case signals
. that we got a Medicare EOB in for a claim so that is enough proof for us
. to consider that member verified.                           
. -----------------------------------------------------------------------
CHECK_MEMO 
         CLEAR     MEDD_ELG
         CLEAR     MEMO_RESULT
         PACK      MEMO_FK11 WITH ACTLAB_KEY1,BLANKS
         CALL      FILE_READ USING MEMO_FD:     ...FILE DECLARATION LIST
                                   MEMO_FN:     ...FILE NAME LIST  
                                   MEMO_FC:     ...TYPE OF INDEX   
.                                               ...(I)NDEX OR (A)IMDEX
                                   MEMO_FV:     ...FILE KEY VARLISTS
                                   MEMO_FK:     ...FILE KEY SIZES  
                                   MEMO_LIST:   ...FILE RECORD (FIELD LIST)
                                   MEMO_REC:    ...FILE RECORD (PACKED)
                                   MEMO_OLD:    ...FILE SAVED WHEN READ
                                   MEMO_QTY:    ...NUMBER OF FILES 
                                   1            ...FILE NUMBER FOR THIS READ
         LOOP
             CALL  FILE_NEXT USING MEMO_FD:     ...FILE DECLARATION LIST
                                   MEMO_FN:     ...FILE NAME LIST  
                                   MEMO_FC:     ...TYPE OF INDEX   
.                                               ...(I)NDEX OR (A)IMDEX
                                   MEMO_FV:     ...FILE KEY VARLISTS
                                   MEMO_FK:     ...FILE KEY SIZES  
                                   MEMO_LIST:   ...FILE RECORD (FIELD LIST)
                                   MEMO_REC:    ...FILE RECORD (PACKED)
                                   MEMO_OLD:    ...FILE SAVED WHEN READ
                                   MEMO_QTY:    ...NUMBER OF FILES 
                                   1            ...FILE NUMBER FOR THIS READ
             MOVE RESULT TO MEMO_RESULT
             IF ((ACTLAB_KEY1 <> MEMO_ID1) OR (MEMO_RESULT <> 1))
                  BREAK           
             ENDIF

             IF (MEMO_TYPE = "MEDA" OR MEMO_TYPE = "MEDB")
                 IF ((MEMO_EFF1 <= EXTDATE AND MEMO_TRM1 >= EXTDATE) OR:
                     (MEMO_EFF1 <= EXTDATE AND (SQUEEZE MEMO_TRM1 = "")))
                     IF (MEMO_RANK >= "1")
                         IF ((MEMO_VER = "Y") OR:
                             (MEMO_VER = "N" AND (SQUEEZE MEMO_POL2 <> "")))
                              SET MEDD_ELG
                              BREAK
                         ELSE
                              CONTINUE
                         ENDIF
                     ELSE
                         CONTINUE
                     ENDIF
                 ELSE
                     CONTINUE
                 ENDIF
             ELSE
                 CONTINUE
             ENDIF

         REPEAT

         RETURN


.............................................................................

. ----------------------------
. Operator pressed F9
. ----------------------------


QUIT
         IF (C_RMODE = "I")
            error     horz="23",vert="19":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" Process Aborted by Operator ":
                      text="-----------------------------"
            messageerase
         ENDIF

         CLEAR     C_NOHIST

         TRAPREST  TRAP_DATA

         IF (RUN_MODE = "B")
            LOOP
               RETCOUNT  CURR_RETURN
               WHILE     (CURR_RETURN > ORIG_RETURN)
               NORETURN
            REPEAT
            MOVE      SCH_RTABRT  TO  SCH@RTCODE
            RETURN
         ENDIF
         MOVE  "MENU"      TO  C_NEXT
         CHAIN     C_NEXT


. ----------------------------
. Sort Output by Zip Code
. ----------------------------
SORT_OUTPUT
        MOVE      LABELS_NAME TO C_FILE
        PACK      OGB_NAME WITH OGB_PATH,LABELS_NAME
       	CALL 	    CLOSE_OGBFILE USING LABELS_FILE,OGB_NAME  
        DISPLAY   *BOLDON,*BGCOLOR=*BLACK,*FGCOLOR=*WHITE:
                  *P30:21,"SORTING FILE...",*BOLDOFF
        MOVE      LABEL_SRTKEY TO C_KEYS
        CALL      SORT_OGBFILE USING OGB_NAME,OGB_NAME,LABEL_SRTKEY
        IF OVER
            ERROR   HORZ="15",VERT="19":
                    BGCOL=C_ERRB,FGCOL=C_ERRF:
                    LNCOL=C_ERRL,SHADE="Y":
                    TEXT="SORT FAILED(label.txt)"
            CHAIN   "MENU"
        ENDIF

        RETURN


. -----------------------------
. Count the Output Records again
. since some are eliminated by the
. unique sort.  The Operators must 
. give a count of Labels to Generate 
. so this number is important.
. -----------------------------
DISPLAY_LABEL_COUNT
         MOVE      LABELS_NAME TO C_FILE
         PACK      OGB_NAME WITH OGB_PATH,LABELS_NAME
        	CALL 	    OPEN_OGBFILE USING LABELS_FILE,OGB_NAME  

         LOOP
            MOVE OGB_SEQ1 TO OGB_SEQ
            CALL READ_OGBFILE USING LABELS_FILE,OGB_NAME,LABEL_LIST
            MOVE RESULT TO ACT_RESULT
            IF (ACT_RESULT <> 1)
                BREAK   
            ENDIF

            ADD 1 TO X_CNT4
            UNPACK X_CNT4 INTO DISP4,DISP3
            IF (DISP3 = "000")
                CALL X_DISPLAY_COUNTS
            ENDIF

         REPEAT

         RETURN


. ----------------------------
. Close the MEME Reformat file.
. The Label file was closed before
. it was sorted.
. ----------------------------
CLOSE_FILES
         PACK      OGB_NAME WITH OGB_PATH,ACTLAB_NAME
       	 MOVE      ACTLAB_NAME TO C_FILE
	        CALL  	   CLOSE_OGBFILE USING ACTLAB_FILE,OGB_NAME

         PACK      OGB_NAME WITH OGB_PATH,LABELS_NAME
       	 MOVE      LABELS_NAME TO C_FILE
	        CALL  	   CLOSE_OGBFILE USING LABELS_FILE,OGB_NAME

    RETURN


. ----------------------------
. Normal End-Of-Job Routine
. ----------------------------

NORMAL_EOJ

       	 MOVE      "        NEOJ        " TO X_FINISH_STATUS
	        MOVE      "    A0601101 Completed   " TO X_PROG_FINISH
         CALL      X_END_OF_JOB
         
    RETURN
.----------------------------------------------------------------------------
.Subroutines and other includes
.----------------------------------------------------------------------------
              INC       VALID.IO
              INC       FILE.IO
              INC       X_OGBFILE.IO
              INC       X_STANDARD.SR
              INC       UTIL.SR 

.----------------------------------------------------------------------------
.End of A0601101.PS    
.----------------------------------------------------------------------------
