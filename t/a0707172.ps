+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+    Program name   :  A0707172.PS 
+    Description    :  CUS - UPDATES MEMS FROM ISIS              
+    Author         :  Stephen J. McDonald
+    APSJM A0717172 07/18/2007- INITIAL VERSION                                 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

. ----------------------------
. Required Program Includes
. ----------------------------

              INC       COMMON.CB            ...Common work area
              INC       X_COMMON.CB          ...OGB Common Work Area
              INC       VALID.RL             ...Valid codes
              INC       X_OGBFILE.CB         ...OGB Custom File Handler
              INC       PRT.RL               ...Printer Definition File
              
. ----------------------------
. Program Specific Includes
. ----------------------------
              INC       MEM.RL           ...Member Demographics
              INC       MEME.RL          ...Member Enrollment  
              INC       MEMO.RL          ...Member Other Cov     
              INC       MEMS.RL          ...Member Salary        
              INC       D_MEMMEM.CB      ...IMPACT UPDATE

. ----------------------------
. File Declarations
. ----------------------------
.
ISIS_FD   FILE     VAR=27,TEXT
ISIS_NAME INIT    "/w/salincr_isis.txt"   
ISIS_LIST         LIST
ISIS_SSN          DIM       09
ISIS_SALARY       DIM       10
ISIS_EFFDATE      DIM       08
                  LISTEND

U_SLY_FD      FILE     VAR=3100,TEXT
U_SLY_NAME    INIT    "salincr.txt"      
.
IMP_ERR_FD    FILE    VAR=100,TEXT
IMP_ERR_NAME  INIT    "/w/a0707172.err"
IMP_ERR_LIST  LIST
IMP_ERR_ID1   DIM     8
IMP_ERR_IMDTE DIM     8
IMP_ERR_IMSAL DIM     10
IMP_ERR_ISDTE DIM     8  
IMP_ERR_ISSAL DIM     10
              LISTEND
. ----------------------------
. Program Specific Variables & Working Storage
. ----------------------------
F_ISIS_SAL    FORM      7.2
F_IMP_SAL     FORM      7.2
SAV_MEMS_EFF  DIM       8
WRK_DD        DIM       2
WRK_MM        DIM       2
WRK_CCYY      DIM       4
WRK_DATE      DIM       8
FORM_CCYY     FORM      4
FORM_MM       FORM      2
CNT_4         DIM  4
CNT_3         DIM  3
FIRST_PAGE    DIM       1
FIRST_TIME    DIM       1
WORK_COUNT    DIM       8
FRONT         DIM       5
BACK          DIM       3
TIMESTAMP     DIM       14
CURRDATE      DIM       8
TRAP_DATA     DIM       500
CAL_CLOCK     DIM       21
ORIG_RETURN   FORM      5
CURR_RETURN   FORM      5
TODAY         DIM       8
. ...Report Fields

PAGE_NO       FORM      5
LINE_NO       FORM      3
LINE_MAX      FORM     "54"

R_PAGE_NO     DIM       5
R_DATE        DIM      10
R_TIME        DIM       8
YES           INIT     "Y"
NO            INIT     "N"

. ...Printing Controls

NORM_10       DIM      29
BOLD_10       DIM      29
NORM_12       DIM      26
BOLD_12       DIM      26
NORM_16       DIM      33
BOLD_16       DIM      33

ESC_CHAR      EQU      27
XCAPE         INIT     ESC_CHAR

PARAM_LIST    LIST
PARAM_XXX     DIM      10
PARAM_YYY     DIM       5
PARAM_DATE    DIM       8
              LISTEND

. ----------------------------
. Begin Program
. ----------------------------

. ----------------------------
. Start here if selected from menu   
. ----------------------------


         CALL      RUN_NOW

         CHAIN     C_NEXT

. ----------------------------
. Start here if called by the Scheduler    
. ----------------------------

         INC       SCHED_NP.SR              Scheduler routines (w/o printer)

RUN_NOW
. ...Check return stack
    RETCOUNT  ORIG_RETURN
. ----------------------------
. Fill top of screen
. ----------------------------

. ...Screen Display
         DISPLAY   *ES
         MOVE      "MENU"              TO  C_NEXT
         MOVE      "UPDATE SAL" TO  C_OPER
         MOVE      "A0707172"           TO  C_PROG
         MOVE      BLANKS              TO  C_LABEL
         MOVE      BLANKS              TO  C_FILE
         MOVE      BLANKS              TO  C_KEYS
         CLOCK     CALENDAR            INTO  CAL_CLOCK
         
         CALL X_BLANK_SCREEN

. ----------------------------
. Set Applicable Traps
. ----------------------------
         
. ...Set Applicable Traps
         TRAPSAVE  TRAP_DATA
         TRAPCLR   ALL
         TRAP      QUIT   NORESET  IF F9
	
. ----------------------------
. Get scheduler information
. ----------------------------

         CALL     SCHED_PICK

         IF (RUN_MODE = "B" OR RUN_MODE = "N")
            CALL      MAIN_PROCESS
         ENDIF
         RETURN

. ----------------------------
. Main Process
. ----------------------------

MAIN_PROCESS
    DEBUG
    CALL INITIALIZE
    CALL OPEN_FILES
    CALL PROCESS_ISIS_FILE
....Close Files
    CALL      CLOSE_FILES 
    CALL      X_DISPLAY_COUNTS
    TRAPREST  TRAP_DATA
    MOVE      SCH_RTSUCC  TO  SCH@RTCODE
    RETURN                                                   
. ----------------------------
. End of Main Process
. ----------------------------

PROCESS_ISIS_FILE
 LOOP      
    MOVE OGB_SEQ1 TO OGB_SEQ
    CALL READ_OGBFILE USING ISIS_FD,ISIS_NAME,ISIS_LIST
      IF (RESULT <> 1)
         BREAK 
      ENDIF
    ADD 1 TO X_CNT1
    UNPACK X_CNT1 INTO CNT_4,CNT_3
    CALL X_DISPLAY_COUNTS
    CALL GET_MEMID
    IF (RESULT <> 1)
       CONTINUE
    ENDIF
    CALL GET_LATEST_EFF_DATE
    IF (SQUEEZE MEMS_SAV <> "")
      UNPACK MEMS_SAV INTO MEMS_LIST
      CLEAR F_ISIS_SAL
      MOVE ISIS_SALARY TO F_ISIS_SAL
      CLEAR F_IMP_SAL
      MOVE MEMS_SALR TO F_IMP_SAL
      IF (SAV_MEMS_EFF > ISIS_EFFDATE)
         MOVE MEM_ID1 TO IMP_ERR_ID1
         MOVE MEMS_EFF TO IMP_ERR_IMDTE
         MOVE MEMS_SALR TO IMP_ERR_IMSAL
         MOVE ISIS_EFFDATE TO IMP_ERR_ISDTE
         MOVE F_ISIS_SAL TO IMP_ERR_ISSAL 
         MOVE OGB_SEQ1 TO OGB_SEQ
         CALL WRITE_OGBREC USING IMP_ERR_FD,IMP_ERR_NAME,IMP_ERR_LIST
         CLEAR IMP_ERR_LIST
         CONTINUE
      ELSE
         IF (SAV_MEMS_EFF = ISIS_EFFDATE)
            IF (F_IMP_SAL > F_ISIS_SAL)
               MOVE MEM_ID1 TO IMP_ERR_ID1
               MOVE MEMS_EFF TO IMP_ERR_IMDTE
               MOVE MEMS_SALR TO IMP_ERR_IMSAL
               MOVE ISIS_EFFDATE TO IMP_ERR_ISDTE
               MOVE F_ISIS_SAL TO IMP_ERR_ISSAL 
               MOVE OGB_SEQ1 TO OGB_SEQ
               CALL WRITE_OGBREC USING IMP_ERR_FD,IMP_ERR_NAME,IMP_ERR_LIST
               CLEAR IMP_ERR_LIST
               CONTINUE
            ELSE
               IF (F_IMP_SAL <> F_ISIS_SAL)
                  UNPACK MEMS_SAV INTO MEMS_LIST
                  MOVE F_ISIS_SAL TO MEMS_SALR
                  MOVE ISIS_EFFDATE TO MEMS_EFF
                  CLEAR MEMS_CHGBY
                  PACKLEN MEMS_REC WITH MEMS_LIST
                  CLEAR MEMO_REC
                  CLEAR MEME_REC 
                  PACKLEN INM_REC WITH MEM_REC,MEME_REC,MEMO_REC,MEMS_REC
                  UNPACK INM_REC INTO INM_LIST
                  MOVE OGB_SEQ1 TO OGB_SEQ
                  CALL WRITE_OGBREC USING U_SLY_FD,U_SLY_NAME,INM_LIST
                  CLEAR INM_LIST
                  CONTINUE
               ENDIF
            ENDIF
         ENDIF
      ENDIF 
      IF (F_IMP_SAL <> F_ISIS_SAL)
           IF (SAV_MEMS_EFF < ISIS_EFFDATE) 
              UNPACK MEMS_SAV INTO MEMS_LIST
              CALL DATE_CALC USING ISIS_EFFDATE,"SUB","DAYS",1,MEMS_TRM
              CLEAR MEMS_CHGBY
              PACKLEN MEMS_REC WITH MEMS_LIST
              CLEAR MEMO_REC
              CLEAR MEME_REC 
              PACKLEN INM_REC WITH MEM_REC,MEME_REC,MEMO_REC,MEMS_REC
              UNPACK INM_REC INTO INM_LIST
              MOVE OGB_SEQ1 TO OGB_SEQ
              CALL WRITE_OGBREC USING U_SLY_FD,U_SLY_NAME,INM_LIST
              CLEAR INM_LIST
              MOVE F_ISIS_SAL TO MEMS_SALR
              MOVE ISIS_EFFDATE TO MEMS_EFF
              CLEAR MEMS_TRM
              CLEAR MEMS_NEWBY
              CLEAR MEMS_CHGBY
              CLEAR MEMS_ID1
              CLEAR MEMS_ID2
              PACKLEN MEMS_REC WITH MEMS_LIST
              CLEAR MEMO_REC
              CLEAR MEME_REC
              PACKLEN INM_REC WITH MEM_REC,MEME_REC,MEMO_REC,MEMS_REC
              UNPACK INM_REC INTO INM_LIST
              MOVE OGB_SEQ1 TO OGB_SEQ
              CALL WRITE_OGBREC USING U_SLY_FD,U_SLY_NAME,INM_LIST
           ENDIF
      ENDIF
    ENDIF
 REPEAT
 RETURN

GET_LATEST_EFF_DATE
         CLEAR     SAV_MEMS_EFF
         PACK      MEMS_FK11 WITH MEM_ID1,BLANKS
         CALL      FILE_READ USING MEMS_FD:    ...File declaration list
                             MEMS_FN:          ...File name list
                             MEMS_FC:          ...(I)ndex or (A)imdex
                             MEMS_FV:          ...File key varlists
                             MEMS_FK:          ...File key sizes
                             MEMS_LIST:        ...File record (field list)
                             MEMS_REC:         ...File record (packed)
                             MEMS_OLD:         ...File saved when read
                             MEMS_QTY:         ...Number of files
                             1                 ...File number for this read
            LOOP
                CALL   FILE_NEXT USING MEMS_FD:    ...File declaration list
                               MEMS_FN:          ...File name list
                               MEMS_FC:          ...(I)ndex or (A)imdex
                               MEMS_FV:          ...File key varlists
                               MEMS_FK:          ...File key sizes
                               MEMS_LIST:        ...File record (field list)
                               MEMS_REC:         ...File record (packed)
                               MEMS_OLD:         ...File saved when read
                               MEMS_QTY:         ...Number of files
                               1                 ...File number for this read
                  IF (RESULT <> 1)
                     BREAK
                  ENDIF
                  IF (MEMS_ID1 <> MEM_ID1)
                     BREAK
                  ENDIF 
                  IF ((MEMS_EFF > SAV_MEMS_EFF) OR (SQUEEZE SAV_MEMS_EFF = ""))
                    PACK MEMS_SAV WITH MEMS_LIST
                    MOVE MEMS_EFF TO SAV_MEMS_EFF
                  ENDIF 
            REPEAT
         RETURN

GET_MEMID
        CLEAR     MEM_AIM
        PACK      MEM_AIM1 WITH "01X",ISIS_SSN,BLANKS
        PACK      MEM_AIM3 WITH "03X","01",BLANKS
        CALL      FILE_READ USING MEM_FD:    ...FILE DECLARATION LIST
                            MEM_FN:          ...FILE NAME LIST
                            MEM_FC:          ...(I)NDEX OR (A)IMDEX
                            MEM_FV:          ...FILE KEY VARLISTS
                            MEM_AIM:          ...FILE KEY SIZES
                            MEM_LIST:        ...FILE RECORD (FIELD LIST)
                            MEM_REC:         ...FILE RECORD (PACKED)
                            MEM_OLD:         ...FILE SAVED WHEN READ
                            MEM_QTY:         ...NUMBER OF FILES
                            2                 ...FILE NUMBER FOR THIS READ
        RETURN

. ----------------------------
. Operator pressed F9
. ----------------------------

QUIT
         IF (C_RMODE = "I")
            error     horz="23",vert="19":
                      bgcol=C_ERRB,fgcol=C_ERRF:
                      lncol=C_ERRL,shade="Y":
                      text=" Process Aborted by Operator ":
                      text="-----------------------------"
            messageerase
         ENDIF

         CLEAR     C_NOHIST

         TRAPREST  TRAP_DATA

         IF (RUN_MODE = "B")
            LOOP
               RETCOUNT  CURR_RETURN
               WHILE     (CURR_RETURN > ORIG_RETURN)
               NORETURN
            REPEAT
            MOVE      SCH_RTABRT  TO  SCH@RTCODE
            RETURN
         ENDIF
         CHAIN     "MENU"

INITIALIZE
         DISPLAY *P1:9,*ES
         CALL X_BLANK_SCREEN
         CLOCK     TIMESTAMP   INTO  TIMESTAMP
         CLOCK     TIMESTAMP   INTO  CURRDATE
         CLOCK     TIMESTAMP     TO  TODAY

. ...Display Counters
	 MOVE      "Recs Read:     " TO X_CNTDESC1
	 MOVE      "Recs Written:     " TO X_CNTDESC2

	 CALL      X_DISPLAY_COUNTS
         RETURN
.
OPEN_FILES
         CALL      PREP_OGBFILE USING IMP_ERR_FD,IMP_ERR_NAME  
         CALL      PREP_OGBFILE USING U_SLY_FD,U_SLY_NAME  
         CALL      OPEN_OGBFILE USING ISIS_FD,ISIS_NAME         
         RETURN

CLOSE_FILES
         CALL      CLOSE_OGBFILE USING IMP_ERR_FD,IMP_ERR_NAME  
         CALL      CLOSE_OGBFILE USING U_SLY_FD,U_SLY_NAME  
         CALL      CLOSE_OGBFILE USING ISIS_FD,ISIS_NAME         
         RETURN

    INC       PRINT.SR
    INC       UTIL.SR      
    INC       VALID.IO
    INC       X_STANDARD.SR
    INC       FILE.IO

. ----------------------------
. Program Specific Includes
. ----------------------------

              INC       X_OGBFILE.IO

. +++++++++++++++++++++++++++++++++++++
. /End of A704092.PS
. +++++++++++++++++++++++++++++++++++++
