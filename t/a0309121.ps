+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+   Program        :  A0309121.ps
+   Description    :  Adhoc extract of claim service lines that go with
+                     claim records reformated in disease_mgt.ext.        
+                              
+    Author         : Amy Poole         
+    Date created   : 09/12/2003    
+
+    REVISIONS
+    
+   
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.
              INC       COMMON.CB
              INC       X_COMMON.CB
              INC       VALID.RL
              INC       X_OGBFILE.CB

.----------------------------------------------------------------------------
.Program Specific Includes
.----------------------------------------------------------------------------
              INC       CLMS.RL               Claim Service Lines

.----------------------------------------------------------------------------
.Output File Declaration   
.----------------------------------------------------------------------------
OUTCLMS_FILE     FILE      VAR=850,TEXT
..OUTCLMS_NAME     INIT      "/mcsprd/oracle/clmdet.txt"
OUTCLMS_NAME     INIT      "/mcs/f/clmdet.txt"

.----------------------------------------------------------------------------
.Program Specific Variables & Working Storage
.----------------------------------------------------------------------------

...Work file variables
WORK_FILE     FILE      FIX=117,TEXT
..WORK_NAME     INIT      "/mcsprd/oracle/clmhdr.txt" 
WORK_NAME     INIT      "/mcs/f/clmhdr.txt" 
WORK_LIST     LIST
WORK_ID       DIM       8
WORK_DATA     DIM       109
              LISTEND

POP_REC       LIST      @
POP_KEY       DIM       @
POP_OLD       DIM       @
POP_SW        FORM      @
POP_DECL      IFILE     @
POP_NAME      DIM       @
POP_ID        DIM       @
POP_LINE      DIM       @

TRAP_DATA     DIM       500

PARAM_LIST    LIST
PARAM_FROM    DIM       8
PARAM_THRU    DIM       8 
              LISTEND

WORK_DATEMM   FORM      2
WORK_DATEDD   FORM      2
WORK_DATECCYY FORM      4

ORIG_RETURN   FORM      5
CURR_RETURN   FORM      5
SEQ           FORM      "-1"

CAL_CLOCK     DIM       21
CURRDATE      DIM       8

CNT_4      DIM  4
CNT_3      DIM  3

+ ------------------------------------------------------------------------
+   Begin Program
+ ------------------------------------------------------------------------

START

       CLOCK     TIMESTAMP INTO CURRDATE
       MOVE      "menu"         TO C_NEXT
       MOVE      "A0309121"  TO C_PROG
       MOVE      "CLMS Extract for Disease Mgt" TO C_OPER
       MOVE      1 TO C_LEVEL
       MOVE      BLANKS TO C_LABEL
       MOVE      BLANKS TO C_FILE
       MOVE      BLANKS TO C_KEYS

. ----------------------
.   Fill top of screen
. ----------------------
         CLOCK     CALENDAR             TO  CAL_CLOCK

         DISPLAY   *RESETSW,*BGCOLOR=C_MANB,*FGCOLOR=C_MANF,*ES:
                   *BGCOLOR=C_DATB,*COLOR=C_DATF:
                   *P1:2,*RPTCHAR *HLN:80,*+:
                   *P3:2,"<",CAL_CLOCK,">":
                   *P29:2,"<",C_OPER,">":
                   *P54:2,"<",C_PROG,">":
                   *P66:2,"<REPORT>":
                   *P01:1,*BGCOLOR=C_F01B,*COLOR=C_F01F,"        ":
                   *P09:1,*BGCOLOR=C_F02B,*COLOR=C_F02F,"        ":
                   *P17:1,*BGCOLOR=C_F03B,*COLOR=C_F03F,"        ":
                   *P25:1,*BGCOLOR=C_F04B,*COLOR=C_F04F,"        ":
                   *P33:1,*BGCOLOR=C_F05B,*COLOR=C_F05F,"        ":
                   *P41:1,*BGCOLOR=C_F06B,*COLOR=C_F06F,"        ":
                   *P49:1,*BGCOLOR=C_F07B,*COLOR=C_F07F,"        ":
                   *P57:1,*BGCOLOR=C_F08B,*COLOR=C_F08F,"        ":
                   *P65:1,*BGCOLOR=C_F09B,*COLOR=C_F09F," 9-Quit ":
                   *P73:1,*BGCOLOR=C_F10B,*COLOR=C_F10F,"        ":
                   *BGCOLOR=C_DLGB,*COLOR=C_DLGF

. ----------------------------------
.  Initialize traps
. ----------------------------------
         TRAPCLR   ALL
         TRAP      QUIT NORESET  IF F9

ASK_OPTION

         MOVE      BLANKS TO WCHAR
         dialog    horz="20",vert="08":
                   bgcol=C_DLGB,fgcol=C_DLGF:
                   lncol=C_DLGL,shade="Y":
                   text="This program extracts ":
                   text="claim service lines":
                   text="Ready to go (Y/N): ":
                   field=WCHAR
         GOTO      QUIT IF (WCHAR <> "Y")

. -----------------------
. Ask to schedule or not
. -----------------------
         CALL      SCHED_PICK

         IF (RUN_MODE = "N")
             CALL      RUN_NOW
         ENDIF

         CHAIN C_NEXT

         INC       SCHED_NP.SR              Scheduler routines (no printer)
. -------------------------------
. Run Now
. -------------------------------

RUN_NOW

     DEBUG
         TRAPSAVE  TRAP_DATA
         RETCOUNT  ORIG_RETURN

         CALL INITIAL

         MOVE      SCH_RTSUCC TO SCH@RTCODE

         CALL MAIN_PROCESS

         RETURN

.--------------------
MAIN_PROCESS
    
         CALL BUILD_CLM_FILE
         CALL OPEN_FILES
         CALL SETPOP_CLMS
         CALL PROCESS_CLAIMS
         CALL CLOSE_FILES

         RETURN

.--------------------
.Reformat CLM file to get only claims paid within the period.
.--------------------
BUILD_CLM_FILE


..         DISPLAY   *BOLDON, *BGCOLOR=*BLACK, *FGCOLOR=*WHITE:
..                   *P30:21, "EXTRACTING CLAIMS PAID  ", *BOLDOFF:
..                   *P30:22, "WITHIN SPECIFIED DATE RANGE", *BOLDOFF
..    DEBUG
.. Reformat claim records into work file (only the claim number)
..         PACK      SCRATCH WITH "clm.dbf ",WRK_NAME," -j 1-8 ":
..                                " -p2496-2503ge",PARAM_FROM:
..                                " -p2496-2503le",PARAM_THRU
..         REFORMAT  SCRATCH
..         IF OVER
..            ERROR     HORZ="22",VERT="20":
..                      BGCOL=C_ERRB,FGCOL=C_ERRF:
..                      LNCOL=C_ERRL,SHADE="Y":
..                      TEXT="REFORMAT FAILED(CLM.DBF)"
..            CHAIN     "MENU"
..         ENDIF
..
..   DEBUG 
..        DISPLAY   *BOLDON, *BGCOLOR=*BLACK, *FGCOLOR=*WHITE:
..                   *P30:21, "SORTING FILE PLEASE WAIT", *BOLDOFF:
..                   *P30:22, "                           ", *BOLDOFF
..         PACK     SCRATCH WITH WRK_NAME," ",WRK_NAME:
..                  " 1-8 -u -t"
..         SORT     SCRATCH
..         IF OVER
..            ERROR     HORZ="22",VERT="20":
..                      BGCOL=C_ERRB,FGCOL=C_ERRF:
..                      LNCOL=C_ERRL,SHADE="Y":
..                      TEXT="SORT FAILED"
..            CHAIN     "MENU"
..         ENDIF

         RETURN

.--------------------
OPEN_FILES
   
..Opens the claim file we created 
         MOVE      "FILE_OPEN" TO  C_LABEL
         MOVE      "NONE"      TO  C_KEYS
         MOVE      BLANKS      TO  C_ERROR
         MOVE      WORK_NAME    TO  C_FILE
         CALL      OPEN_OGBFILE USING WORK_FILE,WORK_NAME
    
..Prepares our output file
         PREP      OUTCLMS_FILE,OUTCLMS_NAME
         MOVE      OUTCLMS_NAME TO C_FILE
         CALL      PREP_OGBFILE USING OUTCLMS_FILE,OUTCLMS_NAME

         RETURN

.--------------------
PROCESS_CLAIMS
     
         LOOP
             
            MOVE      "FILE_READ" TO  C_LABEL
            MOVE      "SEQ"       TO  C_KEYS

            READ      WORK_FILE,SEQ;WORK_ID,WORK_DATA
            BREAK IF OVER

            ADD 1 TO X_CNT1
            UNPACK X_CNT1 INTO CNT_4,CNT_3
            IF (CNT_3 = "000")
                CALL X_DISPLAY_COUNTS
            ENDIF 

..Read the clms file by key 11 (claim #) and totals up each line of clm  
               PACK CLMS_BASE WITH WORK_ID,BLANKS
               PACK CLMS_KEY  WITH CLMS_BASE,BLANKS
               CALL POP_READ
               LOOP
                   CALL POP_NEXT
                   WHILE (RESULT = 1)
                   WHILE (CLMS_ID = WORK_ID)

. ...Blank out any PHI
                   PACK CLMS_FROM WITH BLANKS
                   PACK CLMS_THRU WITH BLANKS

                   MOVE "FILE_WRITE" TO C_LABEL
                   WRITE OUTCLMS_FILE,SEQ;CLMS_REC
                   ADD 1 TO X_CNT2 
                   UNPACK X_CNT2 INTO CNT_4,CNT_3 
                   IF (CNT_3 = "000")
                       CALL X_DISPLAY_COUNTS
                   ENDIF

               REPEAT

       REPEAT

         RETURN

. -------------------------------
. Close Files
. -------------------------------
CLOSE_FILES

         CLOSE WORK_FILE
         CLOSE OUTCLMS_FILE

...Normal End of Job

        CALL X_DISPLAY_COUNTS
        TRAPREST  TRAP_DATA
        MOVE      SCH_RTSUCC  TO  SCH@RTCODE

        RETURN

++++++++++++++++++++++++++++<END OF MAIN PROCESS>++++++++++++++++++++++

. ----------------------------
. Operator pressed F9
. ----------------------------

QUIT
       IF (SQUEEZE C_SMODE = "")
           error     horz="25",vert="17":
                     bgcol=C_ERRB,fgcol=C_ERRF:
                     lncol=C_ERRL,shade="Y":
                     text="Operator Pressed":
                     text="   F9 to Exit   "
           messageerase
       ENDIF

       IF (RUN_MODE = "B")
           LOOP
               RETCOUNT  CURR_RETURN
               WHILE (CURR_RETURN > ORIG_RETURN)
               NORETURN
           REPEAT
           RETURN
       ENDIF

       CHAIN     C_NEXT


. -------------------------------
. Initialize program info
. -------------------------------
INITIAL

       CLOCK     TIMESTAMP INTO CURRDATE
       MOVE      "menu"         TO C_NEXT
       MOVE      "a0309121"  TO C_PROG
       MOVE      "DISEASE MGT CLMS EXTRACT" TO C_OPER
       MOVE      1 TO C_LEVEL
       MOVE      BLANKS TO C_LABEL
       MOVE      BLANKS TO C_FILE
       MOVE      BLANKS TO C_KEYS

       MOVE "Clm Recs Read:    " TO X_CNTDESC1
       MOVE "Svc Lines Written " TO X_CNTDESC2
       MOVE "Not Used          " TO X_CNTDESC3
       MOVE "Not Used          " TO X_CNTDESC4
       MOVE "Not Used          " TO X_CNTDESC5
       MOVE "Not Used          " TO X_CNTDESC6

       CALL X_DISPLAY_COUNTS

       RETURN

. -------------------------------
. Set up POP read for CLMS file
. -------------------------------

SETPOP_CLMS
    MOVEADR CLMS_REC  TO POP_REC       ...Set up for POP.IO
    MOVEADR CLMS_SW   TO POP_SW
    MOVEADR CLMS_DECL TO POP_DECL
    MOVEADR CLMS_NAME TO POP_NAME
    MOVEADR CLMS_KEY  TO POP_KEY
    MOVEADR CLMS_OLD  TO POP_OLD
    MOVEADR CLMS_BASE TO POP_ID
    MOVEADR CLMS_LINE TO POP_LINE
    RETURN

. -------------------------------
. Subroutines and other includes
. -------------------------------

       INC       UTIL.SR
       INC       FILE.IO
       INC       VALID.IO
       INC       X_OGBFILE.IO
       INC       X_STANDARD.SR
       INC       POP.IO

.
