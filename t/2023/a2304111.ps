++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ NAME:
+   a2304011.ps
+
+ DESCRIPTION:
+   Generate test data for website mock
+
+ CREATED BY:
+   apjwh - 2023-04-11
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.# =================================================================== #
.# Variable Includes
.# =================================================================== #
    INC VALID.RL
    INC UTIL_COMMON.CB
    INC MEM.RL
    INC MEME.RL
    INC MEMO.RL
    INC MEMS.RL
    INC MEMF.RL

.# =================================================================== #
.# Scheduler Parameters
.# =================================================================== #

PARAM_LIST          LIST WITH NAMES
PARAM_TEST          CHAR    4
PARAM_COUNT         CHAR    5
                    LISTEND

.# =================================================================== #
.# Equates for code clarity
.# =================================================================== #

V_FLAG              EQU     1   ...0 or 1
V_DATE              EQU     8   ...YYYYMMDD
MSG_HEIGHT          EQU     24
REFRESH_RATE        EQU     100

.# =================================================================== #
.# Configuration
.# =================================================================== #

CFG_MAX_FAM         NUM     "02000"
REMOTE_DIR          INIT    "/i/groups/it/apps/staging/website-mock-staging/"

.# =================================================================== #
.# Debugging Configuration
.# =================================================================== #

ENABLE_TEST         NUM     V_FLAG
TEST_CONFIG         LIST
.TODO: add test settings
                    LISTEND

.# =================================================================== #
.# File Declarations
.# =================================================================== #

MEM_ID_FD           FILE    FIXED=8,TEXT
MEM_ID_FILE         INIT    "/w/tmp/a2304011.ids.txt"

DATA_MEM_FD         FILE    FIXED=X_MEM_SIZE,TEXT
DATA_MEM_FILE       INIT    "/w/tmp/test_mem_data.txt"

DATA_MEME_FD        FILE    FIXED=X_MEME_SIZE,TEXT
DATA_MEME_FILE      INIT    "/w/tmp/test_meme_data.txt"

DATA_MEMO_FD        FILE    FIXED=X_MEMO_SIZE,TEXT
DATA_MEMO_FILE      INIT    "/w/tmp/test_memo_data.txt"

DATA_MEMS_FD        FILE    FIXED=X_MEMS_SIZE,TEXT
DATA_MEMS_FILE      INIT    "/w/tmp/test_mems_data.txt"

DATA_MEMF_FD        FILE    FIXED=X_MEMF_SIZE,TEXT
DATA_MEMF_FILE      INIT    "/w/tmp/test_memf_data.txt"

.# =================================================================== #
.# File lists
.# =================================================================== #

ID_LIST             LIST
THIS_ID             CHAR    8
                    LISTEND

.# =================================================================== #
.# Program Variables
.# =================================================================== #

CURRDATE            CHAR    V_DATE
START_DATETIME      CHAR    24
END_DATETIME        CHAR    24

ALL_CRITERIA_MET    NUM     1
CRITERIA_MET        NUM     1

FOUND_LIFE          NUM     1
FOUND_EGWP          NUM     1
HAS_SPOUSE          NUM     1
HAS_DEP             NUM     1
HAS_NON_03_DEP      NUM     1
FOUND_MEMO          NUM     1
FOUND_MEMF          NUM     1
FOUND_MEMS          NUM     1

FAMILIES_READ       NUM     5

DATA_MAX            EQU     999
DATA_MEM            CHAR    X_MEM_SIZE[DATA_MAX]
DATA_MEME           CHAR    X_MEME_SIZE[DATA_MAX]
DATA_MEMO           CHAR    X_MEMO_SIZE[DATA_MAX]
DATA_MEMS           CHAR    X_MEMS_SIZE[DATA_MAX]
DATA_MEMF           CHAR    X_MEMF_SIZE[DATA_MAX]

DATA_MEM_CNT        NUM     5
DATA_MEME_CNT       NUM     5
DATA_MEMO_CNT       NUM     5
DATA_MEMS_CNT       NUM     5
DATA_MEMF_CNT       NUM     5

DATA_LIST           VARLIST DATA_MEM,DATA_MEM_CNT:
                            DATA_MEME,DATA_MEME_CNT:
                            DATA_MEMO,DATA_MEMO_CNT:
                            DATA_MEMF,DATA_MEMF_CNT:
                            DATA_MEMS,DATA_MEMS_CNT:
                            CRITERIA_MET

.# =================================================================== #
.# Begin Program
.# =================================================================== #
.Manual and Autosys
    CALL RUN_NOW
    CHAIN C_NEXT    ...go to next program (usually the Menu)

.Impact Scheduler Hook
    INC SCHED_NP.SR     ...for jobs that don't use the print system


.#######################################################################
RUN_NOW ROUTINE
+ Configure runtime settings

.Save stack size at program start
    RETCOUNT ORIG_RETURN

.Set applicable traps
    TRAPSAVE TRAP_DATA
    TRAPCLR ALL
    TRAP QUIT NORESET IF F9

.Get run date
    CLOCK TIMESTAMP INTO CURRDATE

    MOVE "A2304011" TO C_PROG        ...Program name
    MOVE "GEN TEST 4 MOCK" TO C_OPER  ...Program description
    MOVE "MENU" TO C_NEXT
    MOVE "RUN_NOW" TO C_LABEL
    MOVE BLANKS TO C_FILE
    MOVE BLANKS TO C_KEYS

.Check if the program was called from the command line
    IF (C_CMDPAR)
        CALL CMD_START USING C_PROG
    ELSE
        CALL X_BLANK_SCREEN
    ENDIF

.Configure test options based on file mode. Default is Production
    CALL UTIL_SET_TESTMODE USING PARAM_TEST:  ...scheduler param
                                 ENABLE_TEST:  ...test toggle
                                 TEST_CONFIG  ...test settings list

..Set up run mode or build SCH record
    CALL SCHED_PICK

    SWITCH RUN_MODE
        CASE "N" | "B"
            CALL MAIN_PROCESS
        DEFAULT
    ENDSWITCH

    CALL NORMAL_EOJ

    RETURN
    ENDROUTINE


.#######################################################################
MAIN_PROCESS LROUTINE
+ Core logic
    debug
    CALL INITIALIZE
    CALL GEN_TEST_DATA
    CALL CLEAN_UP

    RETURN
    ENDROUTINE


.#######################################################################
INITIALIZE LROUTINE
+ Setup runtime variables
    CLOCK TIMESTAMP TO CURRDATE
    CLOCK CALENDAR TO START_DATETIME

.Get the files and EDI locations from valid 101
    CALL UTIL_GET_SYS_DIRS_COMMON

    CALL UTIL_INIT_COUNTERS USING "Families Proc":
                                  "Families Written":
                                  "":
                                  "":
                                  "":
                                  ""
    CALL SET_RUN_CONFIG

    RETURN
    ENDROUTINE


.#######################################################################
SET_RUN_CONFIG LROUTINE
+ Configure any runtime settings here

    IF (CHOP PARAM_COUNT > "")
        MOVE (SQUEEZE PARAM_COUNT) TO CFG_MAX_FAM
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
GEN_TEST_DATA LROUTINE

    CALL GET_MEM_IDS
    CALL GET_TEST_FAMILY_DATA

    RETURN
    ENDROUTINE


.#######################################################################
GET_MEM_IDS LROUTINE

    CALL UTIL_XMESSAGE USING "Building MEM id file...",MSG_HEIGHT

    PACK SCRATCH WITH MEM_FNS," ",MEM_ID_FILE," -t 1-8 -p27-28eq01"
    CALL UTIL_DO_REFORMAT USING SCRATCH,"getting 01s"
    
    PACK SCRATCH WITH MEM_ID_FILE," ",MEM_ID_FILE," 1-8 -j -r -t"
    CALL UTIL_DO_SORT USING SCRATCH,"sorting ids"

    MESSAGEERASE

    RETURN
    ENDROUTINE


.#######################################################################
GET_TEST_FAMILY_DATA LROUTINE

    CALL UTIL_XMESSAGE USING "Building family test data...",MSG_HEIGHT
    CALL OPEN_OGBFILE USING MEM_ID_FD,MEM_ID_FILE
    CALL PREP_OGBFILE USING DATA_MEM_FD,DATA_MEM_FILE
    CALL PREP_OGBFILE USING DATA_MEME_FD,DATA_MEME_FILE
    CALL PREP_OGBFILE USING DATA_MEMO_FD,DATA_MEMO_FILE
    CALL PREP_OGBFILE USING DATA_MEMS_FD,DATA_MEMS_FILE
    CALL PREP_OGBFILE USING DATA_MEMF_FD,DATA_MEMF_FILE

    debug
    CLEAR ALL_CRITERIA_MET:
          FAMILIES_READ

    LOOP
        CALL READ_OGBFILE_SEQ USING MEM_ID_FD,MEM_ID_FILE,ID_LIST
        WHILE (RESULT = 1)
        UNTIL (FAMILIES_READ >= CFG_MAX_FAM & ALL_CRITERIA_MET)

        CLEAR DATA_LIST

        CALL UTIL_MEM_FIND_REAL USING THIS_ID
        CONTINUE IF NOT EQUAL
        CONTINUE IF (MEM_REL != "01")

        CALL GATHER_FAM_DATA
        CONTINUE IF (DATA_MEME_CNT < 1)

        CALL CHECK_CRITERIA
        
        IF (FAMILIES_READ <= CFG_MAX_FAM | CRITERIA_MET)
            CALL SAVE_FAM_DATA
            ADD 1 TO FAMILIES_READ
        ENDIF
    REPEAT

    CALL CLOSE_OGBFILE USING MEM_ID_FD,MEM_ID_FILE
    CALL CLOSE_OGBFILE USING DATA_MEM_FD,DATA_MEM_FILE
    CALL CLOSE_OGBFILE USING DATA_MEME_FD,DATA_MEME_FILE
    CALL CLOSE_OGBFILE USING DATA_MEMO_FD,DATA_MEMO_FILE
    CALL CLOSE_OGBFILE USING DATA_MEMS_FD,DATA_MEMS_FILE
    CALL CLOSE_OGBFILE USING DATA_MEMF_FD,DATA_MEMF_FILE
    MESSAGEERASE

    RETURN
    ENDROUTINE


.#######################################################################
CHECK_CRITERIA LROUTINE

    RETURN IF NOT (FOUND_LIFE)
    RETURN IF NOT (FOUND_EGWP)
    RETURN IF NOT (HAS_SPOUSE)
    RETURN IF NOT (HAS_DEP)
    RETURN IF NOT (HAS_NON_03_DEP)
    RETURN IF NOT (FOUND_MEMO)
    RETURN IF NOT (FOUND_MEMF)
    RETURN IF NOT (FOUND_MEMS)

    SET ALL_CRITERIA_MET

    RETURN
    ENDROUTINE


.#######################################################################
SET_CRITERIA LROUTINE FLAG@
FLAG@       NUM     @
...
    IF NOT (FLAG@)
        SET FLAG@
        SET CRITERIA_MET
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
GATHER_FAM_DATA LROUTINE
FIRST       NUM     1
...
    CALL UTIL_XCOUNTER USING X_CNT1,REFRESH_RATE

    CALL UTIL_SAFE_PACK_ARRAY_LIST USING MEM_LIST,DATA_MEM,DATA_MEM_CNT,DATA_MAX
    CALL GET_CHILD_DATA

    SET FIRST
    CLEAR MEM_AIM
    PACK MEM_AIM1 WITH "01X",MEM_ESSN,BLANKS
    LOOP
        IF (FIRST)
            CLEAR FIRST
            CALL UTIL_MEM_AIMFIND_REAL
        ELSE
            CALL UTIL_MEM_AIMNEXT_REAL
        ENDIF
        WHILE EQUAL
        
        SWITCH MEM_REL
            CASE "01"
                CONTINUE
            CASE "02"
                SET HAS_SPOUSE
            CASE "03"
                SET HAS_DEP
            DEFAULT
                SET HAS_NON_03_DEP
        ENDSWITCH

        CONTINUE IF (MEM_REL = "01")


        CALL UTIL_SAFE_PACK_ARRAY_LIST USING MEM_LIST,DATA_MEM,DATA_MEM_CNT,DATA_MAX
        CALL GET_CHILD_DATA
    REPEAT

    RETURN
    ENDROUTINE


.#######################################################################
GET_CHILD_DATA LROUTINE
    CALL GET_MEME
    CALL GET_MEMO
    CALL GET_MEMS
    CALL GET_MEMF

    RETURN
    ENDROUTINE


.#######################################################################
GET_MEME LROUTINE
    CLEAR MEME_LIST
    LOOP
        CALL UTIL_READ_THRU_MEME USING MEM_ID1
        WHILE EQUAL

        IF (CHOP MEME_TRM > "" & MEME_TRM > MEME_EFF)
            IF (CHOP MEME_NET = "LIFE")
                CALL SET_CRITERIA USING FOUND_LIFE
            ENDIF
            IF (CHOP MEME_NET = "EGWP")
                CALL SET_CRITERIA USING FOUND_EGWP
            ENDIF
        ENDIF

        CALL UTIL_SAFE_PACK_ARRAY_LIST USING MEME_LIST,DATA_MEME,DATA_MEME_CNT,DATA_MAX
    REPEAT

    RETURN
    ENDROUTINE


.#######################################################################
GET_MEMO LROUTINE
    CLEAR MEMO_LIST
    LOOP
        CALL UTIL_READ_THRU_MEMO USING MEM_ID1
        WHILE EQUAL

        CALL SET_CRITERIA USING FOUND_MEMO

        CALL UTIL_SAFE_PACK_ARRAY_LIST USING MEMO_LIST,DATA_MEMO,DATA_MEMO_CNT,DATA_MAX
    REPEAT

    RETURN
    ENDROUTINE



.#######################################################################
GET_MEMS LROUTINE
    CLEAR MEMS_LIST
    LOOP
        CALL UTIL_READ_THRU_MEMS USING MEM_ID1
        WHILE EQUAL

        CALL SET_CRITERIA USING FOUND_MEMS

        CALL UTIL_SAFE_PACK_ARRAY_LIST USING MEMS_LIST,DATA_MEMS,DATA_MEMS_CNT,DATA_MAX
    REPEAT

    RETURN
    ENDROUTINE


.#######################################################################
GET_MEMF LROUTINE
    CLEAR MEMF_LIST
    LOOP
        CALL UTIL_READ_THRU_MEMF USING MEM_ID1
        WHILE EQUAL

        CALL SET_CRITERIA USING FOUND_MEMF

        CALL UTIL_SAFE_PACK_ARRAY_LIST USING MEMF_LIST,DATA_MEMF,DATA_MEMF_CNT,DATA_MAX
    REPEAT

    RETURN
    ENDROUTINE


.#######################################################################
SAVE_FAM_DATA LROUTINE

    CALL UTIL_XCOUNTER USING X_CNT2,REFRESH_RATE

    CALL SAVE_DATA USING DATA_MEM_FD,DATA_MEM_FILE,DATA_MEM,DATA_MEM_CNT,MEM_LIST
    CALL SAVE_DATA USING DATA_MEME_FD,DATA_MEME_FILE,DATA_MEME,DATA_MEME_CNT,MEME_LIST
    CALL SAVE_DATA USING DATA_MEMO_FD,DATA_MEMO_FILE,DATA_MEMO,DATA_MEMO_CNT,MEMO_LIST
    CALL SAVE_DATA USING DATA_MEMS_FD,DATA_MEMS_FILE,DATA_MEMS,DATA_MEMS_CNT,MEMS_LIST
    CALL SAVE_DATA USING DATA_MEMF_FD,DATA_MEMF_FILE,DATA_MEMF,DATA_MEMF_CNT,MEMF_LIST

    RETURN
    ENDROUTINE


.#######################################################################
SAVE_DATA LROUTINE FD@,FILE@,DATA@,COUNT@,LIST@
FD@         FILE    @
FILE@       CHAR    @
DATA@       CHAR    @[]
COUNT@      NUM     @
LIST@       LIST    @
IDX         NUM     7
...
    FOR IDX FROM 1 TO COUNT@
        UNPACK DATA@[IDX] INTO LIST@
        CALL WRITE_OGBREC_SEQ USING FD@,FILE@,LIST@
    REPEAT

    CLEAR LIST@,DATA@,COUNT@
    CLEARADR FD@,FILE@,DATA@,COUNT@,LIST@

    RETURN
    ENDROUTINE


.#######################################################################
CLEAN_UP LROUTINE
+ Cleanup work files and handle output files
    CLOCK CALENDAR INTO END_DATETIME

    debug
    CALL UTIL_DELETE_FILE USING MEM_ID_FILE

    CALL HANDLE_OUTPUT USING DATA_MEM_FILE
    CALL HANDLE_OUTPUT USING DATA_MEME_FILE
    CALL HANDLE_OUTPUT USING DATA_MEMO_FILE
    CALL HANDLE_OUTPUT USING DATA_MEMS_FILE
    CALL HANDLE_OUTPUT USING DATA_MEMF_FILE

    RETURN
    ENDROUTINE


.#######################################################################
HANDLE_OUTPUT LROUTINE FILE@
FILE@       CHAR    @
...
    CALL UTIL_FTP_SEND_FILE USING "/w/tmp",REMOTE_DIR,FILE@,"ascii"
    CALL UTIL_DELETE_FILE USING FILE@

    RETURN
    ENDROUTINE


.# =================================================================== #
.# Subroutines Includes
.# =================================================================== #
    INC VALID.IO
    INC UTIL_COMMON.SR
    INC UTIL_VALID.SR
    INC UTIL_TEST.SR
    INC UTIL_SYSTEM.SR
    INC UTIL_DATA.SR
    INC UTIL_EMAIL.SR
    INC UTIL_MEMBERS.SR     .MEM* io routines
    INC UTIL_BILLING.SR     .BIL* io routines
    INC UTIL_CLIENTS.SR     .CLI* io routines
    INC UTIL_FTP.SR

.# =================================================================== #
.# End of Program
.# =================================================================== #
