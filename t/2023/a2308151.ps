++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ NAME:
+   a2308151.ps
+
+ DESCRIPTION:
+   Clean up life rates effective 1/1/24 to remove unecessary riders
+
+ CREATED BY:
+   apjwh - 2023-08-14
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.# =================================================================== #
.# Variable Includes
.# =================================================================== #
    INC VALID.RL
    INC UTIL_COMMON.CB
    INC ART.RL

.# =================================================================== #
.# Scheduler Parameters
.# =================================================================== #

PARAM_LIST          LIST WITH NAMES
PARAM_TEST          CHAR    4
                    LISTEND

.# =================================================================== #
.# Equates for code clarity
.# =================================================================== #

V_FLAG              EQU     1   ...0 or 1
V_DATE              EQU     8   ...YYYYMMDD
MSG_HEIGHT          EQU     24
REFRESH_RATE        EQU     10

.# =================================================================== #
.# Configuration
.# =================================================================== #

EMAIL_TO            INIT    "$ITAPPS"
NEW_EFF             INIT    "20240101"
NEW_TRM             INIT    "20231231"
PROG_ID             INIT    "FXLFRT"

CFG_IGNORE_WAIV     NUM     "1"
CFG_IGNORE_FROZ     NUM     "1"

CFG_ALLOW_UPDATE    NUM     "1"

.# =================================================================== #
.# Debugging Configuration
.# =================================================================== #

ENABLE_TEST         NUM     V_FLAG
TEST_CONFIG         LIST
TEST_SKIP_RF        NUM     "0"
TEST_EMAIL          INIT    "$CURRENT_USER_EMAIL"
TEST_SKIP_UPDATE    NUM     "0"
                    LISTEND

.# =================================================================== #
.# File Declarations
.# =================================================================== #

IN_FD               FILE    FIXED=8,TEXT
IN_FILE             INIT    "/w/tmp/life_rate_cleanup.in"

LOG_FD              FILE    VAR=1000,TEXT
LOG_FILE            INIT    "/w/tmp/life_rate_cleanup_log.csv"

.# =================================================================== #
.# File lists
.# =================================================================== #

IN_LIST             LIST
IN_ID               CHAR    8
                    LISTEND

LOG_LIST            LIST
LOG_REC             CHAR    1000
                    LISTEND

LOG_HEADER          VARLIST "BASE_RATE_ID,":
                            "LOG_TYPE,":
                            "LOG_MESSAGE,":
                            "UPDATE_ID,":
                            "EFF,":
                            "TRM,":
                            "NET,":
                            "PRD,":
                            "PLAN,":
                            "RATE,":
                            "COVLVL,":
                            "AGE_FROM,":
                            "AGE_TO,":
                            "RD1-AMT,RD1-TYPE,RD1-WHO,":
                            "RD2-AMT,RD2-TYPE,RD2-WHO,":
                            "RD3-AMT,RD3-TYPE,RD3-WHO,":
                            "RD4-AMT,RD4-TYPE,RD4-WHO,":
                            "RD5-AMT,RD5-TYPE,RD5-WHO,":
                            "RD6-AMT,RD6-TYPE,RD6-WHO,":
                            "RD7-AMT,RD7-TYPE,RD7-WHO,":
                            "RD8-AMT,RD8-TYPE,RD8-WHO,":
                            "RD9-AMT,RD9-TYPE,RD9-WHO,":
                            "RD10-AMT,RD10-TYPE,RD10-WHO,":
                            "RD11-AMT,RD11-TYPE,RD11-WHO,":
                            "RD12-AMT,RD12-TYPE,RD12-WHO,":
                            "RD13-AMT,RD13-TYPE,RD13-WHO,":
                            "RD14-AMT,RD14-TYPE,RD14-WHO,":
                            "RD15-AMT,RD15-TYPE,RD15-WHO,":
                            "RD16-AMT,RD16-TYPE,RD16-WHO,":
                            "RD17-AMT,RD17-TYPE,RD17-WHO,":
                            "RD18-AMT,RD18-TYPE,RD18-WHO,":
                            "RD19-AMT,RD19-TYPE,RD19-WHO,":
                            "RD20-AMT,RD20-TYPE,RD20-WHO"

.# =================================================================== #
.# Program Variables
.# =================================================================== #

CURRDATE            CHAR    V_DATE
START_DATETIME      CHAR    24
END_DATETIME        CHAR    24

RIDER_MAX           EQU     20
RIDER_DATA          CHAR    18[RIDER_MAX]
RIDER_CNT           NUM     7

RIDER_DETAILS       LIST
RIDER_AMT           CHAR    10
RIDER_TYPE          CHAR    4
RIDER_WHO           CHAR    4
                    LISTEND

CLEANED_RATE        CHAR    X_ART_SIZE
BASE_RATE           CHAR    X_ART_SIZE

.# =================================================================== #
.# Begin Program
.# =================================================================== #
.Manual and Autosys
    CALL RUN_NOW
    CHAIN C_NEXT    ...go to next program (usually the Menu)

.Impact Scheduler Hook
    INC SCHED_NP.SR     ...for jobs that don't use the print system


.#######################################################################
RUN_NOW ROUTINE
+ Configure runtime settings

.Save stack size at program start
    RETCOUNT ORIG_RETURN

.Set applicable traps
    TRAPSAVE TRAP_DATA
    TRAPCLR ALL
    TRAP QUIT NORESET IF F9

.Get run date
    CLOCK TIMESTAMP INTO CURRDATE

    MOVE "A2308151" TO C_PROG        ...Program name
    MOVE "CLEAN LIFE RATES" TO C_OPER  ...Program description
    MOVE "MENU" TO C_NEXT
    MOVE "RUN_NOW" TO C_LABEL
    MOVE BLANKS TO C_FILE
    MOVE BLANKS TO C_KEYS

.Check if the program was called from the command line
    IF (C_CMDPAR)
        CALL CMD_START USING C_PROG
    ELSE
        CALL X_BLANK_SCREEN
    ENDIF

.Configure test options based on file mode. Default is Production
    CALL UTIL_SET_TESTMODE USING PARAM_TEST:  ...scheduler param
                                 ENABLE_TEST:  ...test toggle
                                 TEST_CONFIG  ...test settings list

.Set up run mode or build SCH record
    CALL SCHED_PICK

    SWITCH RUN_MODE
        CASE "N" | "B"
            CALL MAIN_PROCESS
        DEFAULT
    ENDSWITCH

    CALL NORMAL_EOJ

    RETURN
    ENDROUTINE


.#######################################################################
MAIN_PROCESS LROUTINE
+ Core logic
    debug
    CALL INITIALIZE
    CALL CLEAN_RATES
    CALL CLEAN_UP

    RETURN
    ENDROUTINE


.#######################################################################
INITIALIZE LROUTINE
+ Setup runtime variables
    CLOCK TIMESTAMP TO CURRDATE
    CLOCK CALENDAR TO START_DATETIME

.Get the files and EDI locations from valid 101
    CALL UTIL_GET_SYS_DIRS_COMMON

    CALL UTIL_INIT_COUNTERS USING "Active Life Rates":
                                  "Creates":
                                  "Updates":
                                  "Skipped":
                                  "Issues":
                                  ""

    CALL SET_RUN_CONFIG

    RETURN
    ENDROUTINE


.#######################################################################
SET_RUN_CONFIG LROUTINE
+ Configure any runtime settings here

    IF (TEST_SKIP_RF)
        CALL UTIL_EXISTS USING IN_FILE,"FILE"
        IF NOT EQUAL
            CLEAR TEST_SKIP_RF
        ENDIF
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
CLEAN_RATES LROUTINE

.Find all active LIFE ART as of 1/1/24
    CALL FIND_ACTIVE_ART

    CALL OPEN_OGBFILE USING IN_FD,IN_FILE
    CALL PREP_OGBFILE USING LOG_FD,LOG_FILE
    CALL WRITE_OGBREC_SEQ USING LOG_FD,LOG_FILE,LOG_HEADER

    CALL UTIL_XMESSAGE USING "Processing rates...",MSG_HEIGHT

    debug
.Questions:
.   TODO: What riders are allowed on WAIV life?
.   TODO: What riders are allowed on FROZ life?
    LOOP
        CLEAR BASE_RATE,CLEANED_RATE

        CALL READ_OGBFILE_SEQ USING IN_FD,IN_FILE,IN_LIST
        WHILE (RESULT = 1)

        CALL UTIL_XCOUNTER USING X_CNT1,REFRESH_RATE

        CALL UTIL_RATE_FIND USING IN_ID
        IF NOT EQUAL
            debug
            CONTINUE
        ENDIF

        IF (CFG_IGNORE_WAIV)
            IF (CHOP ART_PLAN = "WAIV")
                CALL WRITE_LOG USING "SKIP","Config set to ignore Waived Life"
                CONTINUE
            ENDIF
        ENDIF

        IF (CFG_IGNORE_FROZ)
            IF (CHOP ART_PLAN = "FROZ")
                CALL WRITE_LOG USING "SKIP","Config set to ignore Frozen Life"
                CONTINUE
            ENDIF
        ENDIF

        CONTINUE IF (CHOP ART_TRM > "" & ART_TRM < NEW_TRM)

        IF (CHOP ART_TRM = NEW_TRM)
            debug
            CALL WRITE_LOG USING "SKIP",("Rate already termed for "+NEW_TRM)
            CONTINUE
        ENDIF

        CALL CLEAN_RATE
    REPEAT

    MESSAGEERASE

    CALL CLOSE_OGBFILE USING IN_FD,IN_FILE
    CALL CLOSE_OGBFILE USING LOG_FD,LOG_FILE

    RETURN
    ENDROUTINE


.#######################################################################
FIND_ACTIVE_ART LROUTINE

    RETURN IF (TEST_SKIP_RF)

    CALL UTIL_XMESSAGE USING "Searching for active rates...",MSG_HEIGHT

    PACK SCRATCH WITH "art.dbf ",IN_FILE," 1-8 -t ":
        " -p9-13eq#"LIFE #" -p38-45lt",NEW_EFF," -p46-53eq#"        #" ":
        " or ":
        " -p9-13eq#"LIFE #" -p38-45lt",NEW_EFF," -p46-53ge",NEW_EFF

    CALL UTIL_DO_REFORMAT USING SCRATCH,"Searching for active rates"

    MESSAGEERASE

    RETURN
    ENDROUTINE


.#######################################################################
CLEAN_RATE LROUTINE

    FILL " " IN CLEANED_RATE
    PACK BASE_RATE WITH ART_LIST

    CALL REMOVE_BAD_RIDERS

    RETURN
    ENDROUTINE


.#######################################################################
REMOVE_BAD_RIDERS LROUTINE
    CLEAR RIDER_DATA,RIDER_CNT

    CALL LOAD_RIDERS
    CALL FILTER_RIDERS
    CALL REPLACE_RIDERS
    CALL UPDATE_RATE

    RETURN
    ENDROUTINE


.#######################################################################
LOAD_RIDERS LROUTINE
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT1,ART_TYP1,ART_WHO1
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT2,ART_TYP2,ART_WHO2
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT3,ART_TYP3,ART_WHO3
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT4,ART_TYP4,ART_WHO4
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT5,ART_TYP5,ART_WHO5
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT6,ART_TYP6,ART_WHO6
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT7,ART_TYP7,ART_WHO7
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT8,ART_TYP8,ART_WHO8
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT9,ART_TYP9,ART_WHO9
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT10,ART_TYP10,ART_WHO10
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT11,ART_TYP11,ART_WHO11
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT12,ART_TYP12,ART_WHO12
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT13,ART_TYP13,ART_WHO13
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT14,ART_TYP14,ART_WHO14
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT15,ART_TYP15,ART_WHO15
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT16,ART_TYP16,ART_WHO16
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT17,ART_TYP17,ART_WHO17
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT18,ART_TYP18,ART_WHO18
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT19,ART_TYP19,ART_WHO19
    CALL ADD_RIDER_TO_ARRAY USING ART_AMT20,ART_TYP20,ART_WHO20

    RETURN
    ENDROUTINE


.#######################################################################
ADD_RIDER_TO_ARRAY LROUTINE AMT@,TYPE@,WHO@
AMT@        CHAR    @
TYPE@       CHAR    @
WHO@        CHAR    @
...
    FILL " " IN RIDER_DETAILS
    PACK RIDER_AMT WITH AMT@,BLANKS
    PACK RIDER_TYPE WITH TYPE@,BLANKS
    PACK RIDER_WHO WITH WHO@,BLANKS

    CALL UTIL_SAFE_PACK_ARRAY_LIST USING RIDER_DETAILS,RIDER_DATA,RIDER_CNT,RIDER_MAX

    RETURN
    ENDROUTINE


.#######################################################################
FILTER_RIDERS LROUTINE
+ Go through the 20 riders/rate types and clear any from the array we
+ do not want on the clean rate
IDX         NUM     7
...
    UNPACK BASE_RATE INTO ART_LIST

    FOR IDX FROM 1 TO RIDER_MAX
        UNPACK RIDER_DATA[IDX] INTO RIDER_DETAILS

        SWITCH RIDER_TYPE

.Base Life billing types
            CASE "PRLI" | "PRAD"
                CONTINUE

.Basic Life Riders
            CASE "DLBL" | "DLBH"
                SWITCH ART_PLAN
                    CASE "BASI" | "GBAS"
                    CASE "SUPP" | "GSUP"
                        CLEAR RIDER_DATA[IDX]
                    DEFAULT
                        debug .what is this?
                        CONTINUE
                ENDSWITCH

.Supplemental Life Riders
            CASE "DLSL" | "DLSH"
                SWITCH ART_PLAN
                    CASE "BASI" | "GBAS"
                        CLEAR RIDER_DATA[IDX]
                    CASE "SUPP" | "GSUP"
                    DEFAULT
                        debug .what is this?
                        CONTINUE
                ENDSWITCH

.Grandfathered life riders
            CASE "DLG1" | "DLG2" | "DLG3" | "DLG4" | "DLG5"

.TODO: SUPP only?

.Clear these from all rates
            CASE "OLE?" | "OLS?" | "OLC?" | "PE??" | "PF??"
                CLEAR RIDER_DATA[IDX]
            CASE "WAIV"
                IF (CFG_IGNORE_WAIV)
                    debug
                    CALL UTIL_ERRORMSG USING "WAIV bill type on non-WAIV plan"
                ENDIF
            DEFAULT
                IF (CHOP RIDER_TYPE = "")
                    CLEAR RIDER_DATA[IDX]
                    CONTINUE
                ENDIF

                debug .what is this?
                CONTINUE
        ENDSWITCH
    REPEAT

    RETURN
    ENDROUTINE


.#######################################################################
REPLACE_RIDERS LROUTINE
IDX             NUM     6
WHICH_RIDER     NUM     3
...
    UNPACK BASE_RATE INTO ART_LIST

    FILL " " IN ART_AMT1,ART_TYP1,ART_WHO1:
                ART_AMT2,ART_TYP2,ART_WHO2:
                ART_AMT3,ART_TYP3,ART_WHO3:
                ART_AMT4,ART_TYP4,ART_WHO4:
                ART_AMT5,ART_TYP5,ART_WHO5:
                ART_AMT6,ART_TYP6,ART_WHO6:
                ART_AMT7,ART_TYP7,ART_WHO7:
                ART_AMT8,ART_TYP8,ART_WHO8:
                ART_AMT9,ART_TYP9,ART_WHO9:
                ART_AMT10,ART_TYP10,ART_WHO10:
                ART_AMT11,ART_TYP11,ART_WHO11:
                ART_AMT12,ART_TYP12,ART_WHO12:
                ART_AMT13,ART_TYP13,ART_WHO13:
                ART_AMT14,ART_TYP14,ART_WHO14:
                ART_AMT15,ART_TYP15,ART_WHO15:
                ART_AMT16,ART_TYP16,ART_WHO16:
                ART_AMT17,ART_TYP17,ART_WHO17:
                ART_AMT18,ART_TYP18,ART_WHO18:
                ART_AMT19,ART_TYP19,ART_WHO19:
                ART_AMT20,ART_TYP20,ART_WHO10

    MOVE 0 TO WHICH_RIDER

    FOR IDX FROM 1 TO RIDER_MAX
        CONTINUE IF (CHOP RIDER_DATA[IDX] = "")

        ADD 1 TO WHICH_RIDER
        IF (WHICH_RIDER > RIDER_MAX)
            debug
            CALL UTIL_ERRORMSG USING "Impossible number of riders"
        ENDIF

        SWITCH WHICH_RIDER
            CASE 1
                UNPACK RIDER_DATA[IDX] INTO ART_AMT1,ART_TYP1,ART_WHO1
            CASE 2
                UNPACK RIDER_DATA[IDX] INTO ART_AMT2,ART_TYP2,ART_WHO2
            CASE 3
                UNPACK RIDER_DATA[IDX] INTO ART_AMT3,ART_TYP3,ART_WHO3
            CASE 4
                UNPACK RIDER_DATA[IDX] INTO ART_AMT4,ART_TYP4,ART_WHO4
            CASE 5
                UNPACK RIDER_DATA[IDX] INTO ART_AMT5,ART_TYP5,ART_WHO5
            CASE 6
                UNPACK RIDER_DATA[IDX] INTO ART_AMT6,ART_TYP6,ART_WHO6
            CASE 7
                UNPACK RIDER_DATA[IDX] INTO ART_AMT7,ART_TYP7,ART_WHO7
            CASE 8
                UNPACK RIDER_DATA[IDX] INTO ART_AMT8,ART_TYP8,ART_WHO8
            CASE 9
                UNPACK RIDER_DATA[IDX] INTO ART_AMT9,ART_TYP9,ART_WHO9
            CASE 10
                UNPACK RIDER_DATA[IDX] INTO ART_AMT10,ART_TYP10,ART_WHO10
            CASE 11
                UNPACK RIDER_DATA[IDX] INTO ART_AMT11,ART_TYP11,ART_WHO11
            CASE 12
                UNPACK RIDER_DATA[IDX] INTO ART_AMT12,ART_TYP12,ART_WHO12
            CASE 13
                UNPACK RIDER_DATA[IDX] INTO ART_AMT13,ART_TYP13,ART_WHO13
            CASE 14
                UNPACK RIDER_DATA[IDX] INTO ART_AMT14,ART_TYP14,ART_WHO14
            CASE 15
                UNPACK RIDER_DATA[IDX] INTO ART_AMT15,ART_TYP15,ART_WHO15
            CASE 16
                UNPACK RIDER_DATA[IDX] INTO ART_AMT16,ART_TYP16,ART_WHO16
            CASE 17
                UNPACK RIDER_DATA[IDX] INTO ART_AMT17,ART_TYP17,ART_WHO17
            CASE 18
                UNPACK RIDER_DATA[IDX] INTO ART_AMT18,ART_TYP18,ART_WHO18
            CASE 19
                UNPACK RIDER_DATA[IDX] INTO ART_AMT19,ART_TYP19,ART_WHO19
            CASE 20
                UNPACK RIDER_DATA[IDX] INTO ART_AMT20,ART_TYP20,ART_WHO20
        ENDSWITCH
    REPEAT

    PACK CLEANED_RATE WITH ART_LIST

    RETURN
    ENDROUTINE


.#######################################################################
UPDATE_RATE LROUTINE

    UNPACK CLEANED_RATE INTO ART_LIST

    PACK ART_EFF WITH NEW_EFF
    FILL " " IN ART_ID1

    PACK CLEANED_RATE WITH ART_LIST

    IF (CHOP ART_TRM > "" & ART_EFF > ART_TRM)
        debug
        CALL UTIL_ERRORMSG USING "Trying to create a voided ART - how?"
    ENDIF

.Check if the cleaned rate matches a ART record in Impact -> error
    CALL CHECK_IF_NEW_RATE_EXISTS
    RETURN IF (CHOP CLEANED_RATE = "")

.Create the new rider
    UNPACK CLEANED_RATE INTO ART_LIST
    IF (CHOP ART_ID1 = "")
        CALL WRITE_TO_ART USING "CREATE",("Creating new rate for "+NEW_EFF)
    ELSE
        CALL WRITE_TO_ART USING "UPDATE",("Updated 2024 rate with new riders")
    ENDIF

.Update the base rider with a term
    UNPACK BASE_RATE INTO ART_LIST
    IF (ART_TRM = NEW_TRM)
        CALL WRITE_TO_ART USING "SKIP",("Old rate already termed for "+NEW_TRM)
        RETURN
    ENDIF

    PACK ART_TRM WITH NEW_TRM,BLANKS

    CALL WRITE_TO_ART USING "UPDATE",("Termed current rate for "+NEW_TRM)

    RETURN
    ENDROUTINE


.#######################################################################
CHECK_IF_NEW_RATE_EXISTS LROUTINE
+ See if a rate exists that matches
FOUND_MATCH     NUM     1
RIDERS_MATCH    NUM     1
MATCH_RIDERS    CHAR    500
TEST_RIDERS     CHAR    500
RIDER_LIST      VARLIST ART_TYP1,ART_TYP2,ART_TYP3,ART_TYP4,ART_TYP5:
                        ART_TYP6,ART_TYP7,ART_TYP8,ART_TYP9,ART_TYP10:
                        ART_TYP11,ART_TYP12,ART_TYP13,ART_TYP14,ART_TYP15:
                        ART_TYP16,ART_TYP17,ART_TYP18,ART_TYP19,ART_TYP20
...
    UNPACK CLEANED_RATE INTO ART_LIST
    PACK MATCH_RIDERS WITH RIDER_LIST

    CLEAR ART_AIM

    PACK ART_AIM1 WITH "01X",ART_NET,BLANKS
    PACK ART_AIM2 WITH "02X",ART_PRD,BLANKS
    PACK ART_AIM4 WITH "04X",ART_PLAN,BLANKS
    PACK ART_AIM5 WITH "05X",ART_RT,BLANKS
    PACK ART_AIM6 WITH "06X",ART_DEPC,BLANKS
    PACK ART_AIM8 WITH "08X",ART_LAGE,BLANKS
    PACK ART_AIM9 WITH "09X",ART_CLIR,BLANKS

    CLEAR ART_LIST:
          FOUND_MATCH:
          RIDERS_MATCH
    LOOP
        IF (CHOP ART_ID1 = "")
            CALL UTIL_RATE_AIMFIND
        ELSE
            CALL UTIL_RATE_AIMNEXT
        ENDIF
        WHILE EQUAL

        CONTINUE IF (ART_EFF != NEW_EFF)

        SET FOUND_MATCH

        PACK TEST_RIDERS WITH RIDER_LIST
        IF (TEST_RIDERS = MATCH_RIDERS)
            CALL WRITE_LOG USING "LOG","Found new rate in Impact. Riders match (current art data)"
            SET RIDERS_MATCH
        ELSE
            CALL WRITE_LOG USING "LOG","Found new rate in Impact. Riders do not match (current art data)"
        ENDIF
        BREAK
    REPEAT

    IF (RIDERS_MATCH)
        CALL WRITE_LOG USING "SKIP","New rate already exists & riders match"
        CLEAR CLEANED_RATE
        RETURN
    ENDIF

    IF (FOUND_MATCH)
        CALL WRITE_LOG USING "LOG","New rate already exists & riders do not match - will update"
        PACK SCRATCH WITH ART_ID1
        UNPACK CLEANED_RATE INTO ART_LIST
        PACK ART_ID1 WITH SCRATCH
        PACK CLEANED_RATE WITH ART_LIST
        RETURN
    ENDIF

    RETURN
    ENDROUTINE


.#######################################################################
WRITE_TO_ART LROUTINE LOGTYPE@,LOGMSG@
LOGTYPE@        CHAR    @
LOGMSG@         CHAR    @
...
    PACK ART_CHGBY WITH PROG_ID,BLANKS
    PACK ART_CHGDT WITH CURRDATE
    IF (CHOP ART_ID1 = "")
        PACK ART_NEWBY WITH ART_CHGBY
        PACK ART_NEWDT WITH ART_CHGDT
    ENDIF

    CALL FORMAT_RATE_AMOUNTS

    CALL WRITE_LOG USING LOGTYPE@,LOGMSG@

.No spouse rates - skip ARTS copy
.No fees - ignore ARTF

    RETURN IF NOT (CFG_ALLOW_UPDATE)
    RETURN IF (TEST_SKIP_UPDATE)

    debug .last stop before write

    CALL FILE_WRITE USING   ART_FD:     ...File declaration list
                            ART_FN:     ...File name list
                            ART_FC:     ...(I)ndex or (A)imdex
                            ART_FV:     ...File key varlists
                            ART_FK:     ...File key sizes
                            ART_LIST:   ...File record (field list)
                            ART_REC:    ...File record (packed)
                            ART_OLD:    ...File saved when read
                            ART_QTY:    ...Number of files
                            1           ...File number for this read
    RETURN
    ENDROUTINE


.#######################################################################
FORMAT_RATE_AMOUNTS LROUTINE
    CALL FORMAT_AMT USING ART_AMT1
    CALL FORMAT_AMT USING ART_AMT2
    CALL FORMAT_AMT USING ART_AMT3
    CALL FORMAT_AMT USING ART_AMT4
    CALL FORMAT_AMT USING ART_AMT5
    CALL FORMAT_AMT USING ART_AMT6
    CALL FORMAT_AMT USING ART_AMT7
    CALL FORMAT_AMT USING ART_AMT8
    CALL FORMAT_AMT USING ART_AMT9
    CALL FORMAT_AMT USING ART_AMT10
    CALL FORMAT_AMT USING ART_AMT11
    CALL FORMAT_AMT USING ART_AMT12
    CALL FORMAT_AMT USING ART_AMT13
    CALL FORMAT_AMT USING ART_AMT14
    CALL FORMAT_AMT USING ART_AMT15
    CALL FORMAT_AMT USING ART_AMT16
    CALL FORMAT_AMT USING ART_AMT17
    CALL FORMAT_AMT USING ART_AMT18
    CALL FORMAT_AMT USING ART_AMT19
    CALL FORMAT_AMT USING ART_AMT20
    RETURN
    ENDROUTINE


.#######################################################################
FORMAT_AMT LROUTINE AMT@
AMT@        CHAR    @
FORM7.2     NUM     7.2
...
    CLEAR FORM7.2
    MOVE (SQUEEZE AMT@) TO FORM7.2
    MOVE FORM7.2 TO AMT@
    RETURN
    ENDROUTINE


.#######################################################################
WRITE_LOG LROUTINE LOGTYPE@,LOGMSG@
LOGTYPE@        CHAR    @
LOGMSG@         CHAR    @
...
    SWITCH LOGTYPE@
        CASE "CREATE"
            CALL UTIL_XCOUNTER USING X_CNT2,REFRESH_RATE
        CASE "UPDATE"
            CALL UTIL_XCOUNTER USING X_CNT3,REFRESH_RATE
        CASE "SKIP"
            CALL UTIL_XCOUNTER USING X_CNT4,REFRESH_RATE
        CASE "LOG"
            CALL UTIL_XCOUNTER USING X_CNT5,REFRESH_RATE
    ENDSWITCH

    PACK LOG_REC WITH   IN_ID,COMMA:
                        LOGTYPE@,COMMA:
                        LOGMSG@,COMMA:
                        (CHOP ART_ID1),COMMA:
                        (CHOP ART_EFF),COMMA:
                        (CHOP ART_TRM),COMMA:
                        (CHOP ART_NET),COMMA:
                        (CHOP ART_PRD),COMMA:
                        (CHOP ART_PLAN),COMMA:
                        (CHOP ART_RT),COMMA:
                        (CHOP ART_DEPC),COMMA:
                        (SQUEEZE ART_LAGE),COMMA:
                        (SQUEEZE ART_HAGE),COMMA:
                        (SQUEEZE ART_AMT1),COMMA,(SQUEEZE ART_TYP1),COMMA,(SQUEEZE ART_WHO1),COMMA:
                        (SQUEEZE ART_AMT2),COMMA,(SQUEEZE ART_TYP2),COMMA,(SQUEEZE ART_WHO2),COMMA:
                        (SQUEEZE ART_AMT3),COMMA,(SQUEEZE ART_TYP3),COMMA,(SQUEEZE ART_WHO3),COMMA:
                        (SQUEEZE ART_AMT4),COMMA,(SQUEEZE ART_TYP4),COMMA,(SQUEEZE ART_WHO4),COMMA:
                        (SQUEEZE ART_AMT5),COMMA,(SQUEEZE ART_TYP5),COMMA,(SQUEEZE ART_WHO5),COMMA:
                        (SQUEEZE ART_AMT6),COMMA,(SQUEEZE ART_TYP6),COMMA,(SQUEEZE ART_WHO6),COMMA:
                        (SQUEEZE ART_AMT7),COMMA,(SQUEEZE ART_TYP7),COMMA,(SQUEEZE ART_WHO7),COMMA:
                        (SQUEEZE ART_AMT8),COMMA,(SQUEEZE ART_TYP8),COMMA,(SQUEEZE ART_WHO8),COMMA:
                        (SQUEEZE ART_AMT9),COMMA,(SQUEEZE ART_TYP9),COMMA,(SQUEEZE ART_WHO9),COMMA:
                        (SQUEEZE ART_AMT10),COMMA,(SQUEEZE ART_TYP10),COMMA,(SQUEEZE ART_WHO10),COMMA:
                        (SQUEEZE ART_AMT11),COMMA,(SQUEEZE ART_TYP11),COMMA,(SQUEEZE ART_WHO11),COMMA:
                        (SQUEEZE ART_AMT12),COMMA,(SQUEEZE ART_TYP12),COMMA,(SQUEEZE ART_WHO12),COMMA:
                        (SQUEEZE ART_AMT13),COMMA,(SQUEEZE ART_TYP13),COMMA,(SQUEEZE ART_WHO13),COMMA:
                        (SQUEEZE ART_AMT14),COMMA,(SQUEEZE ART_TYP14),COMMA,(SQUEEZE ART_WHO14),COMMA:
                        (SQUEEZE ART_AMT15),COMMA,(SQUEEZE ART_TYP15),COMMA,(SQUEEZE ART_WHO15),COMMA:
                        (SQUEEZE ART_AMT16),COMMA,(SQUEEZE ART_TYP16),COMMA,(SQUEEZE ART_WHO16),COMMA:
                        (SQUEEZE ART_AMT17),COMMA,(SQUEEZE ART_TYP17),COMMA,(SQUEEZE ART_WHO17),COMMA:
                        (SQUEEZE ART_AMT18),COMMA,(SQUEEZE ART_TYP18),COMMA,(SQUEEZE ART_WHO18),COMMA:
                        (SQUEEZE ART_AMT19),COMMA,(SQUEEZE ART_TYP19),COMMA,(SQUEEZE ART_WHO19),COMMA:
                        (SQUEEZE ART_AMT20),COMMA,(SQUEEZE ART_TYP20),COMMA,(SQUEEZE ART_WHO20)

    CALL WRITE_OGBREC_SEQ USING LOG_FD,LOG_FILE,LOG_LIST

    RETURN
    ENDROUTINE


.#######################################################################
CLEAN_UP LROUTINE
+ Cleanup work files and handle output files
    debug
    CLOCK CALENDAR INTO END_DATETIME

    CALL UTIL_TRIM_TRAILING_SPACE USING LOG_FILE,LOG_FILE

    CALL EMAIL_NEOJ

    RETURN
    ENDROUTINE


.#######################################################################
EMAIL_NEOJ LROUTINE
REPORT@         CHAR    @
RECIPIENTS      CHAR    200
SUBJECT         CHAR    100
BODY            CHAR    1000
BODY_BASE       CHAR    1000
...
    PACK SCRATCH WITH "Life Rate Cleanup 2024"

    CALL UTIL_SET_SUBJECT USING SCRATCH,ENABLE_TEST,SUBJECT

    PACK BODY_BASE WITH "":
        "Attached is a report of rate modifications made to Life ":
        "enrollments effective ",NEW_TRM," to remove unbillable riders."

    CALL UTIL_PACK_BODY_AND_COUNTERS USING BODY,BODY_BASE

    CALL UTIL_SET_RECIPIENTS USING RECIPIENTS,EMAIL_TO,TEST_EMAIL
    CALL UTIL_EMAIL_NEOJ USING  C_PROG:
                                RECIPIENTS:
                                SUBJECT:
                                BODY:
                                START_DATETIME:
                                END_DATETIME:
                                LOG_FILE
    RETURN
    ENDROUTINE


.# =================================================================== #
.# Subroutines Includes
.# =================================================================== #
    INC UTIL_COMMON.SR
    INC UTIL_TABLE_IO.SR
    INC UTIL_TEST.SR
    INC UTIL_SYSTEM.SR
    INC UTIL_DATA.SR
    INC UTIL_EMAIL.SR
    INC UTIL_MEMBERS.SR     .MEM* io routines
    INC UTIL_BILLING.SR     .BIL* io routines
    INC UTIL_CLIENTS.SR     .CLI* io routines
    INC UTIL_ART.SR

.# =================================================================== #
.# End of Program
.# =================================================================== #
