++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ NAME:
+   a2306291.ps
+
+ DESCRIPTION:
+   Vantage Plan Ending (all except MHHP)- default to BLUE CROSS
+
+ CREATED BY:
+   aphas - 2023-06-29
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.# =================================================================== #
.# Variable Includes
.# =================================================================== #
    INC VALID.RL
    INC UTIL_COMMON.CB
    INC UTIL_MEMMEM.CB
    INC MEMU.RL
    INC CLI.RL
    INC XALID.RL
.# =================================================================== #
.# Scheduler Parameters
.# =================================================================== #

PARAM_LIST          LIST WITH NAMES
PARAM_TEST          CHAR    4
                    LISTEND

.# =================================================================== #
.# Equates for code clarity
.# =================================================================== #

V_FLAG              EQU     1   ...0 or 1
V_DATE              EQU     8   ...YYYYMMDD
MSG_HEIGHT          EQU     24
REFRESH_RATE        EQU     1000

.# =================================================================== #
.# Configuration
.# =================================================================== #

PROG_ID             INIT    "TRMVAN"
EMAIL_TO_NOERROR    INIT    "$ITAPPS"
EMAIL_TO_ERROR      INIT    "$ITAPPS"
NEW_TERM_DATE       INIT    "20231231"
NEW_EFF_DATE        INIT    "20240101"
NEW_NETWORK         INIT    "BLU65"
NEW_PRODUCT         INIT    "HMO65"


.# =================================================================== #
.# Debugging Configuration
.# =================================================================== #

ENABLE_TEST         NUM     V_FLAG
TEST_CONFIG         LIST
TEST_EMAIL_TO       INIT    "$CURRENT_USER_EMAIL"
.TEST_THIS_ID        INIT    "00000964"
                    LISTEND

.# =================================================================== #
.# File Declarations
.# =================================================================== #

WORK_FD             FILE    FIXED=X_MEME_SIZE,TEXT
WORK_FILE           INIT    "/w/tmp/a2306291.id.wrk"

UPDATE_FD           FILE    FIXED=X_INM_SIZE,TEXT
UPDATE_FILE         INIT    "a2306291.upd"

REPORT_FD           FILE    VAR=200,TEXT
REPORT_FILE         INIT    "/w/tmp/a2306291.csv"

.# =================================================================== #
.# File lists
.# =================================================================== #

WORK_LIST           LIST
WORK_ID             CHAR    8
                    LISTEND

REPORT_LIST         LIST
REPORT_REC          CHAR    200
                    LISTEND

REPORT_HEADER       VARLIST "MEME_ID,":
                            "LAST NAME,":
                            "FIRST NAME,":
                            "RELATION,":
                            "LEV1,":
                            "LEV2,":
                            "MEME EFF,":
                            "MEME TRM,":
                            "NETWORK,":
                            "PRODUCT,":
                            "ZIP CODE,":
                            "UPDATE STATUS"

.# =================================================================== #
.# Program Variables
.# =================================================================== #

CURRDATE            CHAR    V_DATE
START_DATETIME      CHAR    24
END_DATETIME        CHAR    24
FOUND_INSTANCE      NUM     1
ORIG_EFF            CHAR    8
ORIG_TRM            CHAR    8
ORIG_TLET           CHAR    1
ORIG_TRUN           CHAR    8
VOID_DATE           CHAR    8
DIM5A               DIM     5
ZIP_FAIL            NUM     1
NEW_PLAN            CHAR    5


.# =================================================================== #
.# Begin Program
.# =================================================================== #
.Manual and Autosys
    CALL RUN_NOW
    CHAIN C_NEXT    ...go to next program (usually the Menu)

.Impact Scheduler Hook
    INC SCHED_NP.SR     ...for jobs that don't use the print system


.#######################################################################
RUN_NOW ROUTINE
+ Configure runtime settings

.Save stack size at program start
    RETCOUNT ORIG_RETURN

.Set applicable traps
    TRAPSAVE TRAP_DATA
    TRAPCLR ALL
    TRAP QUIT NORESET IF F9

.Get run date
    CLOCK TIMESTAMP INTO CURRDATE

    MOVE "a2306291" TO C_PROG        ...Program name
    MOVE "VANTA TO HMO" TO C_OPER  ...Program description
    MOVE "MENU" TO C_NEXT
    MOVE "RUN_NOW" TO C_LABEL
    MOVE BLANKS TO C_FILE
    MOVE BLANKS TO C_KEYS

.Check if the program was called from the command line
    IF (C_CMDPAR)
        CALL CMD_START USING C_PROG
    ELSE
        CALL X_BLANK_SCREEN
    ENDIF

.Configure test options based on file mode. Default is Production
    CALL UTIL_SET_TESTMODE USING PARAM_TEST:  ...scheduler param
                                 ENABLE_TEST:  ...test toggle
                                 TEST_CONFIG  ...test settings list

.Set up run mode or build SCH record
    CALL SCHED_PICK

    SWITCH RUN_MODE
        CASE "N" | "B"
            CALL MAIN_PROCESS
        DEFAULT
    ENDSWITCH

    CALL NORMAL_EOJ

    RETURN
    ENDROUTINE


.#######################################################################
MAIN_PROCESS LROUTINE
+ MEME reformat of all members with VANTA MHHP
+ Term the active VANTA MHHP coverage for 12/31/23
+ Create new BLUE-LOCL-PLUS record eff 1/1/24
    debug
    CALL INITIALIZE
    CALL MEME_REFORMAT
    CALL CONVERT_PLAN
    CALL CLEAN_UP

    RETURN
    ENDROUTINE


.#######################################################################
INITIALIZE LROUTINE
+ Setup runtime variables
    CLOCK TIMESTAMP TO CURRDATE
    CLOCK CALENDAR TO START_DATETIME

.Get the files and EDI locations from valid 101
    CALL UTIL_GET_SYS_DIRS_COMMON

    CALL UTIL_INIT_COUNTERS USING "Building Work File":
                                  "Find Plan based on Zip":
                                  "Log Updates":
                                  "Write Update":
                                  "":
                                  ""

    RETURN
    ENDROUTINE


.#######################################################################
MEME_REFORMAT LROUTINE
+ Sort MEME records for VANTA plans other then MHHP

    CALL UTIL_XMESSAGE USING "Building work files...",MSG_HEIGHT

.Find current cov before new term
    PACK SCRATCH USING MEME_FNS," ",WORK_FILE," -t":
                        " -p0112-0116eq#"VANTA#"":
                        " -p0117-0121ne#"MHHP#"":
                        " -p0104-0111gt#"20231231#""

    CALL UTIL_DO_REFORMAT USING SCRATCH,"Finding MEME Data"

.Find cov before today
    PACK DATE_CCYYMMDD WITH BLANKS
    PACK SCRATCH USING MEME_FNS," ",WORK_FILE," -t -a":
                        " -p0112-0116eq#"VANTA#"":
                        " -p0117-0121ne#"MHHP#"":
                        " -p0104-0111eq#"",DATE_CCYYMMDD,"#""

    CALL UTIL_DO_REFORMAT USING SCRATCH,"Finding MEME Data"

.Sort file
    PACK SCRATCH WITH WORK_FILE, " ", WORK_FILE," 1-12 -t"
    CALL UTIL_DO_SORT USING SCRATCH, "Sorting work file"

    MESSAGEERASE

    RETURN
    ENDROUTINE

.#######################################################################
CONVERT_PLAN LROUTINE
+ Open and Prepare Files for Program
    debug
    CALL OPEN_OGBFILE USING WORK_FD,WORK_FILE
    CALL PREP_OGBFILE USING UPDATE_FD,UPDATE_FILE

    CALL PREP_OGBFILE USING REPORT_FD, REPORT_FILE
    CALL WRITE_OGBREC_SEQ USING REPORT_FD, REPORT_FILE, REPORT_HEADER

    LOOP
        CALL READ_OGBFILE_SEQ USING WORK_FD, WORK_FILE, MEME_LIST
        WHILE (RESULT = 1)

        CALL UTIL_MEM_FIND USING MEME_ID1
        CONTINUE IF NOT EQUAL

.skip voids
        IF (CHOP MEME_TRM > " ")
            IF (CHOP MEME_TRM < MEME_EFF)
                CONTINUE
            ENDIF
        ELSE
            FILL "~" IN MEME_TLET
        ENDIF

        CALL UTIL_XCOUNTER USING X_CNT1,1000
.Find Reigon using Physical address or Mailing address
        CALL UTIL_GET_ACTIVE_MEMU USING MEME_ID1,CURRDATE
        IF EQUAL
            debug
            CONTINUE IF (MEM_ID1 <> MEMU_ID1)
            CALL FIND_RGN USING MEMU_P
        ELSE
            debug
            CALL FIND_RGN USING MEM_ZIP
        ENDIF

    REPEAT

    CALL CLOSE_OGBFILE USING UPDATE_FD,UPDATE_FILE
    CALL CLOSE_OGBFILE USING WORK_FD,WORK_FILE
    CALL UTIL_DELETE_FILE USING WORK_FILE

    RETURN
    ENDROUTINE


.#######################################################################
FIND_RGN LROUTINE VAL@ZIP
+Find what Reigon member's zip is in
VAL@ZIP     DIM     @
    debug
    CLEAR NEW_PLAN

    CALL ZIP_TEST USING "RG1",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN1"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF

    CALL ZIP_TEST USING "RG2",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN2"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF

    CALL ZIP_TEST USING "RG3",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN3"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF

    CALL ZIP_TEST USING "RG4",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN4"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF

    CALL ZIP_TEST USING "RG5",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN5"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF

    CALL ZIP_TEST USING "RG6",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN6"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF

    CALL ZIP_TEST USING "RG7",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN7"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF

    CALL ZIP_TEST USING "RG8",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN8"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF

    CALL ZIP_TEST USING "RG9",VAL@ZIP
        IF NOT (ZIP_FAIL)
            PACK NEW_PLAN WITH "RGN9"
            CALL LOG_UPDATES USING VAL@ZIP,"Updated"
            CALL UPDATE_PLAN
            RETURN
        ENDIF
.If ZIP is not found
    debug
    IF (MEM_STATE = "LA")
        CALL LOG_UPDATES USING VAL@ZIP,"ZIP is not in region"
    ELSE
        CALL LOG_UPDATES USING VAL@ZIP,"ZIP is out of state"
    ENDIF

    CALL UTIL_XCOUNTER USING X_CNT2,50

    RETURN
    ENDROUTINE


.#######################################################################
ZIP_TEST LROUTINE ZIP@XAL,ZIP@
+find zip code in table
ZIP@XAL     DIM @
ZIP@        DIM @

    SET ZIP_FAIL

    PACK DIM5A WITH ZIP@
    RETURN IF (SQUEEZE DIM5A = "")
    PACK XAL_KEY1 WITH ZIP@XAL,DIM5A,BLANKS
    CALL XAL_READ1

    IF (RESULT = 1)
        CLEAR  ZIP_FAIL
        RETURN
    ENDIF

    LOOP
        CALL XAL_NEXT1
        BREAK IF (RESULT <> 1)
        BREAK IF (XAL_TYPE <> ZIP@XAL)

        MATCH DIM5A WITH XAL_CODE
        BREAK IF NOT EQUAL

        CONTINUE IF (NEW_EFF_DATE < XAL_EFF)
        CONTINUE IF (NEW_EFF_DATE > XAL_TRM AND SQUEEZE XAL_TRM > "")

        CLEAR ZIP_FAIL

        BREAK
    REPEAT

    RETURN
    ENDROUTINE


.#######################################################################
LOG_UPDATES LROUTINE ZIP_USED@,UPDATE_MSG@
ZIP_USED@       DIM     @
UPDATE_MSG@     DIM     @
+ Log coverage update

    SET FOUND_INSTANCE
    PACK REPORT_REC WITH (CHOP MEME_ID1),COMMA:
                        (CHOP MEM_LNAME),COMMA:
                        (CHOP MEM_FNAME),COMMA:
                        (CHOP MEM_REL),COMMA:
                        (CHOP MEME_LEV1),COMMA:
                        (CHOP MEME_LEV2),COMMA:
                        (CHOP MEME_EFF),COMMA:
                        (CHOP MEME_TRM),COMMA:
                        (CHOP MEME_NET),COMMA:
                        (CHOP MEME_PRD),COMMA:
                        (CHOP ZIP_USED@),COMMA:
                        (CHOP UPDATE_MSG@)

    CALL WRITE_OGBREC_SEQ USING REPORT_FD,REPORT_FILE,REPORT_LIST
    CALL UTIL_XCOUNTER USING X_CNT3,50

    RETURN
    ENDROUTINE


.#######################################################################
UPDATE_PLAN LROUTINE
+ Term Vantage and create new Blue Local Plus

.TERM OLD
    FILL " " IN ORIG_TRM:
                ORIG_TLET:
                ORIG_TRUN

    IF (CHOP MEME_TLET > "")
        PACK ORIG_TLET WITH MEME_TLET
    ENDIF
    IF (CHOP MEME_TRUN > "")
        PACK ORIG_TRUN WITH MEME_TRUN
    ENDIF

.If eff date is after void and replace
    IF (MEME_EFF > "20231231")
        debug
        CALL UTIL_CALC_DAY_BEFORE USING MEME_EFF,VOID_DATE
.VOID PLAN
        PACK ORIG_TRM WITH MEME_TRM
        PACK ORIG_EFF WITH MEME_EFF
        PACK MEME_TRM WITH VOID_DATE
        PACK MEME_TLET WITH "V"
        CALL WRITE_UPDATE
        CALL CREATE_NEW USING ORIG_EFF

    ELSE

        PACK ORIG_TRM WITH MEME_TRM
        PACK MEME_TRM WITH NEW_TERM_DATE
        FILL "~" IN MEME_TLET:
                    MEME_TRUN

        CALL WRITE_UPDATE
        CALL CREATE_NEW USING NEW_EFF_DATE
    ENDIF

    RETURN
    ENDROUTINE

.#######################################################################
CREATE_NEW LROUTINE DATE@
+Create new Blue Cross record
DATE@           CHAR    @
    FILL " " IN MEME_ID2
    PACK MEME_EFF WITH DATE@,BLANKS
    PACK MEME_TRM WITH ORIG_TRM,BLANKS
    PACK MEME_TLET WITH ORIG_TLET,BLANKS
    PACK MEME_TRUN WITH ORIG_TRUN,BLANKS

    IF (CHOP MEME_TRM > "" & MEME_TRM < MEME_EFF)
        debug .how?
    ENDIF

    PACK MEME_NET WITH NEW_NETWORK,BLANKS
    PACK MEME_PRD WITH NEW_PRODUCT,BLANKS
    PACK MEME_PLAN WITH NEW_PLAN,BLANKS

    CALL WRITE_UPDATE

    RETURN
    ENDROUTINE


.#######################################################################
WRITE_UPDATE LROUTINE
+ Write update record
    PACK MEME_REC WITH MEME_LIST
    FILL " " IN INM_LIST
    PACKLEN INM_REC WITH MEM_LIST,MEME_LIST
    UNPACK INM_REC INTO INM_LIST

    CALL UTIL_FORMAT_INME USING PROG_ID

    CALL WRITE_OGBREC_SEQ USING UPDATE_FD,UPDATE_FILE,INM_LIST
    CALL UTIL_XCOUNTER USING X_CNT4,50
    RETURN
    ENDROUTINE


.#######################################################################
CLEAN_UP LROUTINE
+ Cleanup work files and handle output files
    CLOCK CALENDAR INTO END_DATETIME
    CALL UTIL_TRIM_TRAILING_SPACE USING REPORT_FILE,REPORT_FILE
    CALL UTIL_PENDING_BACKUP USING "/w/tmp/",REPORT_FILE,""
    CALL UTIL_PENDING_BACKUP USING UTIL_FILES_DIR,UPDATE_FILE,""
    CALL SEND_EMAIL
    CALL UTIL_DELETE_FILE USING REPORT_FILE
    RETURN
    ENDROUTINE


.#######################################################################
SEND_EMAIL LROUTINE
+ Email the report
REPORT@         CHAR    @
RECIPIENTS      CHAR    200
SUBJECT         CHAR    100
BODY            CHAR    1000
BODY_BASE       CHAR    1000
...

    PACK SCRATCH WITH "Vantage default to BLU65 HMO65"
    IF (FOUND_INSTANCE)
        PACK SCRATCH WITH SCRATCH," *UPDATED*"
    ELSE
        PACK SCRATCH WITH SCRATCH," *NO UPDATE REQUIRED*"
    ENDIF

    CALL UTIL_SET_SUBJECT USING SCRATCH,ENABLE_TEST,SUBJECT

    PACK BODY_BASE WITH "":
        "Checking for members with Vantage to term and update. "

    CALL UTIL_PACK_BODY_AND_COUNTERS USING BODY,BODY_BASE

    IF (FOUND_INSTANCE)
        CALL UTIL_SET_RECIPIENTS USING RECIPIENTS,EMAIL_TO_ERROR,TEST_EMAIL_TO
        CALL UTIL_EMAIL_NEOJ USING  C_PROG:
                                    RECIPIENTS:
                                    SUBJECT:
                                    BODY:
                                    START_DATETIME:
                                    END_DATETIME:
                                    REPORT_FILE
    ELSE
        CALL UTIL_SET_RECIPIENTS USING RECIPIENTS,EMAIL_TO_NOERROR,TEST_EMAIL_TO
        CALL UTIL_EMAIL_NEOJ USING  C_PROG:
                                    RECIPIENTS:
                                    SUBJECT:
                                    BODY:
                                    START_DATETIME:
                                    END_DATETIME
    ENDIF

    RETURN
    ENDROUTINE
.# =================================================================== #
.# Subroutines Includes
.# =================================================================== #
    INC UTIL_COMMON.SR
    INC UTIL_TABLE_IO.SR
    INC UTIL_TEST.SR
    INC UTIL_SYSTEM.SR
    INC UTIL_DATA.SR
    INC UTIL_EMAIL.SR
    INC UTIL_FORMAT_UPDATES.SR
    INC UTIL_DATES.SR
    INC UTIL_MEMBERS.SR     .MEM* io routines
    INC UTIL_BILLING.SR     .BIL* io routines
    INC UTIL_CLIENTS.SR     .CLI* io routines

.# =================================================================== #
.# End of Program
.# =================================================================== #
